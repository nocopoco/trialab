[{"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/index.js":"1","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/App.js":"2","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/store.js":"3","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/reducers/index.js":"4","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/components/authPage/AuthPage.js":"5","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/actions/user.js":"6","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/actions/types.js":"7","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/reducers/user.js":"8"},{"size":240,"mtime":1608542594119,"results":"9","hashOfConfig":"10"},{"size":663,"mtime":1608541985867,"results":"11","hashOfConfig":"10"},{"size":399,"mtime":1608557587218,"results":"12","hashOfConfig":"10"},{"size":127,"mtime":1608557671180,"results":"13","hashOfConfig":"10"},{"size":1864,"mtime":1608555039445,"results":"14","hashOfConfig":"10"},{"size":363,"mtime":1608557513260,"results":"15","hashOfConfig":"10"},{"size":58,"mtime":1608555776966,"results":"16","hashOfConfig":"10"},{"size":440,"mtime":1608566445375,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1sprc4o",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/index.js",[],["37","38"],"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/App.js",[],"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/store.js",[],"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/reducers/index.js",[],"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/components/authPage/AuthPage.js",["39"],"import React, { useState } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/user';\nimport PropTypes from 'prop-types';\n\nconst AuthPage = ({ loginUser }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    loginUser(formData);\n    console.log(formData);\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Log-in to your account\n        </Header>\n        <Form size=\"large\" onSubmit={onSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              value={formData.email}\n              onChange={onChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={onChange}\n            />\n\n            <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <a href=\"#\">Sign Up</a>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nAuthPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { loginUser })(AuthPage);\n","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/actions/user.js",["40"],"import axios from 'axios';\nimport { LOGIN } from './types';\n\n//Login user\nexport const loginUser = (formData) => async (dispatch) => {\n  try {\n    console.log('FormData: ' + formData);\n    dispatch({\n      type: LOGIN,\n      payload: formData,\n    });\n    //const res = await axios.get('/api/auth/login', formData);\n  } catch (err) {\n    console.log(err);\n  }\n};\n","/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/actions/types.js",[],"/Users/nicholastan/Desktop/trialab/frontend/trialabfrontend/src/redux/reducers/user.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":63,"column":22,"nodeType":"47","endLine":63,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]