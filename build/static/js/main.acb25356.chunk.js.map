{"version":3,"sources":["redux/actions/types.js","redux/actions/user.js","components/ServerTime/ServerTime.js","components/authPage/AuthPage.js","components/SignupPage/SignupPage.js","components/SideNav/SideOverview.js","components/HomePage/HomePage.js","components/controlPanel/ControlPanel.js","redux/actions/items.js","components/GameUI/ExploreLand/ExploreLand.js","components/GameUI/MyMessages/MyMessages.js","components/GameUI/Buildings/Buildings.js","components/GameUI/Military/MilitaryPage.js","components/GameUI/Attack/Attack.js","components/GameUI/Scoreboard/Scoreboard.js","components/GameUI/Profile/Profile.js","components/GameUI/Profile/CreateEditProfile.js","components/GameUI/Intelligence/Intelligence.js","components/GameUI/News/News.js","redux/reducers/user.js","redux/reducers/items.js","redux/reducers/toDoList.js","redux/reducers/index.js","redux/store.js","components/SideNav/SideNav.js","App.js","index.js"],"names":["LOGIN","INIT_USER","RESET_USER","SIGNUP","GETITEMS","ADDTASKS","initUser","data","dispatch","type","payload","resetUser","dateSetting","timezone","locale","format","localeString","DateTime","DATETIME_FULL_WITH_SECONDS","ServerTime","useImmer","serverTime","local","setZone","setLocale","toFormat","toLocaleString","setServerTime","serverID","serverTicker","isLoading","setServerTicker","done","serverDoneTicking","setServerDoneTicking","useEffect","interval","setInterval","draft","clearInterval","a","axios","get","serverTick","_id","tick","getServerTicker","plusServerTicker","Header","as","style","color","now","parseInt","tickerTimer","connect","state","user","loginUser","formData","history","post","res","push","alert","withRouter","email","password","setFormData","errors","formErrors","setFormErrors","onChange","e","target","name","value","Helmet","isAuthenticated","to","Grid","textAlign","height","verticalAlign","Column","maxWidth","Form","size","onSubmit","preventDefault","includes","Object","keys","length","checkForm","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","Button","Message","signup","response","password2","validateForm","console","log","SideOverview","userDetails","position","display","flexDirection","top","bottom","right","width","background","overflowX","flex","overflowY","Menu","vertical","inverted","Item","otherThings","country","school","networth","land","money","population","food","nextIncrements","battleStats","wins","losses","intelligenceDivision","recons","commandos","infantryDivision","attackPts","defencePts","armouredDivision","airDivision","seaDivision","match","retrieveUser","getUser","error","retrievePosts","getPosts","setPosts","content","setPost","posts","postStructure","coverage","username","text","unshift","date","Row","columns","TextArea","Feed","map","index","Event","Content","Summary","Date","userID","Extra","isAuth","userItems","items","getAllItemsByEmail","theItems","setTheItems","Card","Group","centered","item","itemName","Meta","quantity","Description","additionalNote","ExploreLand","React","useState","open","setOpen","location","setPopulation","sendingAmt","setSendingAmt","totalCost","setTotalCost","tasks","setTasks","getExploringTasks","retrievedTasks","JSON","stringify","onSend","structure","creation","amount","sendExplorer","msg","label","onClick","Modal","onClose","onOpen","trigger","scrolling","Table","celled","padded","HeaderCell","Body","task","Cell","singleLine","doneInWhatTick","Actions","Icon","MyMessages","getMsg","setMessages","messages","setLoading","retrieveMsg","loading","from","Buildings","result","setBuildingQty","intel","buildings","intelligenceCamp","armyCamp","infantryCamp","airField","navalBase","getBuildings","Number","buildingQty","intelDiv","setIntelDiv","setArmyCamp","setAirField","setNavalBase","buildingTasks","setBuildingTasks","getBuildingTasks","MilitaryPage","setUnits","recon","commando","infanOne","infantry1","infanTwo","infantry2","infanThree","infantry3","infanFour","infantry4","airOne","air1","airTwo","air2","airThree","air3","airFour","air4","seaOne","sea1","seaTwo","sea2","seaThree","sea3","seaFour","sea4","getUnits","units","getMilitaryTasks","intelligenceDiv","infantryOne","infantryTwo","infantryThree","infantryFour","infantryDiv","setInfantryDiv","airDiv","setAirDiv","navalDiv","setNavalDiv","onChangeIntelDiv","onChangeInfanDiv","onChangeAirDiv","onChangeNavalDiv","AttackPage","getTasks","output","params","userid","setTarget","onInfantryChange","onAirChange","onNavalChange","totalPower","tPwer","tCost","infantryPower","entries","i","airPower","navalPower","ScoreboardPage","users","setUsers","retrievedUsers","getUsers","sub","userInfo","setUser","getUserInfo","profile","battle","tabs","setTabs","message","setMessage","onTab","onMessage","messageUser","divided","subheader","positive","bio","maxHeight","skillsets","skill","experiences","experience","title","company","description","current","setName","setBio","skills","setSkills","setExperiences","youtube","social","twitter","facebook","instagram","socials","setSocials","website","setWebsite","setCompany","onSkillChange","id","onSkillDelete","splice","onExpChange","onExpDelete","onSocialChange","socialmedias","submitForm","Field","Label","IntelligencePage","tasksopen","setTasksOpen","setRecon","setCommando","onSendRecon","onSendCommando","err","intelTasks","setIntelTasks","onGetIntelTasks","setIntel","getIntels","intels","profileTab","forces","info","List","navalDivision","battleTab","href","NewsPage","logs","AnDLogs","setUserLogs","getLogs","userLogs","initialState","action","produce","testing","allReducers","combineReducers","toDoList","middleware","thunk","lacreateStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","children","msgs","setMessageCount","news","setNewsCount","getMessagesNotRead","messageCount","newsCount","zIndex","left","fontSize","App","loadingStatus","setLoadingStatus","store","getState","testingFunc","exact","path","component","LoginPage","SignUp","HomePage","ControlPanel","ExploreLandPage","MyMessagesPage","BuildingsPage","ProfilePage","CreateEditProfilePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acb25356.chunk.js","sourcesContent":["//USER\nexport const LOGIN = 'LOGIN';\nexport const INIT_USER = 'INIT_USER';\nexport const RESET_USER = 'RESET_USER';\nexport const SIGNUP = 'SIGNUP';\n\n//ITEM\nexport const GETITEMS = 'GETITEMS';\n\n//ToDoList\nexport const ADDTASKS = 'ADDTASKS';\n","import axios from 'axios';\nimport { LOGIN, INIT_USER, RESET_USER, SIGNUP } from './types';\n\n//Login user\nexport const loginUser = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n\n    dispatch({\n      type: LOGIN,\n      payload: res.data,\n    });\n    //history.push('/admin/controlpanel');\n    history.push(`/homepage`);\n  } catch (err) {\n    alert('Invalid Account');\n  }\n};\n\n//Initialize User info when refreshed\nexport const initUser = (data) => (dispatch) => {\n  dispatch({\n    type: INIT_USER,\n    payload: data,\n  });\n};\n\n//Reset / Logout user\nexport const resetUser = () => (dispatch) => {\n  dispatch({\n    type: RESET_USER,\n  });\n};\n\n//Sign up user\nexport const signup = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: SIGNUP,\n      payload: res.data,\n    });\n    history.push(`/home/${res.data.name}`);\n  } catch (err) {\n    alert(err.response.data.email);\n  }\n};\n","import React, { useEffect, Fragment } from 'react';\nimport { DateTime } from 'luxon';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\nimport { Header } from 'semantic-ui-react';\n\n/*\n    desc: Display server time and next tick duration and current server tick number\n*/\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'tt',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst ServerTime = () => {\n  const [serverTime, setServerTime] = useImmer({\n    serverTime: DateTime.local()\n      .setZone(dateSetting.timezone)\n      .setLocale(dateSetting.locale)\n      .toFormat(dateSetting.format)\n      .toLocaleString(dateSetting.localeString),\n  });\n  const [serverTicker, setServerTicker] = useImmer({\n    serverID: '',\n    serverTicker: '',\n    isLoading: true,\n  });\n  const [serverDoneTicking, setServerDoneTicking] = useImmer({\n    done: false,\n  });\n  useEffect(() => {\n    //isMountedRef.current = true;\n    const interval = setInterval(() => {\n      setServerTime((draft) => {\n        draft.serverTime = DateTime.local()\n          .setZone(dateSetting.timezone)\n          .setLocale(dateSetting.locale)\n          .toFormat(dateSetting.format)\n          .toLocaleString(dateSetting.localeString);\n      });\n    }, 1000);\n\n    return () => {\n      //isMountedRef.current = false;\n      clearInterval(interval);\n    };\n  }, [setServerTime]);\n\n  useEffect(() => {\n    const getServerTicker = async () => {\n      const serverTick = await axios.get('/api/controlpanel/getstick');\n      setServerTicker((draft) => {\n        draft.serverID = serverTick.data._id;\n        draft.serverTicker = serverTick.data.tick;\n        draft.isLoading = false;\n      });\n    };\n    getServerTicker();\n  }, [setServerTicker]);\n\n  const plusServerTicker = async () => {\n    if (!serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = true;\n      });\n      setServerTicker((draft) => {\n        draft.serverTicker = draft.serverTicker + 1;\n      });\n      //await axios.post('/api/controlpanel/plusstick', serverTicker);\n    }\n  };\n\n  const tickerTimer = () => {\n    const now = DateTime.local()\n      .setZone('Asia/Singapore')\n      .setLocale('en-US')\n      .toFormat('m');\n\n    if (now === '30' || now === '0') {\n      plusServerTicker();\n      return 30;\n    }\n    //0 > x < 60\n    if (parseInt(now) > 0 && parseInt(now) < 60 && serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = false;\n      });\n    }\n    if (parseInt(now) >= 0 && parseInt(now) < 30 && !serverDoneTicking.done) {\n      return 30 - parseInt(now);\n    }\n    // 30<x<60\n    if (parseInt(now) >= 30 && parseInt(now) < 60 && !serverDoneTicking.done) {\n      return 60 - parseInt(now);\n    }\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    plusServerTicker();\n  };\n  return (\n    <Fragment>\n      {serverTicker.isLoading ? null : (\n        <Header as=\"h4\" style={{ color: 'white' }}>\n          {serverTime.serverTime}\n          <br />\n          Next Tick In: [{tickerTimer()} mins]\n          {/*<h4>Server Tick: {serverTicker.serverTicker}</h4>*/}\n        </Header>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ServerTime;\n","import React, { Fragment } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/user';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { Helmet } from 'react-helmet';\n\nconst AuthPage = ({ loginUser, history, user }) => {\n  const [formData, setFormData] = useImmer({\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n\n    /*setFormData(\n      produce((draft) => {\n        draft[e.target.name] = e.target.value;\n      })\n    );*/\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const checkForm = () => {\n    const errors = {};\n    if (formData.email === '' || !formData.email.includes('@')) {\n      errors.email = 'Email field is invalid.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Password field is empty.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n    const isValid = checkForm();\n    if (isValid) {\n      loginUser(formData, history);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Login Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Grid\n          textAlign=\"center\"\n          style={{ height: '100vh' }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <ServerTime />\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={onSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={onChange}\n                />\n                {formErrors.errors.email}\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={onChange}\n                />\n                {formErrors.errors.password}\n\n                <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to=\"/signup\">Sign Up</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      ) : (\n        <Redirect to={`/homepage`} />\n      )}\n    </Fragment>\n  );\n};\n\nAuthPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(AuthPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { connect } from 'react-redux';\nimport { signup } from '../../redux/actions/user';\nimport { withRouter } from 'react-router-dom';\n\nconst SignupPage = ({ signup, history }) => {\n  const [formData, setFormData] = useImmer({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = async (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (formData.name === '') {\n      errors.name = 'Missing name.';\n    }\n    if (formData.email === '') {\n      errors.email = 'Missing email.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Missing password.';\n    }\n    if (formData.password2 === '') {\n      errors.password2 = 'Missing password.';\n    }\n    if (formData.password !== formData.password2) {\n      errors.password2 = 'Password does not match.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n\n    const isValid = validateForm();\n    if (isValid) {\n      console.log('FormData:', formData);\n      signup(formData, history);\n    } else {\n      console.log('Form incomplete');\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Signup\n        </Header>\n        <Form size=\"large\" onSubmit={onSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"wheelchair\"\n              iconPosition=\"left\"\n              placeholder=\"Name\"\n              name=\"name\"\n              onChange={onChange}\n            />\n            {formErrors.errors.name}\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              onChange={onChange}\n            />\n            {formErrors.errors.email}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Re-type password\"\n              type=\"password\"\n              name=\"password2\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password2}\n\n            <Button color=\"blue\" fluid size=\"large\" type=\"submit\">\n              Sign up\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nSignupPage.propTypes = {\n  signup: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { signup })(withRouter(SignupPage));\n","import React from 'react';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst SideOverview = ({ userDetails }) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        display: 'flex',\n        flexDirection: 'column',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        width: '250px',\n        background: '#1B1C1D',\n        overflowX: 'hidden',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n          overflowY: 'auto',\n        }}\n      >\n        <Menu vertical inverted>\n          <Menu.Item>\n            <Menu.Header>Your Territory</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>Country: {userDetails.otherThings.country}</Menu.Item>\n              <Menu.Item>School: {userDetails.otherThings.school}</Menu.Item>\n              <Menu.Item>\n                Networth: {userDetails.otherThings.networth}\n              </Menu.Item>\n              <Menu.Item>Land: {userDetails.otherThings.land}</Menu.Item>\n              <Menu.Item>Money: ${userDetails.otherThings.money}</Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.population}\n              </Menu.Item>\n              <Menu.Item>Food: {userDetails.otherThings.food}</Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Next Increments</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Money: ${userDetails.otherThings.nextIncrements.money}\n              </Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.nextIncrements.population}\n              </Menu.Item>\n              <Menu.Item>\n                Food: {userDetails.otherThings.nextIncrements.food}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Battle Stats</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Wins: {userDetails.otherThings.battleStats.wins}\n              </Menu.Item>\n              <Menu.Item>\n                Losses: {userDetails.otherThings.battleStats.losses}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Intelligence Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Reconnaissance:{' '}\n                {userDetails.otherThings.intelligenceDivision.recons}\n              </Menu.Item>\n              <Menu.Item>\n                Commandos:{' '}\n                {userDetails.otherThings.intelligenceDivision.commandos}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Infantry Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points:{' '}\n                {userDetails.otherThings.infantryDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points:{' '}\n                {userDetails.otherThings.infantryDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Armoured Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points:{' '}\n                {userDetails.otherThings.armouredDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points:{' '}\n                {userDetails.otherThings.armouredDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Air Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.airDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.airDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sea Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.seaDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.seaDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nSideOverview.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n};\n\nexport default SideOverview;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Overview from '../SideNav/SideOverview';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { initUser } from '../../redux/actions/user';\nimport {\n  Grid,\n  Feed,\n  Icon,\n  Form,\n  TextArea,\n  Button,\n  Header,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { DateTime } from 'luxon';\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'FF',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst HomePage = ({ user, initUser, match }) => {\n  useEffect(() => {\n    const retrieveUser = async () => {\n      try {\n        const getUser = await axios.get(`/api/auth/getuser`);\n        initUser(getUser.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    const retrievePosts = async () => {\n      try {\n        const getPosts = await axios.get('/api/post/getallposts');\n        setPosts((draft) => {\n          draft.content = getPosts.data;\n        });\n      } catch (err) {\n        console.log(err.response.data);\n      }\n    };\n    retrieveUser();\n    retrievePosts();\n  }, []);\n  const [post, setPost] = useImmer({ content: '' });\n  const [posts, setPosts] = useImmer({ content: [] });\n  const onChange = (e) => {\n    setPost((draft) => {\n      draft.content = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const postStructure = {\n      coverage: 'Singapore',\n      name: user.username,\n      text: post,\n    };\n    try {\n      await axios.post('/api/post/post', postStructure);\n      console.log('Successful');\n      setPosts((draft) => {\n        draft.content.unshift({\n          date: DateTime.local()\n            .setZone(dateSetting.timezone)\n            .setLocale(dateSetting.locale)\n            .toFormat(dateSetting.format),\n          coverage: 'Singapore',\n          name: user.username,\n          text: post.content,\n        });\n      });\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <div>\n          <Grid style={{ height: '100vh' }} textAlign=\"center\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <Fragment>\n                  <Header as=\"h1\" textAlign=\"left\">\n                    Welcome\n                  </Header>\n                  <Form onSubmit={onSubmit}>\n                    <TextArea\n                      placeholder=\"Tell us more\"\n                      name=\"post\"\n                      onChange={onChange}\n                    />\n\n                    {/*<Dropdown\n                      placeholder=\"Select Coverage\"\n                      selection\n                      options={[\n                        { key: 'school', value: 'NUS', text: 'School' },\n                        { key: 'country', value: 'Singapore', text: 'Country' },\n                        { key: 'global', value: 'Global', text: 'Global' },\n                      ]}\n                    />*/}\n                    <Button\n                      content=\"POST\"\n                      color=\"black\"\n                      size=\"large\"\n                      fluid\n                      type=\"submit\"\n                    />\n                  </Form>\n                  <Feed>\n                    {posts.content.map((post, index) => (\n                      <Feed.Event key={index}>\n                        <Feed.Content>\n                          <Feed.Summary>\n                            <a>{post.name}</a>\n                            <Feed.Date>\n                              {post.userID.school}\n                              {post.date}\n                            </Feed.Date>\n                          </Feed.Summary>\n                          <Feed.Extra text>{post.text}</Feed.Extra>\n                        </Feed.Content>\n                      </Feed.Event>\n                    ))}\n                  </Feed>\n                </Fragment>\n                <Overview userDetails={user} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nHomePage.propTypes = {\n  user: PropTypes.object.isRequired,\n  initUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { initUser })(HomePage);\n","import React, { Fragment, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { getAllItemsByEmail } from '../../redux/actions/items';\nimport { Card, Grid } from 'semantic-ui-react';\nconst ControlPanel = ({ isAuth, getAllItemsByEmail, userItems }) => {\n  const [theItems, setTheItems] = useImmer({\n    items: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    getAllItemsByEmail();\n  }, [getAllItemsByEmail]);\n\n  useEffect(() => {\n    if (!userItems.isLoading) {\n      setTheItems((draft) => {\n        draft.items = userItems.data.items;\n        draft.isLoading = false;\n      });\n    } else {\n      setTheItems((draft) => {\n        draft.items = [];\n        draft.isLoading = true;\n      });\n    }\n    // eslint-disable-next-line\n  }, [userItems.isLoading]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Helmet>\n          <title>Control Panel</title>\n        </Helmet>\n        {!isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Fragment>\n            <h1>ControlPanel</h1>\n            <ServerTime />\n            {theItems.isLoading ? (\n              <h3>Loading Items...</h3>\n            ) : (\n              <Fragment>\n                {theItems.items.length === 0 ? (\n                  <h3>No items....</h3>\n                ) : (\n                  <Card.Group centered={true}>\n                    {theItems.items.map((item) => (\n                      <Card key={item._id}>\n                        <Card.Content>\n                          <Card.Header>{item.itemName}</Card.Header>\n                          <Card.Meta>x{item.quantity}</Card.Meta>\n                          <Card.Description>\n                            {item.additionalNote}\n                          </Card.Description>\n                        </Card.Content>\n                      </Card>\n                    ))}\n                  </Card.Group>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nControlPanel.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getAllItemsByEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.user.isAuthenticated,\n  userItems: state.items,\n});\n\nexport default connect(mapStateToProps, { getAllItemsByEmail })(ControlPanel);\n","import axios from 'axios';\nimport { GETITEMS } from './types';\n\nexport const getAllItemsByEmail = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/items/getall');\n    dispatch({\n      type: GETITEMS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Error: ', err.response.data);\n  }\n};\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Input,\n  Modal,\n  Button,\n  Icon,\n  Table,\n  Item,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst ExploreLand = ({ history }) => {\n  const [open, setOpen] = React.useState(false);\n  const [population, setPopulation] = useImmer(\n    history.location.state.otherThings.population\n  );\n  const [sendingAmt, setSendingAmt] = useImmer(0);\n  const [totalCost, setTotalCost] = useImmer(0);\n  const [tasks, setTasks] = useImmer([]);\n\n  const EXPLORER_COST = 500;\n\n  const getExploringTasks = async () => {\n    try {\n      const retrievedTasks = await axios.get('/api/actions/getexploringtasks');\n      setTasks((draft) => retrievedTasks.data);\n    } catch (err) {\n      alert(JSON.stringify(err.response.data));\n    }\n  };\n  const onChange = (e) => {\n    setSendingAmt((draft) => e.target.value);\n    setTotalCost((draft) => e.target.value * EXPLORER_COST);\n  };\n\n  const onSend = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        creation: {\n          amount: sendingAmt,\n        },\n        totalCost: totalCost,\n      };\n      console.log('Data', sendingAmt);\n      const sendExplorer = await axios.post(\n        '/api/actions/sendexplorer',\n        structure\n      );\n      console.log(sendExplorer.data);\n      setSendingAmt((draft) => 0);\n      setPopulation((draft) => (draft -= sendingAmt));\n      alert('ok');\n    } catch (err) {\n      alert(JSON.stringify(err.response.data.msg));\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\">Explore Land</Header>\n          <>\n            <Header>Available Units: {population}</Header>\n            <Header>1 unit = $500</Header>\n          </>\n          <>\n            <Input\n              label=\"Amount:\"\n              value={sendingAmt}\n              onChange={onChange}\n              type=\"number\"\n            />\n            <Button color=\"black\" onClick={onSend}>\n              Send\n            </Button>\n          </>\n          <br />\n          <br />\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getExploringTasks();\n            }}\n            trigger={<Button color=\"black\">View On-going tasks</Button>}\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task) => (\n                      <Table.Row>\n                        <Table.Cell>\n                          <Header>\n                            {task.creation.amount} units (\n                            {task.creation.amount * 5} land)\n                          </Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Ticks\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default ExploreLand;\n","import React, { useEffect, Fragment } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nconst MyMessages = () => {\n  useEffect(() => {\n    const retrieveMsg = async () => {\n      try {\n        const getMsg = await axios.get('/api/users/messages');\n        setMessages((draft) => getMsg.data.messages);\n        setLoading((draft) => false);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    retrieveMsg();\n  }, []);\n  const [messages, setMessages] = useImmer([]);\n  const [loading, setLoading] = useImmer(true);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '650px' }}>\n        <Header as=\"h1\">Messages</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Content</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {!loading && (\n              <Fragment>\n                {messages.map((msg, index) => (\n                  <Table.Row key={index}>\n                    <Table.Cell>{msg.content}</Table.Cell>\n                    <Table.Cell>\n                      <Link to={`/profile/${msg.from._id}`}>\n                        {msg.from.name}\n                      </Link>\n                    </Table.Cell>\n\n                    <Table.Cell>{msg.date}</Table.Cell>\n                    <Table.Cell>\n                      <Button color=\"black\">Reply</Button>\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Fragment>\n            )}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MyMessages;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst Buildings = () => {\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setBuildingQty((draft) => {\n          draft.intel = result.data.buildings.intelligenceCamp.quantity;\n          draft.armyCamp = result.data.buildings.infantryCamp.quantity;\n          draft.airField = result.data.buildings.airField.quantity;\n          draft.navalBase = result.data.buildings.navalBase.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getBuildings();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [buildingQty, setBuildingQty] = useImmer({\n    intel: Number,\n    armyCamp: Number,\n    airField: Number,\n    navalBase: Number,\n  });\n  const [intelDiv, setIntelDiv] = useImmer(0);\n  const [armyCamp, setArmyCamp] = useImmer(0);\n  const [airField, setAirField] = useImmer(0);\n  const [navalBase, setNavalBase] = useImmer(0);\n  //const [foodBank, setFoodBank] = useImmer(0);\n  const [buildingTasks, setBuildingTasks] = useImmer([]);\n\n  const getBuildingTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getbuildingtasks');\n      console.log(result.data);\n      setBuildingTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'armyCamp') {\n      setArmyCamp((draft) => e.target.value);\n    }\n    if (e.target.name === 'airField') {\n      setAirField((draft) => e.target.value);\n    }\n    if (e.target.name === 'navalBase') {\n      setNavalBase((draft) => e.target.value);\n    }\n    if (e.target.name === 'intelDiv') {\n      setIntelDiv((draft) => e.target.value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        intelDiv,\n        armyCamp,\n        airField,\n        navalBase,\n      };\n      const res = await axios.post('/api/actions/buildbuildings', structure);\n      console.log(res.data);\n      setIntelDiv((draft) => 0);\n      setArmyCamp((draft) => 0);\n      setAirField((draft) => 0);\n      setNavalBase((draft) => 0);\n      alert('ok');\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Buildings</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Building</Table.HeaderCell>\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Extra Space per unit</Table.HeaderCell>\n              <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Intelligence Dept</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.intel}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"intelDiv\"\n                  value={intelDiv}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Army Camp</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.armyCamp}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"armyCamp\"\n                  value={armyCamp}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air Field</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.airField}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airField\"\n                  value={airField}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Naval Base</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.navalBase}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"navalBase\"\n                  value={navalBase}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            {/* <Table.Row>\n              <Table.Cell>\n                <Header>Food Bank</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"foodBank\"\n                  value={foodBank}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n           </Table.Row>*/}\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getBuildingTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {buildingTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Buildings;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst MilitaryPage = () => {\n  useEffect(() => {\n    const getUnits = async () => {\n      const result = await axios.get('/api/users/getmyself');\n      setUnits((draft) => {\n        draft.recon = result.data.intelligenceDivision.recons;\n        draft.commando = result.data.intelligenceDivision.commandos;\n        draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n        draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n        draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n        draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n        draft.airOne = result.data.airDivision.air1.quantity;\n        draft.airTwo = result.data.airDivision.air2.quantity;\n        draft.airThree = result.data.airDivision.air3.quantity;\n        draft.airFour = result.data.airDivision.air4.quantity;\n        draft.seaOne = result.data.seaDivision.sea1.quantity;\n        draft.seaTwo = result.data.seaDivision.sea2.quantity;\n        draft.seaThree = result.data.seaDivision.sea3.quantity;\n        draft.seaFour = result.data.seaDivision.sea4.quantity;\n      });\n    };\n    getUnits();\n  }, []);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const getMilitaryTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getmilitarytasks');\n      console.log(result.data);\n      setTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  const [tasks, setTasks] = useImmer([]);\n\n  const [intelligenceDiv, setIntelDiv] = useImmer({\n    recon: 0,\n    commando: 0,\n  });\n\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onChangeIntelDiv = (e) => {\n    setIntelDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeInfanDiv = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeAirDiv = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeNavalDiv = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const res = await axios.post('/api/actions/createmilitary', {\n        intelligenceDiv,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      });\n\n      console.log(res.data);\n      alert('ok');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      style={{ height: '100vh' }}\n      columns={3}\n    >\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">MilitaryPage</Header>\n        <Header>Intelligence Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Reconn</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>{units.recon}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"recon\"\n                  value={intelligenceDiv.recon}\n                  onChange={onChangeIntelDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commando</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n\n              <Table.Cell>{units.commando}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"commando\"\n                  value={intelligenceDiv.commando}\n                  onChange={onChangeIntelDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryOne\"\n                  value={infantryDiv.infantryOne}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryTwo\"\n                  value={infantryDiv.infantryTwo}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryThree\"\n                  value={infantryDiv.infantryThree}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryFour\"\n                  value={infantryDiv.infantryFour}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airOne\"\n                  value={airDiv.airOne}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airTwo\"\n                  value={airDiv.airTwo}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airThree\"\n                  value={airDiv.airThree}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airFour\"\n                  value={airDiv.airFour}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaOne\"\n                  value={navalDiv.seaOne}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaTwo\"\n                  value={navalDiv.seaTwo}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaThree\"\n                  value={navalDiv.seaThree}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaFour\"\n                  value={navalDiv.seaFour}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getMilitaryTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MilitaryPage;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst AttackPage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n          draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n          draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n          draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n          draft.airOne = result.data.airDivision.air1.quantity;\n          draft.airTwo = result.data.airDivision.air2.quantity;\n          draft.airThree = result.data.airDivision.air3.quantity;\n          draft.airFour = result.data.airDivision.air4.quantity;\n          draft.seaOne = result.data.seaDivision.sea1.quantity;\n          draft.seaTwo = result.data.seaDivision.sea2.quantity;\n          draft.seaThree = result.data.seaDivision.sea3.quantity;\n          draft.seaFour = result.data.seaDivision.sea4.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getUnits();\n  }, []);\n\n  const getTasks = async () => {\n    try {\n      const output = await axios.get('/api/actions/getattacktasks');\n      setTasks((draft) => output.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [open, setOpen] = React.useState(false);\n  const [tasks, setTasks] = useImmer([]);\n\n  const [units, setUnits] = useImmer({\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n\n  const onInfantryChange = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onAirChange = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onNavalChange = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        target,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      };\n      const result = await axios.post('/api/actions/attack', structure);\n      alert(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const totalPower = () => {\n    let tPwer = 0;\n    let tCost = 0;\n    const infantryPower = Object.entries(infantryDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += infantryPower[i][1] * 10;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += infantryPower[i][1] * 20;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += infantryPower[i][1] * 30;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += infantryPower[i][1] * 40;\n        tCost += infantryPower[i][1] * 500;\n      }\n    }\n    const airPower = Object.entries(airDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += airPower[i][1] * 10;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += airPower[i][1] * 20;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += airPower[i][1] * 30;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += airPower[i][1] * 40;\n        tCost += airPower[i][1] * 500;\n      }\n    }\n    const navalPower = Object.entries(navalDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += navalPower[i][1] * 10;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += navalPower[i][1] * 20;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += navalPower[i][1] * 30;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += navalPower[i][1] * 40;\n        tCost += navalPower[i][1] * 500;\n      }\n    }\n    return { tPwer, tCost };\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Attack Page</Header>\n        <Input\n          label=\"Target\"\n          value={target}\n          name=\"target\"\n          onChange={onTarget}\n        />\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryOne}\n                  name=\"infantryOne\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryTwo}\n                  name=\"infantryTwo\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryThree}\n                  name=\"infantryThree\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryFour}\n                  name=\"infantryFour\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        {/*<Header>Armoured Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        \n        */}\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airOne}\n                  name=\"airOne\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airTwo}\n                  name=\"airTwo\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airThree}\n                  name=\"airThree\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airFour}\n                  name=\"airFour\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaOne}\n                  name=\"seaOne\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaTwo}\n                  name=\"seaTwo\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaThree}\n                  name=\"seaThree\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaFour}\n                  name=\"seaFour\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Attack Points: {totalPower().tPwer}</Header>\n        <Header>Total Cost: {totalPower().tCost}</Header>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Attack\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Total Attack Power</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.totalPower}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{task.target.name}</Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AttackPage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Dropdown, Table } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ScoreboardPage = () => {\n  const [users, setUsers] = useImmer([]);\n  useEffect(() => {\n    const getUsers = async () => {\n      const retrievedUsers = await axios.get('/api/users/getusers');\n      setUsers((draft) => retrievedUsers.data);\n    };\n    getUsers();\n  }, []);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">ScoreboardPage</Header>\n        {/* <Dropdown\n          placeholder=\"Select Coverage\"\n          selection\n          options={[\n            { key: 'school', value: 'NUS', text: 'School' },\n            { key: 'country', value: 'Singapore', text: 'Country' },\n            { key: 'global', value: 'Global', text: 'Global' },\n          ]}\n        />*/}\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>School</Table.HeaderCell>\n              <Table.HeaderCell>Country</Table.HeaderCell>\n              <Table.HeaderCell>Networth</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {users.map((user, index) => (\n              <Table.Row key={index}>\n                <Table.Cell>\n                  <Header sub>\n                    <Link to={`/profile/${user._id}`}>{user.name}</Link>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.school}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.country}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.networth}</Header>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ScoreboardPage;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Icon,\n  Table,\n  Item,\n  TextArea,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ProfilePage = ({ userID, match, history }) => {\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const userInfo = await axios.get(\n          `/api/users/getuser/${match.params.userid}`\n        );\n        console.log(userInfo.data);\n        setUser((draft) => userInfo.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n      setLoading((draft) => false);\n    };\n    getUserInfo();\n  }, []);\n  const [user, setUser] = useImmer({});\n  const [loading, setLoading] = useImmer(true);\n  const [open, setOpen] = React.useState(false);\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [message, setMessage] = useImmer('');\n  const goCreateProfile = (e) => {\n    e.preventDefault();\n    history.push('/ceprofile');\n  };\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  const onMessageChange = (e) => {\n    setMessage((draft) => e.target.value);\n  };\n  const onMessage = async (e) => {\n    try {\n      e.preventDefault();\n      const messageUser = await axios.post(\n        `/api/users/messageUser/${user._id}`,\n        { content: message }\n      );\n      console.log(messageUser.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={3}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 850 }}>\n          {loading ? (\n            <Header>Loading...</Header>\n          ) : (\n            <Fragment>\n              <Grid.Column>\n                <Button name=\"profile\" onClick={onTab}>\n                  Profile\n                </Button>\n                <Button name=\"battle\" onClick={onTab}>\n                  Battle Stats\n                </Button>\n              </Grid.Column>\n              {tabs.profile && (\n                <>\n                  <Grid.Column>\n                    <Header as=\"h4\">Name: {user.name}</Header>\n                    <Header as=\"h4\">Current School: {user.school}</Header>\n                    <Header as=\"h4\">Country: {user.country}</Header>\n                    {userID === user._id ? (\n                      <Button color=\"black\" onClick={goCreateProfile}>\n                        Create/Edit Profile\n                      </Button>\n                    ) : (\n                      <>\n                        <Modal\n                          onClose={() => setOpen(false)}\n                          onOpen={() => setOpen(true)}\n                          open={open}\n                          trigger={<Button color=\"black\">Message</Button>}\n                        >\n                          <Modal.Header>Message</Modal.Header>\n                          <Modal.Content>\n                            <Modal.Description>\n                              <Header subheader>To: {user.name}</Header>\n                              <TextArea\n                                style={{ width: '100%' }}\n                                onChange={onMessageChange}\n                                value={message}\n                              />\n                            </Modal.Description>\n                          </Modal.Content>\n                          <Modal.Actions>\n                            <Button\n                              color=\"black\"\n                              onClick={() => setOpen(false)}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              content=\"Send\"\n                              onClick={(e) => {\n                                setOpen(false);\n                                onMessage(e);\n                              }}\n                              positive\n                            />\n                          </Modal.Actions>\n                        </Modal>\n                      </>\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Header as=\"h2\">Bio</Header>\n                    {user.bio === '' || !user.bio ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Bio</Header>\n                      </div>\n                    ) : (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header as=\"h4\">{user.bio}</Header>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Skill sets</Header>\n                    {user.skillsets.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Skills Sets</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.skillsets.map((skill, index) => (\n                            <Item key={index}>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}.{skill}\n                                </Item.Header>\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Experiences</Header>\n                    {user.experiences.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No experiences</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.experiences.map((experience, index) => (\n                            <Item>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}. {experience.title}\n                                </Item.Header>\n                                <Item.Meta>{experience.company}</Item.Meta>\n                                <Item.Description>\n                                  {experience.description}\n                                </Item.Description>\n                                {experience.current ? (\n                                  <Item.Extra>{experience.from}</Item.Extra>\n                                ) : (\n                                  <Item.Extra>1999/10/19 - now</Item.Extra>\n                                )}\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                  </Grid.Column>\n                </>\n              )}\n              {tabs.battle && (\n                <Grid.Column>\n                  <Header as=\"h4\">Networth: {user.networth}</Header>\n                  <Header as=\"h4\">\n                    Wins / Losses: {user.battleStats.wins}/\n                    {user.battleStats.losses}\n                  </Header>\n                  {match.params.userid !== user.userid && (\n                    <Fragment>\n                      {userID !== user._id && (\n                        <>\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(`/attack/${match.params.userid}`);\n                            }}\n                          >\n                            Attack\n                          </Button>\n                          <br />\n                          <br />\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(\n                                `/intelligence/${match.params.userid}`\n                              );\n                            }}\n                          >\n                            Gather Intelligence\n                          </Button>\n                          <br />\n                          <br />\n                        </>\n                      )}\n                    </Fragment>\n                  )}\n\n                  <Modal\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    trigger={<Button color=\"black\">Recent Battles</Button>}\n                  >\n                    <Modal.Header>Recent Battles</Modal.Header>\n                    <Modal.Content scrolling>\n                      <Modal.Description>\n                        <Table celled padded>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>Type</Table.HeaderCell>\n                              <Table.HeaderCell>Result</Table.HeaderCell>\n                              <Table.HeaderCell>Description</Table.HeaderCell>\n                              <Table.HeaderCell>Date</Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Header>Attack</Header>\n                              </Table.Cell>\n                              <Table.Cell>Lost</Table.Cell>\n                              <Table.Cell>\n                                <Table.Cell>\n                                  Target: username(clickable).\n                                  <br /> 5000 land gained.\n                                  <br /> Destroyed 500 units.\n                                  <br /> Lost 50 units.\n                                </Table.Cell>\n                              </Table.Cell>\n                              <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                      <Button onClick={() => setOpen(false)} color=\"black\">\n                        Close <Icon name=\"close\" />\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </Grid.Column>\n              )}\n            </Fragment>\n          )}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userID: state.user.userid,\n});\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Label,\n  TextArea,\n  Item,\n  Card,\n  Header,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst CreateEditProfile = ({ user, history }) => {\n  const [name, setName] = useImmer(user.username ? user.username : '');\n  const [bio, setBio] = useImmer(\n    user.otherThings.bio ? user.otherThings.bio : ''\n  );\n  //const [skills, setSkills] = useImmer([]);\n  const [skills, setSkills] = useImmer(\n    user.otherThings.skillsets ? user.otherThings.skillsets : []\n  );\n  //const [experiences, setExperiences] = useImmer([]);\n  const [experiences, setExperiences] = useImmer(\n    user.otherThings.experiences ? user.otherThings.experiences : []\n  );\n  /*const [socials, setSocials] = useImmer({\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n  });*/\n  const [socials, setSocials] = useImmer({\n    youtube:\n      user.otherThings.social &&\n      (user.otherThings.social.youtube ? user.otherThings.social.youtube : ''),\n    twitter:\n      user.otherThings.social &&\n      (user.otherThings.social.twitter ? user.otherThings.social.twitter : ''),\n    facebook:\n      user.otherThings.social &&\n      (user.otherThings.social.facebook\n        ? user.otherThings.social.facebook\n        : ''),\n    instagram:\n      user.otherThings.social &&\n      (user.otherThings.social.instagram\n        ? user.otherThings.social.instagram\n        : ''),\n  });\n  const [website, setWebsite] = useImmer('');\n  const [company, setCompany] = useImmer('');\n\n  const onAddSkills = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.push(''));\n  };\n  const onSkillChange = (e) => {\n    console.log(e.target.id);\n    setSkills((draft) => {\n      draft[e.target.id] = e.target.value;\n    });\n  };\n  const onSkillDelete = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.splice(e.target.value, 1));\n  };\n\n  const onAddExp = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.push({\n        title: '',\n        company: '',\n        description: '',\n      });\n    });\n  };\n\n  const onExpChange = (e) => {\n    setExperiences((draft) => {\n      draft[e.target.id][e.target.name] = e.target.value;\n    });\n  };\n\n  const onExpDelete = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.splice(e.target.id, 1);\n    });\n  };\n\n  const onSocialChange = (e) => {\n    setSocials((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onWebsiteChange = (e) => {\n    setWebsite((draft) => e.target.value);\n  };\n\n  const onCompanyChange = (e) => {\n    setCompany((draft) => e.target.value);\n  };\n\n  const onNameChange = (e) => {\n    setName((draft) => e.target.value);\n  };\n  const onBioChange = (e) => {\n    setBio((draft) => e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const formData = {\n        name: name,\n        bio: bio,\n        skills: skills,\n        experiences: experiences,\n        socialmedias: socials,\n        website: website,\n        company: company,\n      };\n      console.log('Form Data: ', formData);\n      const submitForm = await axios.post(\n        '/api/users/pushprofiledata',\n        formData\n      );\n      console.log('Submitted Form: ', submitForm);\n      history.push(`/profile/${user.userid}`);\n    } catch (err) {\n      console.error('Error: ', err.response.data);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"First Name\"\n              name=\"name\"\n              value={name}\n              onChange={onNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Bio</label>\n            <TextArea\n              placeholder=\"Bio\"\n              name=\"bio\"\n              value={bio}\n              onChange={onBioChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Skill Sets</label>\n            <Button color=\"blue\" onClick={onAddSkills}>\n              Add\n            </Button>\n            {skills.map((skill, index) => (\n              <Fragment key={index}>\n                <Input\n                  label\n                  value={skill}\n                  id={index}\n                  key={index}\n                  onChange={onSkillChange}\n                >\n                  <Label>{index + 1}</Label>\n                  <input />\n                  <Button value={index} onClick={onSkillDelete}>\n                    Delete\n                  </Button>\n                </Input>\n                <br />\n                <br />\n              </Fragment>\n            ))}\n          </Form.Field>\n          <Form.Field>\n            <label>Experiences</label>\n            <Button color=\"blue\" onClick={onAddExp}>\n              Add\n            </Button>\n            <Item.Group style={{ textAlign: 'left' }}>\n              {experiences.map((experience, index) => (\n                <Fragment key={index}>\n                  {/* <Item>\n                    <Item.Content>\n                      <Item.Header>{experience.title}</Item.Header>\n                      <Item.Meta>{experience.company}</Item.Meta>\n                      <Item.Description>\n                        {experience.description}\n                      </Item.Description>\n                    </Item.Content>\n                 </Item>*/}\n                  <Header as=\"h3\">{index + 1}.</Header>\n                  <Input\n                    label\n                    value={experience.title}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"title\"\n                  >\n                    <Label>Title</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.company}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"company\"\n                  >\n                    <Label>Company</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.description}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"description\"\n                  >\n                    <Label>Description</Label>\n                    <input />\n                  </Input>\n                  <Button color=\"red\" fluid id={index} onClick={onExpDelete}>\n                    Delete\n                  </Button>\n                </Fragment>\n              ))}\n            </Item.Group>\n          </Form.Field>\n          <Form.Field>\n            <label>Socials</label>\n            <Input\n              label=\"youtube\"\n              placeholder=\"Youtube\"\n              name=\"youtube\"\n              onChange={onSocialChange}\n              value={socials.youtube}\n            />\n            <Input\n              label=\"twitter\"\n              placeholder=\"Twitter\"\n              name=\"twitter\"\n              onChange={onSocialChange}\n              value={socials.twitter}\n            />\n            <Input\n              label=\"facebook\"\n              placeholder=\"Facebook\"\n              name=\"facebook\"\n              onChange={onSocialChange}\n              value={socials.facebook}\n            />\n            <Input\n              label=\"instagram\"\n              placeholder=\"instagram\"\n              name=\"instagram\"\n              onChange={onSocialChange}\n              value={socials.instagram}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Website</label>\n            <input\n              placeholder=\"Website\"\n              value={website}\n              onChange={onWebsiteChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Company</label>\n            <input\n              placeholder=\"Company\"\n              value={company}\n              onChange={onCompanyChange}\n            />\n          </Form.Field>\n\n          <Button type=\"submit\" color=\"black\">\n            Submit\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nCreateEditProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(CreateEditProfile);\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Image,\n  Icon,\n  Table,\n  Item,\n  Input,\n  Label,\n  List,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nconst IntelligencePage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.recon = result.data.intelligenceDivision.recons;\n          draft.commando = result.data.intelligenceDivision.commandos;\n        });\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getUnits();\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const [tasksopen, setTasksOpen] = React.useState(false);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n  });\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [recon, setRecon] = useImmer(0);\n  const onChangeRecon = (e) => {\n    setRecon((draft) => e.target.value);\n  };\n  const [commando, setCommando] = useImmer(0);\n  const onChangeCommando = (e) => {\n    setCommando((draft) => e.target.value);\n  };\n\n  const onSendRecon = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendrecons', {\n        recon,\n        target,\n      });\n      console.log(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n  const onSendCommando = async (e) => {\n    try {\n      e.preventDefault();\n      console.log('commando ', commando);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const onChangeTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n  const [intelTasks, setIntelTasks] = useImmer([]);\n  const onGetIntelTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getinteltasks');\n      setIntelTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [intel, setIntel] = useImmer([]);\n  const getIntels = async () => {\n    try {\n      const result = await axios.get('/api/actions/getintelreports');\n      console.log(result.data[0].intelligenceDivision.intels);\n      setIntel((draft) => result.data[0].intelligenceDivision.intels);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const profileTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} onChange={onChangeTarget} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Recon</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.recon}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={recon}\n                  onChange={onChangeRecon}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSendRecon}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetIntelTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intelTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>{task.target.name}</Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getIntels();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Intels gathered\n            </Button>\n          }\n        >\n          <Modal.Header>Intels gathered</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intel.map((info, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header as=\"h2\">{info.result}</Header>\n                      </Table.Cell>\n\n                      <Table.Cell>\n                        <List>\n                          <List.Item>\n                            <b>Intelligence Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Recons: {info.intelligenceDivision.recons}\n                              </List.Item>\n                              <List.Item>\n                                Commandos: {info.intelligenceDivision.commandos}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Infantry Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.infantryDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{' '}\n                                {info.infantryDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Air Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.airDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{info.airDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Sea Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.navalDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points: {info.navalDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{info.target.name}</Table.Cell>\n                      <Table.Cell>{info.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n  const battleTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commandos</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.commando}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={commando}\n                  onChange={onChangeCommando}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSendCommando}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          trigger={\n            <Button color=\"black\" fluid>\n              Missions\n            </Button>\n          }\n        >\n          <Modal.Header>Missions</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as=\"h2\" textAlign=\"center\">\n                        Lost\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell singleLine>Sent 100. Lost 50.</Table.Cell>\n                    <Table.Cell>\n                      <a href=\"#!\">Enermy Name</a>\n                    </Table.Cell>\n                    <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 600 }}>\n          <Grid.Column>\n            <Button name=\"profile\" onClick={onTab}>\n              Recon\n            </Button>\n            <Button name=\"battle\" onClick={onTab}>\n              Sabotage\n            </Button>\n          </Grid.Column>\n          {tabs.profile && profileTab}\n          {tabs.battle && battleTab}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IntelligencePage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\n\nconst NewsPage = () => {\n  useEffect(() => {\n    const getLogs = async () => {\n      try {\n        const logs = await axios.get('/api/users/getnews');\n        console.log(logs.data.AnDLogs);\n        setUserLogs((draft) => logs.data.AnDLogs);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    getLogs();\n  }, []);\n  const [userLogs, setUserLogs] = useImmer([]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '750px' }}>\n        <Header as=\"h1\">News</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Type</Table.HeaderCell>\n              <Table.HeaderCell>Result</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {userLogs.map((log) => (\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.type}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.result}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>{log.description}</Table.Cell>\n                <Table.Cell>\n                  <a href=\"#!\">{log.from.name}</a>\n                </Table.Cell>\n                <Table.Cell>{log.date}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          ))}\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewsPage;\n","import { LOGIN, INIT_USER, RESET_USER, SIGNUP } from '../actions/types';\nimport produce from 'immer';\n\nconst initialState = {\n  userid: '',\n  username: '',\n  email: '',\n  experiences: [],\n  otherThings: {},\n  isAuthenticated: false,\n};\n\nconst user = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case SIGNUP:\n      case INIT_USER:\n      case LOGIN:\n        draft.userid = action.payload._id;\n        draft.username = action.payload.name;\n        draft.email = action.payload.email;\n        draft.experiences = action.payload.experiences;\n        draft.otherThings = action.payload;\n        draft.isAuthenticated = true;\n        break;\n\n      case RESET_USER:\n        draft.userid = '';\n        draft.username = '';\n        draft.email = '';\n        draft.experiences = [];\n        draft.otherThings = {};\n        draft.isAuthenticated = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default user;\n","import produce from 'immer';\nimport { GETITEMS } from '../actions/types';\n\nconst initialState = { data: {}, isLoading: true };\n\nconst items = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case GETITEMS:\n        draft.data = action.payload[0];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default items;\n","import produce from 'immer';\nimport { ADDTASKS } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  isLoading: true,\n};\n\nconst tasks = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADDTASKS:\n        draft.tasks = [{ testing: 'tasking' }];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default tasks;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport items from './items';\nimport toDoList from './toDoList';\n\nconst allReducers = combineReducers({ user, items, toDoList });\n\nexport default allReducers;\n","import thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst lacreateStore = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default lacreateStore;\n","import React, { Fragment, useEffect } from 'react';\n\nimport { useImmer } from 'use-immer';\nimport ServerTime from '../ServerTime/ServerTime';\nimport axios from 'axios';\n\nimport { withRouter, Redirect, Link } from 'react-router-dom';\n\nimport { Icon, Menu, Segment, Sidebar, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst SideNav = ({ user, children, history }) => {\n  useEffect(() => {\n    const getMessagesNotRead = async () => {\n      try {\n        const msgs = await axios.get('/api/users/geturmessagescount');\n        setMessageCount((draft) => msgs.data);\n        const news = await axios.get('/api/users/geturnewscount');\n        setNewsCount((draft) => news.data);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n\n    getMessagesNotRead();\n  });\n  const [messageCount, setMessageCount] = useImmer(Number);\n  const [newsCount, setNewsCount] = useImmer(Number);\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'fixed',\n          zIndex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          width: '250px',\n          background: '#1B1C1D',\n          overflowX: 'hidden',\n          flex: 1,\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            overflowY: 'auto',\n          }}\n        >\n          <Menu vertical inverted size=\"massive\">\n            <Menu.Item>\n              <ServerTime />\n            </Menu.Item>\n            <Menu.Item>\n              <Menu.Menu>\n                <Menu.Item\n                  name=\"Home\"\n                  onClick={() => {\n                    history.push('/homepage');\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"My Profile\"\n                  onClick={() => {\n                    history.push(`/profile/${user.userid}`);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Explore Land\"\n                  onClick={() => {\n                    history.push('/explore', user);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name={'Messages' + (messageCount !== 0 ? messageCount : '')}\n                  onClick={() => history.push('/messages')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: messageCount !== 0 && 'yellow',\n                  }}\n                />\n                <Menu.Item\n                  name={'My News' + (newsCount !== 0 ? newsCount : '')}\n                  onClick={() => history.push('/news')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: newsCount !== 0 && 'yellow',\n                  }}\n                />\n\n                <Menu.Item\n                  name=\"Buildings\"\n                  onClick={() => history.push('/buildings')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Military\"\n                  onClick={() => history.push('/military')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Attack\"\n                  onClick={() => history.push('/attack')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Intelligence\"\n                  onClick={() => history.push('/intelligence')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Scoreboard\"\n                  onClick={() => history.push('/scoreboard')}\n                  style={{ fontSize: 'x-large' }}\n                />\n              </Menu.Menu>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </div>\n      {children}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(SideNav));\n","import React, { useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Grid, Header } from 'semantic-ui-react';\n\nimport LoginPage from './components/authPage/AuthPage';\nimport SignUp from './components/SignupPage/SignupPage';\nimport HomePage from './components/HomePage/HomePage';\nimport ControlPanel from './components/controlPanel/ControlPanel';\nimport ExploreLandPage from './components/GameUI/ExploreLand/ExploreLand';\nimport MyMessagesPage from './components/GameUI/MyMessages/MyMessages';\nimport BuildingsPage from './components/GameUI/Buildings/Buildings';\nimport MilitaryPage from './components/GameUI/Military/MilitaryPage';\nimport AttackPage from './components/GameUI/Attack/Attack';\nimport ScoreboardPage from './components/GameUI/Scoreboard/Scoreboard';\nimport ProfilePage from './components/GameUI/Profile/Profile';\nimport CreateEditProfilePage from './components/GameUI/Profile/CreateEditProfile';\nimport IntelligencePage from './components/GameUI/Intelligence/Intelligence';\nimport NewsPage from './components/GameUI/News/News';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport SideNav from './components/SideNav/SideNav';\n\nimport { initUser, resetUser } from './redux/actions/user';\n\nconst App = () => {\n  const [loadingStatus, setLoadingStatus] = useImmer({\n    done: false,\n    isAuth: false,\n  });\n\n  useEffect(() => {\n    async function testingFunc() {\n      try {\n        const user = await axios.get('/api/auth/getuser');\n        console.log('user', user);\n        store.dispatch(initUser(user.data));\n      } catch (err) {\n        store.dispatch(resetUser());\n      }\n      setLoadingStatus((draft) => {\n        draft.done = true;\n        draft.isAuth = store.getState().user.isAuthenticated;\n      });\n    }\n    testingFunc();\n  }, [setLoadingStatus]);\n  return (\n    <Provider store={store}>\n      {loadingStatus.done ? (\n        <Fragment>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={LoginPage} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <SideNav>\n                <Route exact path=\"/homepage\" component={HomePage} />\n                <Route exact path=\"/control\" component={ControlPanel} />\n                <Route exact path=\"/explore\" component={ExploreLandPage} />\n                <Route exact path=\"/messages\" component={MyMessagesPage} />\n                <Route exact path=\"/buildings\" component={BuildingsPage} />\n                <Route exact path=\"/military\" component={MilitaryPage} />\n                <Route exact path=\"/attack\" component={AttackPage} />\n                <Route exact path=\"/attack/:userid\" component={AttackPage} />\n                <Route exact path=\"/scoreboard\" component={ScoreboardPage} />\n                <Route exact path=\"/profile/:userid\" component={ProfilePage} />\n                <Route\n                  exact\n                  path=\"/ceprofile\"\n                  component={CreateEditProfilePage}\n                />\n                <Route exact path=\"/news\" component={NewsPage} />\n                <Route\n                  exact\n                  path=\"/intelligence\"\n                  component={IntelligencePage}\n                />\n                <Route\n                  exact\n                  path=\"/intelligence/:userid\"\n                  component={IntelligencePage}\n                />\n              </SideNav>\n            </Switch>\n          </Router>\n        </Fragment>\n      ) : (\n        <Grid\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          style={{ height: '100vh' }}\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h3\">Loading....</Header>\n          </Grid.Column>\n        </Grid>\n      )}\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}