{"version":3,"sources":["redux/actions/types.js","redux/actions/user.js","components/ServerTime/ServerTime.js","components/authPage/AuthPage.js","components/SignupPage/SignupPage.js","components/SideNav/SideOverview.js","components/HomePage/HomePage.js","components/controlPanel/ControlPanel.js","redux/actions/items.js","components/GameUI/ExploreLand/ExploreLand.js","components/GameUI/MyMessages/MyMessages.js","components/GameUI/Buildings/Buildings.js","components/GameUI/Military/MilitaryPage.js","components/GameUI/Attack/Attack.js","components/GameUI/Scoreboard/Scoreboard.js","components/GameUI/Profile/Profile.js","components/GameUI/Profile/CreateEditProfile.js","components/GameUI/Intelligence/Intelligence.js","components/GameUI/News/News.js","components/askQuestions/AskQuestions.js","components/jobListing/JobListing.js","components/askQuestions/SpecificPage.js","components/Feedback/Feedback.js","redux/reducers/user.js","redux/reducers/items.js","redux/reducers/toDoList.js","redux/reducers/index.js","redux/store.js","components/SideNav/SideNav.js","App.js","index.js"],"names":["LOGIN","INIT_USER","RESET_USER","SIGNUP","GETITEMS","ADDTASKS","initUser","data","dispatch","type","payload","resetUser","dateSetting","timezone","locale","format","localeString","DateTime","DATETIME_FULL_WITH_SECONDS","ServerTime","useImmer","serverTime","local","setZone","setLocale","toFormat","toLocaleString","setServerTime","serverID","serverTicker","isLoading","setServerTicker","done","serverDoneTicking","setServerDoneTicking","useEffect","interval","setInterval","draft","clearInterval","a","axios","get","serverTick","_id","tick","getServerTicker","plusServerTicker","Header","as","style","color","now","parseInt","tickerTimer","connect","state","user","loginUser","formData","history","post","res","push","alert","withRouter","email","password","setFormData","errors","formErrors","setFormErrors","onChange","e","target","name","value","Helmet","isAuthenticated","to","Grid","textAlign","height","verticalAlign","Column","maxWidth","Form","size","onSubmit","preventDefault","includes","Object","keys","length","checkForm","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","Button","Message","signup","response","msg","password2","validateForm","console","log","SideOverview","userDetails","window","innerWidth","position","display","flexDirection","top","bottom","right","width","background","overflowX","flex","overflowY","Menu","vertical","inverted","Item","otherThings","country","school","networth","land","money","population","food","nextIncrements","intelligenceDivision","recons","commandos","infantryDivision","attackPts","defencePts","airDivision","seaDivision","match","retrieveUser","getUser","error","retrievePosts","getPosts","setPosts","content","setPost","posts","postStructure","coverage","username","text","unshift","date","result","onRefresh","err","Row","columns","TextArea","onClick","Feed","map","postx","index","Event","Content","Summary","userID","Date","Extra","isAuth","userItems","items","getAllItemsByEmail","theItems","setTheItems","Card","Group","centered","item","itemName","Meta","quantity","Description","additionalNote","ExploreLand","React","useState","open","setOpen","location","setPopulation","sendingAmt","setSendingAmt","totalCost","setTotalCost","tasks","setTasks","getExploringTasks","retrievedTasks","JSON","stringify","onSend","structure","creation","amount","sendExplorer","label","test","Modal","onClose","onOpen","trigger","scrolling","Table","celled","padded","HeaderCell","Body","task","Cell","singleLine","doneInWhatTick","Actions","Icon","MyMessages","getMsg","setMessages","messages","setLoading","retrieveMsg","loading","from","Buildings","setBuildingQty","home","buildings","homes","moneyGenerator","intel","intelligenceCamp","armyCamp","infantryCamp","airField","navalBase","getBuildings","Number","buildingQty","intelDiv","setIntelDiv","setMoneyGenerator","setHomes","setArmyCamp","setAirField","setNavalBase","buildingTasks","setBuildingTasks","getBuildingTasks","MilitaryPage","setSpaces","setUnits","recon","commando","infanOne","infantry1","infanTwo","infantry2","infanThree","infantry3","infanFour","infantry4","airOne","air1","airTwo","air2","airThree","air3","airFour","air4","seaOne","sea1","seaTwo","sea2","seaThree","sea3","seaFour","sea4","getUnits","spaces","units","getMilitaryTasks","intelligenceDiv","infantryOne","infantryTwo","infantryThree","infantryFour","infantryDiv","setInfantryDiv","airDiv","setAirDiv","navalDiv","setNavalDiv","onChangeIntelDiv","onChangeInfanDiv","onChangeAirDiv","onChangeNavalDiv","availableSpace","AttackPage","getTasks","output","params","userid","setTarget","onInfantryChange","onAirChange","onNavalChange","totalPower","tPwer","tCost","infantryPower","entries","i","airPower","navalPower","sub","ScoreboardPage","users","setUsers","retrievedUsers","getUsers","userInfo","setUser","getUserInfo","profile","battle","tabs","setTabs","message","setMessage","onTab","onMessage","messageUser","divided","subheader","positive","bio","maxHeight","skillsets","skill","experiences","experience","title","company","description","current","battleStats","wins","losses","setName","setBio","skills","setSkills","setExperiences","youtube","social","twitter","facebook","instagram","socials","setSocials","website","setWebsite","setCompany","onSkillChange","id","onSkillDelete","splice","onExpChange","onExpDelete","onSocialChange","socialmedias","submitForm","Field","Label","IntelligencePage","tasksopen","setTasksOpen","setRecon","setCommando","onSendRecon","onSendCommando","intelTasks","setIntelTasks","onGetIntelTasks","setIntel","getIntels","intels","saboTasks","setSaboTasks","onGetSaboTasks","missions","setMissions","onGetMissions","sabotages","profileTab","forces","info","List","navalDivision","battleTab","mission","NewsPage","logs","AnDLogs","setUserLogs","getLogs","userLogs","AskQuestions","href","Image","src","wrapped","ui","JobListing","marginLeft","overFlowY","Dropdown","selection","options","key","Divider","SpecificPage","setQuestions","getQnA","questions","question","setQuestion","float","Comment","dividing","qns","reply","Feedback","feedback","setFeedback","initialState","action","produce","testing","allReducers","combineReducers","toDoList","middleware","thunk","lacreateStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","children","msgs","setMessageCount","news","setNewsCount","getMessagesNotRead","messageCount","newsCount","show","setShow","closeMenu","zIndex","left","fontSize","App","loadingStatus","setLoadingStatus","store","getState","testingFunc","exact","path","component","LoginPage","SignUp","HomePage","ControlPanel","ExploreLandPage","MyMessagesPage","BuildingsPage","ProfilePage","CreateEditProfilePage","AskPage","ReactDOM","render","document","getElementById"],"mappings":"4SACaA,EAAQ,QACRC,EAAY,YACZC,EAAa,aACbC,EAAS,SAGTC,EAAW,WAGXC,EAAW,WCUXC,EAAW,SAACC,GAAD,OAAU,SAACC,GACjCA,EAAS,CACPC,KAAMR,EACNS,QAASH,MAKAI,EAAY,kBAAM,SAACH,GAC9BA,EAAS,CACPC,KAAMP,M,QCpBJU,EAAc,CAClBC,SAAU,iBACVC,OAAQ,QACRC,OAAQ,KACRC,aAAcC,WAASC,4BAwGVC,EArGI,WAAO,IAAD,EACaC,YAAS,CAC3CC,WAAYJ,WAASK,QAClBC,QAAQX,EAAYC,UACpBW,UAAUZ,EAAYE,QACtBW,SAASb,EAAYG,QACrBW,eAAed,EAAYI,gBANT,mBAChBK,EADgB,KACJM,EADI,OAQiBP,YAAS,CAC/CQ,SAAU,GACVC,aAAc,GACdC,WAAW,IAXU,mBAQhBD,EARgB,KAQFE,EARE,OAa2BX,YAAS,CACzDY,MAAM,IAde,mBAahBC,EAbgB,KAaGC,EAbH,KAgBvBC,qBAAU,WAER,IAAMC,EAAWC,aAAY,WAC3BV,GAAc,SAACW,GACbA,EAAMjB,WAAaJ,WAASK,QACzBC,QAAQX,EAAYC,UACpBW,UAAUZ,EAAYE,QACtBW,SAASb,EAAYG,QACrBW,eAAed,EAAYI,mBAE/B,KAEH,OAAO,WAELuB,cAAcH,MAEf,CAACT,IAEJQ,qBAAU,YACa,uCAAG,4BAAAK,EAAA,sEACGC,IAAMC,IAAI,8BADb,OAChBC,EADgB,OAEtBZ,GAAgB,SAACO,GACfA,EAAMV,SAAWe,EAAWpC,KAAKqC,IACjCN,EAAMT,aAAec,EAAWpC,KAAKsC,KACrCP,EAAMR,WAAY,KALE,2CAAH,qDAQrBgB,KACC,CAACf,IAEJ,IAAMgB,EAAgB,uCAAG,sBAAAP,EAAA,sDAClBP,EAAkBD,OACrBE,GAAqB,SAACI,GACpBA,EAAMN,MAAO,KAEfD,GAAgB,SAACO,GACfA,EAAMT,aAAeS,EAAMT,aAAe,MANvB,2CAAH,qDAyCtB,OACE,cAAC,WAAD,UACGA,EAAaC,UAAY,KACxB,eAACkB,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAO,CAAEC,MAAO,SAAhC,UACG9B,EAAWA,WACZ,uBAFF,kBAhCc,WAClB,IAAM+B,EAAMnC,WAASK,QAClBC,QAAQ,kBACRC,UAAU,SACVC,SAAS,KAEZ,MAAY,OAAR2B,GAAwB,MAARA,GAClBL,IACO,KAGLM,SAASD,GAAO,GAAKC,SAASD,GAAO,IAAMnB,EAAkBD,MAC/DE,GAAqB,SAACI,GACpBA,EAAMN,MAAO,KAGbqB,SAASD,IAAQ,GAAKC,SAASD,GAAO,KAAOnB,EAAkBD,KAC1D,GAAKqB,SAASD,GAGnBC,SAASD,IAAQ,IAAMC,SAASD,GAAO,KAAOnB,EAAkBD,KAC3D,GAAKqB,SAASD,QADvB,GAesBE,GAHlB,e,QCwBOC,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAEC,UF/HjB,SAACC,EAAUC,GAAX,8CAAuB,WAAOpD,GAAP,eAAAgC,EAAA,+EAE1BC,IAAMoB,KAAK,kBAAmBF,GAFJ,OAEtCG,EAFsC,OAI5CtD,EAAS,CACPC,KAAMT,EACNU,QAASoD,EAAIvD,OAGfqD,EAAQG,KAAR,aAT4C,gDAW5CC,MAAM,mBAXsC,yDAAvB,wDE+HVT,CAAwCU,aAlHtC,SAAC,GAAkC,IAAhCP,EAA+B,EAA/BA,UAAWE,EAAoB,EAApBA,QAASH,EAAW,EAAXA,KAAW,EACjBrC,YAAS,CACvC8C,MAAO,GACPC,SAAU,KAHqC,mBAC1CR,EAD0C,KAChCS,EADgC,OAMbhD,YAAS,CAC3CiD,OAAQ,KAPuC,mBAM1CC,EAN0C,KAM9BC,EAN8B,KAU3CC,EAAW,SAACC,GAChBL,GAAY,SAAC9B,GACXA,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,UAqCpC,OACE,eAAC,WAAD,WACE,cAACC,EAAA,EAAD,UACE,iDAEApB,EAAKqB,gBA8CL,cAAC,IAAD,CAAUC,GAAE,cA7CZ,cAACC,EAAA,EAAD,CACEC,UAAU,SACV/B,MAAO,CAAEgC,OAAQ,SACjBC,cAAc,SAHhB,SAKE,eAACH,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAAC,EAAD,IACA,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,OAAO8B,UAAU,SAAvC,oCAGA,cAACK,EAAA,EAAD,CAAMC,KAAK,QAAQC,SA1BZ,SAACf,GAChBA,EAAEgB,iBACFlB,GAAc,SAACjC,GACbA,EAAM+B,OAAS,MApBD,WAChB,IAAMA,EAAS,GAOf,MANuB,KAAnBV,EAASO,OAAiBP,EAASO,MAAMwB,SAAS,OACpDrB,EAAOH,MAAQ,2BAES,KAAtBP,EAASQ,WACXE,EAAOF,SAAW,4BAEe,IAA/BwB,OAAOC,KAAKvB,GAAQwB,SACtBtB,GAAc,SAACjC,GACbA,EAAM+B,OAASA,MAEV,GAUOyB,IAEdpC,EAAUC,EAAUC,IAmBd,SACE,eAACmC,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,iBACZ1B,KAAK,QACLC,MAAOjB,EAASO,MAChBM,SAAUA,IAEXF,EAAWD,OAAOH,MACnB,cAACoB,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZ5F,KAAK,WACLkE,KAAK,WACLC,MAAOjB,EAASQ,SAChBK,SAAUA,IAEXF,EAAWD,OAAOF,SAEnB,cAACmC,EAAA,EAAD,CAAQnD,MAAM,OAAO+C,OAAK,EAACX,KAAK,QAAQ9E,KAAK,SAA7C,wBAKJ,eAAC8F,EAAA,EAAD,yBACa,cAAC,IAAD,CAAMxB,GAAG,UAAT,oCCoBVxB,cAAQ,KAAM,CAAEiD,OHjGT,SAAC7C,EAAUC,GAAX,8CAAuB,WAAOpD,GAAP,eAAAgC,EAAA,+EAEvBC,IAAMoB,KAAK,qBAAsBF,GAFV,OAEnCG,EAFmC,OAGzCtD,EAAS,CACPC,KAAMN,EACNO,QAASoD,EAAIvD,OAEfqD,EAAQG,KAAR,aAPyC,gDASzCC,MAAM,KAAIyC,SAASlG,KAAKmG,KATiB,yDAAvB,wDGiGPnD,CAA0BU,aA5HtB,SAAC,GAAyB,IAAvBuC,EAAsB,EAAtBA,OAAQ5C,EAAc,EAAdA,QAAc,EACVxC,YAAS,CACvCuD,KAAM,GACNT,MAAO,GACPC,SAAU,GACVwC,UAAW,KAL6B,mBACnChD,EADmC,KACzBS,EADyB,OAONhD,YAAS,CAC3CiD,OAAQ,KARgC,mBAOnCC,EAPmC,KAOvBC,EAPuB,KAWpCC,EAAQ,uCAAG,WAAOC,GAAP,SAAAjC,EAAA,sDACf4B,GAAY,SAAC9B,GACXA,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,SAFnB,2CAAH,sDAkDd,OACE,cAACI,EAAA,EAAD,CAAMC,UAAU,SAAS/B,MAAO,CAAEgC,OAAQ,SAAWC,cAAc,SAAnE,SACE,eAACH,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,OAAO8B,UAAU,SAAvC,oBAGA,cAACK,EAAA,EAAD,CAAMC,KAAK,QAAQC,SApBR,SAACf,GAChBA,EAAEgB,iBACFlB,GAAc,SAACjC,GACbA,EAAM+B,OAAS,MAjCE,WACnB,IAAMA,EAAS,GAoBf,MAnBsB,KAAlBV,EAASgB,OACXN,EAAOM,KAAO,iBAEO,KAAnBhB,EAASO,QACXG,EAAOH,MAAQ,kBAES,KAAtBP,EAASQ,WACXE,EAAOF,SAAW,qBAEhBR,EAASQ,SAAS0B,OAAS,IAC7BxB,EAAOF,SAAW,iDAGO,KAAvBR,EAASgD,YACXtC,EAAOsC,UAAY,qBAEjBhD,EAASQ,WAAaR,EAASgD,YACjCtC,EAAOsC,UAAY,4BAEc,IAA/BhB,OAAOC,KAAKvB,GAAQwB,SACtBtB,GAAc,SAACjC,GACbA,EAAM+B,OAASA,MAEV,GAWOuC,IAEdC,QAAQC,IAAI,YAAanD,GACzB6C,EAAO7C,EAAUC,IAEjBiD,QAAQC,IAAI,oBASV,SACE,eAACf,EAAA,EAAD,CAASC,SAAO,EAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,aACLC,aAAa,OACbC,YAAY,OACZ1B,KAAK,OACLH,SAAUA,IAEXF,EAAWD,OAAOM,KACnB,qEACA,cAACW,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,uBACZ1B,KAAK,QACLH,SAAUA,IAGXF,EAAWD,OAAOH,MACnB,cAACoB,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZ5F,KAAK,WACLkE,KAAK,WACLH,SAAUA,IAEXF,EAAWD,OAAOF,SACnB,cAACmB,EAAA,EAAKW,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,mBACZ5F,KAAK,WACLkE,KAAK,YACLH,SAAUA,IAEXF,EAAWD,OAAOsC,UAEnB,cAACL,EAAA,EAAD,CAAQnD,MAAM,OAAO+C,OAAK,EAACX,KAAK,QAAQ9E,KAAK,SAA7C,mC,SCWGsG,EA7HM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,cAAC,WAAD,UACGC,OAAOC,WAAa,IACnB,cAAC,WAAD,IAEA,qBACEhE,MAAO,CACLiE,SAAU,QACVC,QAAS,OACTC,cAAe,SACfC,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,QACPC,WAAY,UACZC,UAAW,SACXC,KAAM,GAXV,SAcE,qBACE1E,MAAO,CACL0E,KAAM,EACNC,UAAW,QAHf,SAME,eAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,UAAQ,EAAvB,UACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,6BACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,uBACYjB,EAAYkB,YAAYC,WAEpC,eAACL,EAAA,EAAKG,KAAN,sBACWjB,EAAYkB,YAAYE,UAEnC,eAACN,EAAA,EAAKG,KAAN,wBACajB,EAAYkB,YAAYG,YAErC,eAACP,EAAA,EAAKG,KAAN,oBAAkBjB,EAAYkB,YAAYI,QAC1C,eAACR,EAAA,EAAKG,KAAN,sBAAoBjB,EAAYkB,YAAYK,SAC5C,eAACT,EAAA,EAAKG,KAAN,0BACejB,EAAYkB,YAAYM,cAEvC,eAACV,EAAA,EAAKG,KAAN,oBAAkBjB,EAAYkB,YAAYO,cAG9C,eAACX,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,mCACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,sBACWjB,EAAYkB,YAAYQ,eAAeH,SAElD,eAACT,EAAA,EAAKG,KAAN,yBACc,IACXjB,EAAYkB,YAAYQ,eAAeF,oBAK9C,eAACV,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,oCACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,6BACkB,IACfjB,EAAYkB,YAAYS,qBAAqBC,UAEhD,eAACd,EAAA,EAAKG,KAAN,wBACa,IACVjB,EAAYkB,YAAYS,qBAAqBE,mBAIpD,eAACf,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,gCACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,4BACiB,IACdjB,EAAYkB,YAAYY,iBAAiBC,aAE5C,eAACjB,EAAA,EAAKG,KAAN,6BACkB,IACfjB,EAAYkB,YAAYY,iBAAiBE,oBAKhD,eAAClB,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,2BACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,4BACiB,IACdjB,EAAYkB,YAAYe,YAAYF,aAEvC,eAACjB,EAAA,EAAKG,KAAN,6BACkB,IACfjB,EAAYkB,YAAYe,YAAYD,oBAI3C,eAAClB,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAK9E,OAAN,2BACA,eAAC8E,EAAA,EAAKA,KAAN,WACE,eAACA,EAAA,EAAKG,KAAN,4BACiB,IACdjB,EAAYkB,YAAYgB,YAAYH,aAEvC,eAACjB,EAAA,EAAKG,KAAN,6BACkB,IACfjB,EAAYkB,YAAYgB,YAAYF,8B,kBC5FnDpI,EACM,iBADNA,EAEI,QAFJA,EAGI,KA0JK2C,GAzJCtC,WAASC,2BAyJVqC,aATS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAQ0B,CAAEnD,YAA3BiD,EAtJE,SAAC,GAA+B,IAA7BE,EAA4B,EAA5BA,KAAMnD,EAAsB,EAAtBA,SAAsB,EAAZ6I,MAClChH,qBAAU,WACR,IAAMiH,EAAY,uCAAG,4BAAA5G,EAAA,+EAEKC,IAAMC,IAAN,qBAFL,OAEX2G,EAFW,OAGjB/I,EAAS+I,EAAQ9I,MAHA,gDAKjBsG,QAAQyC,MAAM,KAAI7C,SAASlG,MALV,yDAAH,qDAQZgJ,EAAa,uCAAG,4BAAA/G,EAAA,+EAEKC,IAAMC,IAAI,yBAFf,OAEZ8G,EAFY,OAGlBC,GAAS,SAACnH,GACRA,EAAMoH,QAAUF,EAASjJ,QAJT,gDAOlBsG,QAAQC,IAAI,KAAIL,UAPE,yDAAH,qDAUnB2C,IACAG,MACC,IAtB2C,MAuBtBnI,YAAS,CAAEsI,QAAS,KAvBE,mBAuBvC7F,EAvBuC,KAuBjC8F,EAvBiC,OAwBpBvI,YAAS,CAAEsI,QAAS,KAxBA,mBAwBvCE,EAxBuC,KAwBhCH,EAxBgC,KA+BxCjE,EAAQ,uCAAG,WAAOf,GAAP,iBAAAjC,EAAA,sEAEbiC,EAAEgB,iBACIoE,EAAgB,CACpBzB,OAAQ3E,EAAKyE,YAAYE,OACzB0B,SAAU,YACVnF,KAAMlB,EAAKsG,SACXC,KAAMnG,GAER4F,GAAS,SAACnH,GACRA,EAAMoH,QAAQO,QAAQ,CACpBC,KAAMjJ,WAASK,QACZC,QAAQX,GACRY,UAAUZ,GACVa,SAASb,GACZkJ,SAAU,YACV1B,OAAQ3E,EAAKyE,YAAYE,OACzBzD,KAAMlB,EAAKsG,SACXC,KAAMnG,EAAK6F,aAlBF,SAqBQjH,IAAMoB,KAAK,iBAAkBgG,GArBrC,OAqBPM,EArBO,OAsBbtD,QAAQC,IAAIqD,EAAO5J,MAtBN,kDAwBbsG,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KAxBnB,0DAAH,sDA4BR0D,EAAS,uCAAG,WAAO3F,GAAP,eAAAjC,EAAA,sEAEdiC,EAAEgB,iBAFY,SAGShD,IAAMC,IAAI,yBAHnB,OAGR8G,EAHQ,OAIdC,GAAS,SAACnH,GACRA,EAAMoH,QAAUF,EAASjJ,QALb,gDAQdsG,QAAQwD,IAAI,KAAI5D,SAASlG,KAAKmG,KARhB,yDAAH,sDAYf,OACE,eAAC,WAAD,WACE,cAAC7B,EAAA,EAAD,UACE,gDAEApB,EAAKqB,gBAGL,8BACE,cAACE,EAAA,EAAD,CAAM9B,MAAO,CAAEgC,OAAQ,SAAWD,UAAU,SAA5C,SACE,cAACD,EAAA,EAAKsF,IAAN,CAAUC,QAAS,EAAnB,SACE,eAACvF,EAAA,EAAKI,OAAN,WACE,eAAC,WAAD,WACE,cAACpC,EAAA,EAAD,CAAQC,GAAG,KAAKgC,UAAU,OAA1B,qBAGA,eAACK,EAAA,EAAD,CAAME,SAAUA,EAAhB,UACE,cAACgF,EAAA,EAAD,CACEnE,YAAY,eACZ1B,KAAK,OACLH,SAlEH,SAACC,GAChBkF,GAAQ,SAACrH,GACPA,EAAMoH,QAAUjF,EAAEC,OAAOE,YA4EX,cAAC0B,EAAA,EAAD,CACEoD,QAAQ,OACRvG,MAAM,QACNoC,KAAK,QACLW,OAAK,EACLzF,KAAK,cAGT,cAAC6F,EAAA,EAAD,CAAQJ,OAAK,EAAC/C,MAAM,MAAMsH,QAASL,EAAnC,qBAGA,cAACM,EAAA,EAAD,UACGd,EAAMF,QAAQiB,KAAI,SAACC,EAAOC,GAAR,OACjB,cAACH,EAAA,EAAKI,MAAN,UACE,eAACJ,EAAA,EAAKK,QAAN,WACE,eAACL,EAAA,EAAKM,QAAN,WACE,cAAC,IAAD,CAAMjG,GAAE,mBAAc6F,EAAMK,QAA5B,SACGL,EAAMjG,OAET,cAAC+F,EAAA,EAAKQ,KAAN,UAAYN,EAAMxC,SAClB,cAACsC,EAAA,EAAKQ,KAAN,UAAYN,EAAMV,UAEpB,cAACQ,EAAA,EAAKS,MAAN,CAAYnB,MAAI,EAAhB,SAAkBY,EAAMZ,WATXa,WAevB,cAAC,EAAD,CAAU7D,YAAavD,aAtD/B,cAAC,IAAD,CAAUsB,GAAG,a,SCrBNxB,eALS,SAACC,GAAD,MAAY,CAClC4H,OAAQ5H,EAAMC,KAAKqB,gBACnBuG,UAAW7H,EAAM8H,SAGqB,CAAEC,mBCjFR,yDAAM,WAAO/K,GAAP,eAAAgC,EAAA,+EAElBC,IAAMC,IAAI,qBAFQ,OAE9BoB,EAF8B,OAGpCtD,EAAS,CACPC,KAAML,EACNM,QAASoD,EAAIvD,OALqB,gDAQpCsG,QAAQC,IAAI,UAAW,KAAIL,SAASlG,MARA,yDAAN,wDDiFnBgD,EA3EM,SAAC,GAA+C,IAA7C6H,EAA4C,EAA5CA,OAAQG,EAAoC,EAApCA,mBAAoBF,EAAgB,EAAhBA,UAAgB,EAClCjK,YAAS,CACvCkK,MAAO,GACPxJ,WAAW,IAHqD,mBAC3D0J,EAD2D,KACjDC,EADiD,KAuBlE,OAlBAtJ,qBAAU,WACRoJ,MACC,CAACA,IAEJpJ,qBAAU,WACHkJ,EAAUvJ,UAMb2J,GAAY,SAACnJ,GACXA,EAAMgJ,MAAQ,GACdhJ,EAAMR,WAAY,KAPpB2J,GAAY,SAACnJ,GACXA,EAAMgJ,MAAQD,EAAU9K,KAAK+K,MAC7BhJ,EAAMR,WAAY,OASrB,CAACuJ,EAAUvJ,YAEZ,cAACkD,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACR,EAAA,EAAD,UACE,oDAEAuG,EAGA,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,IACCI,EAAS1J,UACR,kDAEA,cAAC,WAAD,UAC6B,IAA1B0J,EAASF,MAAMzF,OACd,8CAEA,cAAC6F,EAAA,EAAKC,MAAN,CAAYC,UAAU,EAAtB,SACGJ,EAASF,MAAMX,KAAI,SAACkB,GAAD,OAClB,cAACH,EAAA,EAAD,UACE,eAACA,EAAA,EAAKX,QAAN,WACE,cAACW,EAAA,EAAK1I,OAAN,UAAc6I,EAAKC,WACnB,eAACJ,EAAA,EAAKK,KAAN,eAAaF,EAAKG,YAClB,cAACN,EAAA,EAAKO,YAAN,UACGJ,EAAKK,qBALDL,EAAKjJ,eAd5B,cAAC,IAAD,CAAUmC,GAAG,mB,mCEiGRoH,EA1HK,SAAC,GAAiB,IAAfvI,EAAc,EAAdA,QAAc,EACXwI,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,OAECnL,YAClCwC,EAAQ4I,SAAShJ,MAAM0E,YAAYM,YAHF,mBAE5BA,EAF4B,KAEhBiE,EAFgB,OAKCrL,YAAS,GALV,mBAK5BsL,EAL4B,KAKhBC,EALgB,OAMDvL,YAAS,GANR,mBAM5BwL,EAN4B,KAMjBC,EANiB,OAOTzL,YAAS,IAPA,mBAO5B0L,EAP4B,KAOrBC,EAPqB,KAW7BC,EAAiB,uCAAG,4BAAAxK,EAAA,+EAEOC,IAAMC,IAAI,kCAFjB,OAEhBuK,EAFgB,OAGtBF,GAAS,SAACzK,GAAD,OAAW2K,EAAe1M,QAHb,gDAKtByD,MAAMkJ,KAAKC,UAAU,KAAI1G,SAASlG,OALZ,yDAAH,qDAejB6M,EAAM,uCAAG,WAAO3I,GAAP,iBAAAjC,EAAA,sEAEXiC,EAAEgB,iBACI4H,EAAY,CAChBC,SAAU,CACRC,OAAQb,GAEVE,UAAWA,GAEb/F,QAAQC,IAAI,OAAQ4F,GATT,SAUgBjK,IAAMoB,KAC/B,4BACAwJ,GAZS,OAULG,EAVK,OAcX3G,QAAQC,IAAI0G,EAAajN,MACzBoM,GAAc,SAACrK,GAAD,OAAW,KACzBmK,GAAc,SAACnK,GAAD,OAAYA,EAASoK,KACnC1I,MAAM,MAjBK,kDAmBXA,MAAMkJ,KAAKC,UAAU,KAAI1G,SAASlG,KAAKmG,MAnB5B,0DAAH,sDAuBZ,OACE,cAAC1B,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,cAACF,EAAA,EAAKsF,IAAN,UACE,eAACtF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,0BACA,qCACE,eAACD,EAAA,EAAD,+BAA0BwF,KAC1B,cAACxF,EAAA,EAAD,+BAEF,qCACE,cAACiD,EAAA,EAAD,CACEwH,MAAM,UACN7I,MAAO8H,EACPlI,SA3CK,SAACC,GACZ,oBAAoBiJ,KAAKjJ,EAAEC,OAAOE,SACpC+H,GAAc,SAACrK,GAAD,OAAWmC,EAAEC,OAAOE,SAClCiI,GAAa,SAACvK,GAAD,OAbK,IAaMmC,EAAEC,OAAOE,WAyCzBnE,KAAK,WAEP,cAAC6F,EAAA,EAAD,CAAQnD,MAAM,QAAQsH,QAAS2C,EAA/B,qBAIF,uBACA,uBACA,eAACO,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACRS,KAEFc,QAAS,cAACxH,EAAA,EAAD,CAAQnD,MAAM,QAAd,iCAPX,UASE,cAACwK,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,2BACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGtB,EAAMnC,KAAI,SAAC0D,GAAD,OACT,eAACL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,eAACtL,EAAA,EAAD,WACGqL,EAAKf,SAASC,OADjB,WAE0B,EAAvBc,EAAKf,SAASC,OAFjB,cAKF,eAACS,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKG,eADR,YAGA,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,sBAO9B,cAACyD,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,0BCnElBgK,EAtDI,WACjBxM,qBAAU,YACS,uCAAG,4BAAAK,EAAA,+EAEKC,IAAMC,IAAI,uBAFf,OAEVkM,EAFU,OAGhBC,GAAY,SAACvM,GAAD,OAAWsM,EAAOrO,KAAKuO,YACnCC,GAAW,SAACzM,GAAD,OAAW,KAJN,gDAMhBuE,QAAQyC,MAAM,KAAI7C,UANF,yDAAH,qDASjBuI,KACC,IAZoB,MAaS5N,YAAS,IAblB,mBAahB0N,EAbgB,KAaND,EAbM,OAcOzN,aAAS,GAdhB,mBAchB6N,EAdgB,KAcPF,EAdO,KAevB,OACE,cAAC/J,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,SAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,sBACA,eAAC+K,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,sBACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,WACIa,GACA,cAAC,WAAD,UACGH,EAASnE,KAAI,SAACjE,EAAKmE,GAAN,OACZ,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UAAa5H,EAAIgD,UACjB,cAACsE,EAAA,EAAMM,KAAP,UACE,cAAC,IAAD,CAAMvJ,GAAE,mBAAc2B,EAAIwI,KAAKtM,KAA/B,SACG8D,EAAIwI,KAAKvK,SAId,cAACqJ,EAAA,EAAMM,KAAP,UAAa5H,EAAIwD,OACjB,cAAC8D,EAAA,EAAMM,KAAP,UACE,cAAChI,EAAA,EAAD,CAAQnD,MAAM,QAAd,uBAVY0H,mBCoTnBsE,GA3UG,WAChBhN,qBAAU,YACU,uCAAG,4BAAAK,EAAA,+EAEIC,IAAMC,IAAI,wBAFd,OAEXyH,EAFW,OAGjBiF,GAAe,SAAC9M,GACdA,EAAM+M,KAAOlF,EAAO5J,KAAK+O,UAAUC,MAAMvD,SACzC1J,EAAMkN,eAAiBrF,EAAO5J,KAAK+O,UAAUE,eAAexD,SAC5D1J,EAAMmN,MAAQtF,EAAO5J,KAAK+O,UAAUI,iBAAiB1D,SACrD1J,EAAMqN,SAAWxF,EAAO5J,KAAK+O,UAAUM,aAAa5D,SACpD1J,EAAMuN,SAAW1F,EAAO5J,KAAK+O,UAAUO,SAAS7D,SAChD1J,EAAMwN,UAAY3F,EAAO5J,KAAK+O,UAAUQ,UAAU9D,YATnC,gDAYjBnF,QAAQyC,MAAM,KAAI7C,SAASlG,MAZV,yDAAH,qDAelBwP,KACC,IAlBmB,MAoBE3D,IAAMC,UAAS,GApBjB,mBAoBfC,EApBe,KAoBTC,EApBS,OAqBgBnL,YAAS,CAC7CiO,KAAMW,OACNR,eAAgBQ,OAChBP,MAAOO,OACPL,SAAUK,OACVH,SAAUG,OACVF,UAAWE,SA3BS,mBAqBfC,EArBe,KAqBFb,EArBE,OA6BUhO,YAAS,GA7BnB,mBA6Bf8O,EA7Be,KA6BLC,EA7BK,OA8BsB/O,YAAS,GA9B/B,mBA8BfoO,EA9Be,KA8BCY,EA9BD,OA+BIhP,YAAS,GA/Bb,mBA+BfmO,EA/Be,KA+BRc,EA/BQ,OAgCUjP,YAAS,GAhCnB,mBAgCfuO,EAhCe,KAgCLW,EAhCK,OAiCUlP,YAAS,GAjCnB,mBAiCfyO,EAjCe,KAiCLU,EAjCK,OAkCYnP,YAAS,GAlCrB,mBAkCf0O,EAlCe,KAkCJU,EAlCI,OAoCoBpP,YAAS,IApC7B,mBAoCfqP,EApCe,KAoCAC,EApCA,KAsChBC,EAAgB,uCAAG,4BAAAnO,EAAA,+EAEAC,IAAMC,IAAI,iCAFV,OAEfyH,EAFe,OAGrBtD,QAAQC,IAAIqD,EAAO5J,MACnBmQ,GAAiB,SAACpO,GAAD,OAAW6H,EAAO5J,QAJd,gDAMrBsG,QAAQyC,MAAM,KAAI7C,UANG,yDAAH,qDAUhBjC,EAAW,SAACC,GACM,SAAlBA,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpCyL,GAAS,SAAC/N,GAAD,OAAWmC,EAAEC,OAAOE,SAGX,UAAlBH,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpCwL,GAAkB,SAAC9N,GAAD,OAAWmC,EAAEC,OAAOE,SAGpB,aAAlBH,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpC0L,GAAY,SAAChO,GAAD,OAAWmC,EAAEC,OAAOE,SAGd,aAAlBH,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpC2L,GAAY,SAACjO,GAAD,OAAWmC,EAAEC,OAAOE,SAGd,cAAlBH,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpC4L,GAAa,SAAClO,GAAD,OAAWmC,EAAEC,OAAOE,SAGf,aAAlBH,EAAEC,OAAOC,MACP,oBAAoB+I,KAAKjJ,EAAEC,OAAOE,QACpCuL,GAAY,SAAC7N,GAAD,OAAWmC,EAAEC,OAAOE,UAKhCY,EAAQ,uCAAG,WAAOf,GAAP,iBAAAjC,EAAA,sEAEbiC,EAAEgB,iBACI4H,EAAY,CAChBkC,QACAC,iBACAU,WACAP,WACAE,WACAC,aATW,SAWKrN,IAAMoB,KAAK,8BAA+BwJ,GAX/C,OAWPvJ,EAXO,OAYb+C,QAAQC,IAAIhD,EAAIvD,MAChB8P,GAAS,SAAC/N,GAAD,OAAW,KACpB8N,GAAkB,SAAC9N,GAAD,OAAW,KAC7B6N,GAAY,SAAC7N,GAAD,OAAW,KACvBgO,GAAY,SAAChO,GAAD,OAAW,KACvBiO,GAAY,SAACjO,GAAD,OAAW,KACvBkO,GAAa,SAAClO,GAAD,OAAW,KACxB0B,MAAM,MAnBO,kDAqBb6C,QAAQyC,MAAM,KAAI7C,UArBL,0DAAH,sDAyBd,OACE,cAACzB,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,eAAC,WAAD,WACE,cAACrC,EAAA,EAAD,2BACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,uBACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,gCACA,cAACH,EAAA,EAAMG,WAAP,gCACA,cAACH,EAAA,EAAMG,WAAP,wCACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,qBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,2BACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYZ,OACzB,cAACrB,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,OACLC,MAAO2K,EACP/K,SAAUA,EACV/D,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,gCAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,mBACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYT,iBACzB,cAACxB,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,QACLC,MAAO4K,EACPhL,SAAUA,EACV/D,KAAK,yBAOjB,eAAC,WAAD,WACE,cAACuC,EAAA,EAAD,uBACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,uBACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,mCACA,cAACH,EAAA,EAAMG,WAAP,gCACA,cAACH,EAAA,EAAMG,WAAP,gCACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,kCAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,iBACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYR,QACzB,cAACzB,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAOsL,EACP1L,SAAUA,EACV/D,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,0BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,iBACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYN,WACzB,cAAC3B,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAO+K,EACPnL,SAAUA,EACV/D,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,0BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,iBACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYJ,WACzB,cAAC7B,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAOiL,EACPrL,SAAUA,EACV/D,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,eACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,gBACA,cAACP,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,iBACA,cAACP,EAAA,EAAMM,KAAP,UAAa2B,EAAYH,YACzB,cAAC9B,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,YACLC,MAAOkL,EACPtL,SAAUA,EACV/D,KAAK,yBAuBjB,cAAC6F,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAACuE,QAASjF,EAArC,mBAGA,eAACmI,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACRoE,KAEF7C,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAzB,iCARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,uBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,2BACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGqC,EAAc9F,KAAI,SAAC0D,EAAMxD,GAAP,OACjB,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,UAASqL,EAAKf,SAAS3I,SAEzB,eAACqJ,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKf,SAASC,OAAQ,OAEzB,eAACS,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKG,eADR,WAGA,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,SAVJW,eAiB1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,wBCyPhBiM,GA3jBM,WACnBzO,qBAAU,YACM,uCAAG,4BAAAK,EAAA,sEACMC,IAAMC,IAAI,wBADhB,OACTyH,EADS,OAEf0G,GAAU,SAACvO,GAAD,OAAW6H,EAAO5J,KAAK+O,aACjCwB,GAAS,SAACxO,GACRA,EAAMyO,MAAQ5G,EAAO5J,KAAKoI,qBAAqBC,OAC/CtG,EAAM0O,SAAW7G,EAAO5J,KAAKoI,qBAAqBE,UAClDvG,EAAM2O,SAAW9G,EAAO5J,KAAKuI,iBAAiBoI,UAAUlF,SACxD1J,EAAM6O,SAAWhH,EAAO5J,KAAKuI,iBAAiBsI,UAAUpF,SACxD1J,EAAM+O,WAAalH,EAAO5J,KAAKuI,iBAAiBwI,UAAUtF,SAC1D1J,EAAMiP,UAAYpH,EAAO5J,KAAKuI,iBAAiB0I,UAAUxF,SACzD1J,EAAMmP,OAAStH,EAAO5J,KAAK0I,YAAYyI,KAAK1F,SAC5C1J,EAAMqP,OAASxH,EAAO5J,KAAK0I,YAAY2I,KAAK5F,SAC5C1J,EAAMuP,SAAW1H,EAAO5J,KAAK0I,YAAY6I,KAAK9F,SAC9C1J,EAAMyP,QAAU5H,EAAO5J,KAAK0I,YAAY+I,KAAKhG,SAC7C1J,EAAM2P,OAAS9H,EAAO5J,KAAK2I,YAAYgJ,KAAKlG,SAC5C1J,EAAM6P,OAAShI,EAAO5J,KAAK2I,YAAYkJ,KAAKpG,SAC5C1J,EAAM+P,SAAWlI,EAAO5J,KAAK2I,YAAYoJ,KAAKtG,SAC9C1J,EAAMiQ,QAAUpI,EAAO5J,KAAK2I,YAAYsJ,KAAKxG,YAE/C+C,GAAW,SAACzM,GAAD,OAAW,KAnBP,2CAAH,qDAqBdmQ,KACC,IAxBsB,MAyBKrR,aAAS,GAzBd,mBAyBlB6N,EAzBkB,KAyBTF,EAzBS,OA0BG3N,YAAS,IA1BZ,mBA0BlBsR,EA1BkB,KA0BV7B,EA1BU,OA2BCzP,YAAS,CACjC2P,MAAOf,OACPgB,SAAUhB,OACViB,SAAUjB,OACVmB,SAAUnB,OACVqB,WAAYrB,OACZuB,UAAWvB,OACXyB,OAAQzB,OACR2B,OAAQ3B,OACR6B,SAAU7B,OACV+B,QAAS/B,OACTiC,OAAQjC,OACRmC,OAAQnC,OACRqC,SAAUrC,OACVuC,QAASvC,SAzCc,mBA2BlB2C,EA3BkB,KA2BX7B,EA3BW,OA2CD1E,IAAMC,UAAS,GA3Cd,mBA2ClBC,EA3CkB,KA2CZC,EA3CY,KA6CnBqG,EAAgB,uCAAG,4BAAApQ,EAAA,+EAEAC,IAAMC,IAAI,iCAFV,OAEfyH,EAFe,OAGrBtD,QAAQC,IAAIqD,EAAO5J,MACnBwM,GAAS,SAACzK,GAAD,OAAW6H,EAAO5J,QAJN,gDAMrBsG,QAAQyC,MAAM,KAAI7C,UANG,yDAAH,qDA7CG,EAsDCrF,YAAS,IAtDV,mBAsDlB0L,EAtDkB,KAsDXC,EAtDW,OAwDc3L,YAAS,CAC9C2P,MAAO,EACPC,SAAU,IA1Da,mBAwDlB6B,EAxDkB,KAwDD1C,EAxDC,OA6Da/O,YAAS,CAC7C0R,YAAa,EACbC,YAAa,EACbC,cAAe,EACfC,aAAc,IAjES,mBA6DlBC,EA7DkB,KA6DLC,EA7DK,OAmEG/R,YAAS,CACnCqQ,OAAQ,EACRE,OAAQ,EACRE,SAAU,EACVE,QAAS,IAvEc,mBAmElBqB,EAnEkB,KAmEVC,EAnEU,OAyEOjS,YAAS,CACvC6Q,OAAQ,EACRE,OAAQ,EACRE,SAAU,EACVE,QAAS,IA7Ec,mBAyElBe,EAzEkB,KAyERC,EAzEQ,KAgFnBC,EAAmB,SAAC/O,GACxB0L,GAAY,SAAC7N,GACP,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,WAIhC6O,EAAmB,SAAChP,GACxB0O,GAAe,SAAC7Q,GACV,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,WAIhC8O,GAAiB,SAACjP,GACtB4O,GAAU,SAAC/Q,GACL,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,WAIhC+O,GAAmB,SAAClP,GACxB8O,GAAY,SAACjR,GACP,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,WAKhCY,GAAQ,uCAAG,WAAOf,GAAP,SAAAjC,EAAA,sEAEbiC,EAAEgB,iBAFW,SAGKhD,IAAMoB,KAAK,8BAA+B,CAC1DgP,kBACAK,cACAE,SACAE,aAPW,cASbH,GAAe,SAAC7Q,GACdA,EAAMwQ,YAAc,EACpBxQ,EAAMyQ,YAAc,EACpBzQ,EAAM0Q,cAAgB,EACtB1Q,EAAM2Q,aAAe,KAEvBI,GAAU,SAAC/Q,GACTA,EAAMmP,OAAS,EACfnP,EAAMqP,OAAS,EACfrP,EAAMuP,SAAW,EACjBvP,EAAMyP,QAAU,KAElBwB,GAAY,SAACjR,GACXA,EAAM2P,OAAS,EACf3P,EAAM6P,OAAS,EACf7P,EAAM+P,SAAW,EACjB/P,EAAMiQ,QAAU,KAElBvO,MAAM,MA3BO,kDA6BbA,MAAM,KAAIyC,SAASlG,KAAKmG,KA7BX,0DAAH,sDAiCd,OACE,cAAC1B,EAAA,EAAD,CACEC,UAAU,SACVE,cAAc,SACdjC,MAAO,CAAEgC,OAAQ,SACjBqF,QAAS,EAJX,SAMG0E,EACC,cAACjM,EAAA,EAAD,yBAEA,eAACgC,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,0BACA,cAACD,EAAA,EAAD,oCACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,8BACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,uBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UACGoE,EAAOhD,iBAAiBkE,iBAE3B,cAAC5F,EAAA,EAAMM,KAAP,UAAaqE,EAAM5B,QACnB,cAAC/C,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,QACLC,MAAOiO,EAAgB9B,MACvBvM,SAAUgP,EACV/S,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,yBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UACGoE,EAAOhD,iBAAiBkE,iBAE3B,cAAC5F,EAAA,EAAMM,KAAP,UAAaqE,EAAM3B,WACnB,cAAChD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAOiO,EAAgB7B,SACvBxM,SAAUgP,EACV/S,KAAK,sBAMf,cAACuC,EAAA,EAAD,gCACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BAEA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,8BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO9C,aAAagE,iBACjC,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAM1B,WACnB,cAACjD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,cACLC,MAAOsO,EAAYJ,YACnBtO,SAAUiP,EACVhT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO9C,aAAagE,iBACjC,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMxB,WACnB,cAACnD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,cACLC,MAAOsO,EAAYH,YACnBvO,SAAUiP,EACVhT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO9C,aAAagE,iBACjC,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMtB,aACnB,cAACrD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,gBACLC,MAAOsO,EAAYF,cACnBxO,SAAUiP,EACVhT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO9C,aAAagE,iBACjC,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMpB,YACnB,cAACvD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,eACLC,MAAOsO,EAAYD,aACnBzO,SAAUiP,EACVhT,KAAK,sBAMf,cAACuC,EAAA,EAAD,2BACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BAEA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,8BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,0BAEA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO7C,SAAS+D,iBAC7B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMlB,SACnB,cAACzD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,SACLC,MAAOwO,EAAO3B,OACdjN,SAAUkP,GACVjT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO7C,SAAS+D,iBAC7B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMhB,SACnB,cAAC3D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,SACLC,MAAOwO,EAAOzB,OACdnN,SAAUkP,GACVjT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO7C,SAAS+D,iBAC7B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMd,WACnB,cAAC7D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAOwO,EAAOvB,SACdrN,SAAUkP,GACVjT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO7C,SAAS+D,iBAC7B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMZ,UACnB,cAAC/D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,UACLC,MAAOwO,EAAOrB,QACdvN,SAAUkP,GACVjT,KAAK,sBAMf,cAACuC,EAAA,EAAD,6BACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BAEA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,8BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO5C,UAAU8D,iBAC9B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMV,SACnB,cAACjE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,SACLC,MAAO0O,EAASrB,OAChBzN,SAAUmP,GACVlT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO5C,UAAU8D,iBAC9B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMR,SACnB,cAACnE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,SACLC,MAAO0O,EAASnB,OAChB3N,SAAUmP,GACVlT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO5C,UAAU8D,iBAC9B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMN,WACnB,cAACrE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,WACLC,MAAO0O,EAASjB,SAChB7N,SAAUmP,GACVlT,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,kBACA,cAACP,EAAA,EAAMM,KAAP,gBACA,cAACN,EAAA,EAAMM,KAAP,UAAaoE,EAAO5C,UAAU8D,iBAC9B,cAAC5F,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,gBAEA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMJ,UACnB,cAACvE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ1B,KAAK,UACLC,MAAO0O,EAASf,QAChB/N,SAAUmP,GACVlT,KAAK,sBAMf,cAAC6F,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAACuE,QAASjF,GAArC,mBAGA,eAACmI,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACRqG,KAEF9E,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAzB,iCARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,uBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,2BACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGtB,EAAMnC,KAAI,SAAC0D,EAAMxD,GAAP,OACT,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,UAASqL,EAAKf,SAAS3I,SAEzB,eAACqJ,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKf,SAASC,OAAQ,OAEzB,eAACS,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKG,eADR,WAGA,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,SAVJW,eAiB1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,wBCGlBkP,GApjBI,SAAC,GAAe,IAAb1K,EAAY,EAAZA,MACpBhH,qBAAU,YACM,uCAAG,4BAAAK,EAAA,+EAEQC,IAAMC,IAAI,wBAFlB,OAEPyH,EAFO,OAGb2G,GAAS,SAACxO,GACRA,EAAM2O,SAAW9G,EAAO5J,KAAKuI,iBAAiBoI,UAAUlF,SACxD1J,EAAM6O,SAAWhH,EAAO5J,KAAKuI,iBAAiBsI,UAAUpF,SACxD1J,EAAM+O,WAAalH,EAAO5J,KAAKuI,iBAAiBwI,UAAUtF,SAC1D1J,EAAMiP,UAAYpH,EAAO5J,KAAKuI,iBAAiB0I,UAAUxF,SACzD1J,EAAMmP,OAAStH,EAAO5J,KAAK0I,YAAYyI,KAAK1F,SAC5C1J,EAAMqP,OAASxH,EAAO5J,KAAK0I,YAAY2I,KAAK5F,SAC5C1J,EAAMuP,SAAW1H,EAAO5J,KAAK0I,YAAY6I,KAAK9F,SAC9C1J,EAAMyP,QAAU5H,EAAO5J,KAAK0I,YAAY+I,KAAKhG,SAC7C1J,EAAM2P,OAAS9H,EAAO5J,KAAK2I,YAAYgJ,KAAKlG,SAC5C1J,EAAM6P,OAAShI,EAAO5J,KAAK2I,YAAYkJ,KAAKpG,SAC5C1J,EAAM+P,SAAWlI,EAAO5J,KAAK2I,YAAYoJ,KAAKtG,SAC9C1J,EAAMiQ,QAAUpI,EAAO5J,KAAK2I,YAAYsJ,KAAKxG,YAflC,gDAkBbnF,QAAQyC,MAAM,KAAI7C,SAASlG,MAlBd,yDAAH,qDAqBdkS,KACC,IAEH,IAAMqB,EAAQ,uCAAG,4BAAAtR,EAAA,+EAEQC,IAAMC,IAAI,+BAFlB,OAEPqR,EAFO,OAGbhH,GAAS,SAACzK,GAAD,OAAWyR,EAAOxT,QAHd,gDAKbsG,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KALnB,yDAAH,qDA1BkB,EAkCR0F,IAAMC,UAAS,GAlCP,mBAkCzBC,EAlCyB,KAkCnBC,EAlCmB,OAmCNnL,YAAS,IAnCH,mBAmCzB0L,EAnCyB,KAmClBC,EAnCkB,OAqCN3L,YAAS,CACjC6P,SAAUjB,OACVmB,SAAUnB,OACVqB,WAAYrB,OACZuB,UAAWvB,OACXyB,OAAQzB,OACR2B,OAAQ3B,OACR6B,SAAU7B,OACV+B,QAAS/B,OACTiC,OAAQjC,OACRmC,OAAQnC,OACRqC,SAAUrC,OACVuC,QAASvC,SAjDqB,mBAqCzB2C,EArCyB,KAqClB7B,EArCkB,OAmDJ1P,YAC1B+H,EAAM6K,OAAOC,OAAS9K,EAAM6K,OAAOC,OAAS,IApDd,mBAmDzBvP,EAnDyB,KAmDjBwP,EAnDiB,OAsDM9S,YAAS,CAC7C0R,YAAa,EACbC,YAAa,EACbC,cAAe,EACfC,aAAc,IA1DgB,mBAsDzBC,EAtDyB,KAsDZC,EAtDY,OA4DJ/R,YAAS,CACnCqQ,OAAQ,EACRE,OAAQ,EACRE,SAAU,EACVE,QAAS,IAhEqB,mBA4DzBqB,EA5DyB,KA4DjBC,EA5DiB,OAkEAjS,YAAS,CACvC6Q,OAAQ,EACRE,OAAQ,EACRE,SAAU,EACVE,QAAS,IAtEqB,mBAkEzBe,EAlEyB,KAkEfC,EAlEe,KA6E1BY,EAAmB,SAAC1P,GACxB0O,GAAe,SAAC7Q,GACV,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQqL,OAAOvL,EAAEC,OAAOE,YAIvCwP,EAAc,SAAC3P,GACnB4O,GAAU,SAAC/Q,GACL,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQqL,OAAOvL,EAAEC,OAAOE,YAIvCyP,EAAgB,SAAC5P,GACrB8O,GAAY,SAACjR,GACP,oBAAoBoL,KAAKjJ,EAAEC,OAAOE,SACpCtC,EAAMmC,EAAEC,OAAOC,MAAQqL,OAAOvL,EAAEC,OAAOE,YAKvCY,EAAQ,uCAAG,WAAOf,GAAP,eAAAjC,EAAA,sEAEbiC,EAAEgB,iBACI4H,EAAY,CAChB3I,SACAwO,cACAE,SACAE,YAPW,SASQ7Q,IAAMoB,KAAK,sBAAuBwJ,GAT1C,cAUbrJ,MAAM,MACNmP,GAAe,SAAC7Q,GACdA,EAAMwQ,YAAc,EACpBxQ,EAAMyQ,YAAc,EACpBzQ,EAAM0Q,cAAgB,EACtB1Q,EAAM2Q,aAAe,KAEvBI,GAAU,SAAC/Q,GACTA,EAAMmP,OAAS,EACfnP,EAAMqP,OAAS,EACfrP,EAAMuP,SAAW,EACjBvP,EAAMyP,QAAU,KAElBwB,GAAY,SAACjR,GACXA,EAAM2P,OAAS,EACf3P,EAAM6P,OAAS,EACf7P,EAAM+P,SAAW,EACjB/P,EAAMiQ,QAAU,KA3BL,kDA8BbvO,MAAM,KAAIyC,SAASlG,KAAKmG,KA9BX,0DAAH,sDAkCR4N,EAAa,WAIjB,IAHA,IAAIC,EAAQ,EACRC,EAAQ,EACNC,EAAgB9O,OAAO+O,QAAQxB,GAC5ByB,EAAI,EAAGA,EAAIF,EAAc5O,OAAQ8O,IAC9B,IAANA,IACFJ,GAA+B,GAAtBE,EAAcE,GAAG,GAC1BH,GAA+B,IAAtBC,EAAcE,GAAG,IAElB,IAANA,IACFJ,GAA+B,GAAtBE,EAAcE,GAAG,GAC1BH,GAA+B,IAAtBC,EAAcE,GAAG,IAElB,IAANA,IACFJ,GAA+B,GAAtBE,EAAcE,GAAG,GAC1BH,GAA+B,IAAtBC,EAAcE,GAAG,IAElB,IAANA,IACFJ,GAA+B,GAAtBE,EAAcE,GAAG,GAC1BH,GAA+B,IAAtBC,EAAcE,GAAG,IAI9B,IADA,IAAMC,EAAWjP,OAAO+O,QAAQtB,GACvBuB,EAAI,EAAGA,EAAIF,EAAc5O,OAAQ8O,IAC9B,IAANA,IACFJ,GAA0B,GAAjBK,EAASD,GAAG,GACrBH,GAA0B,IAAjBI,EAASD,GAAG,IAEb,IAANA,IACFJ,GAA0B,GAAjBK,EAASD,GAAG,GACrBH,GAA0B,IAAjBI,EAASD,GAAG,IAEb,IAANA,IACFJ,GAA0B,GAAjBK,EAASD,GAAG,GACrBH,GAA0B,IAAjBI,EAASD,GAAG,IAEb,IAANA,IACFJ,GAA0B,GAAjBK,EAASD,GAAG,GACrBH,GAA0B,IAAjBI,EAASD,GAAG,IAIzB,IADA,IAAME,EAAalP,OAAO+O,QAAQpB,GACzBqB,EAAI,EAAGA,EAAIF,EAAc5O,OAAQ8O,IAC9B,IAANA,IACFJ,GAA4B,GAAnBM,EAAWF,GAAG,GACvBH,GAA4B,IAAnBK,EAAWF,GAAG,IAEf,IAANA,IACFJ,GAA4B,GAAnBM,EAAWF,GAAG,GACvBH,GAA4B,IAAnBK,EAAWF,GAAG,IAEf,IAANA,IACFJ,GAA4B,GAAnBM,EAAWF,GAAG,GACvBH,GAA4B,IAAnBK,EAAWF,GAAG,IAEf,IAANA,IACFJ,GAA4B,GAAnBM,EAAWF,GAAG,GACvBH,GAA4B,IAAnBK,EAAWF,GAAG,IAG3B,MAAO,CAAEJ,QAAOC,UAGlB,OACE,cAACxP,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,yBACA,cAACgD,EAAA,EAAD,CACEwH,MAAM,SACN7I,MAAOF,EACPC,KAAK,SACLH,SAnIS,SAACC,GAChByP,GAAU,SAAC5R,GAAD,OAAWmC,EAAEC,OAAOE,YAoI1B,cAAC5B,EAAA,EAAD,CAAQ8R,KAAG,EAAX,iJAIA,cAAC9R,EAAA,EAAD,CAAQ8R,KAAG,EAAX,0GAIA,cAAC9R,EAAA,EAAD,gCACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAM1B,WACnB,cAACjD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOsO,EAAYJ,YACnBnO,KAAK,cACLH,SAAU2P,EACV1T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMxB,WACnB,cAACnD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOsO,EAAYH,YACnBpO,KAAK,cACLH,SAAU2P,EACV1T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMtB,aACnB,cAACrD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOsO,EAAYF,cACnBrO,KAAK,gBACLH,SAAU2P,EACV1T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,2BAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMpB,YACnB,cAACvD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOsO,EAAYD,aACnBtO,KAAK,eACLH,SAAU2P,EACV1T,KAAK,sBAuDf,cAACuC,EAAA,EAAD,2BACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMlB,SACnB,cAACzD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOwO,EAAO3B,OACd9M,KAAK,SACLH,SAAU4P,EACV3T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMhB,SACnB,cAAC3D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOwO,EAAOzB,OACdhN,KAAK,SACLH,SAAU4P,EACV3T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMd,WACnB,cAAC7D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOwO,EAAOvB,SACdlN,KAAK,WACLH,SAAU4P,EACV3T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMZ,UACnB,cAAC/D,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAOwO,EAAOrB,QACdpN,KAAK,UACLH,SAAU4P,EACV3T,KAAK,sBAMf,cAACuC,EAAA,EAAD,6BACA,eAACgL,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BACA,cAACH,EAAA,EAAMG,WAAP,yBACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,eAACH,EAAA,EAAMI,KAAP,WACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMV,SACnB,cAACjE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAO0O,EAASrB,OAChBtN,KAAK,SACLH,SAAU6P,EACV5T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMR,SACnB,cAACnE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAO0O,EAASnB,OAChBxN,KAAK,SACLH,SAAU6P,EACV5T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMN,WACnB,cAACrE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAO0O,EAASjB,SAChB1N,KAAK,WACLH,SAAU6P,EACV5T,KAAK,gBAIX,eAACuN,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,iBACA,cAACN,EAAA,EAAMM,KAAP,UAAaqE,EAAMJ,UACnB,cAACvE,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZzB,MAAO0O,EAASf,QAChB5N,KAAK,UACLH,SAAU6P,EACV5T,KAAK,sBAMf,eAACuC,EAAA,EAAD,6BAAwBsR,IAAaC,SACrC,eAACvR,EAAA,EAAD,0BAAqBsR,IAAaE,SAClC,cAAClO,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAACuE,QAASjF,EAArC,oBAGA,eAACmI,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACRuH,KAEFhG,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAzB,iCARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,iCACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,2BACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGtB,EAAMnC,KAAI,SAAC0D,EAAMxD,GAAP,OACT,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,UAASqL,EAAKiG,eAEhB,cAACtG,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,SAAwBF,EAAK3J,OAAOC,OACpC,eAACqJ,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,UACGF,EAAKG,eADR,WAGA,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,SARJW,eAe1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,wBCnfhBoQ,GA/DQ,WAAO,IAAD,EACD3T,YAAS,IADR,mBACpB4T,EADoB,KACbC,EADa,KAS3B,OAPA9S,qBAAU,YACM,uCAAG,4BAAAK,EAAA,sEACcC,IAAMC,IAAI,uBADxB,OACTwS,EADS,OAEfD,GAAS,SAAC3S,GAAD,OAAW4S,EAAe3U,QAFpB,2CAAH,qDAId4U,KACC,IAED,cAACnQ,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,4BAUA,eAAC+K,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,sBACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,cAACH,EAAA,EAAMI,KAAP,UACG4G,EAAMrK,KAAI,SAAClH,EAAMoH,GAAP,OACT,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UAAazD,EAAQ,IACrB,cAACmD,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQ8R,KAAG,EAAX,SACE,cAAC,IAAD,CAAM/P,GAAE,mBAActB,EAAKb,KAA3B,SAAmCa,EAAKkB,WAG5C,cAACqJ,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQ8R,KAAG,EAAX,SAAarR,EAAK2E,WAEpB,cAAC4F,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQ8R,KAAG,EAAX,SAAarR,EAAK0E,YAEpB,cAAC6F,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQ8R,KAAG,EAAX,SAAarR,EAAK6E,SAEpB,cAAC0F,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQ8R,KAAG,EAAX,SAAarR,EAAK4E,eAjBNwC,iB,UCoRftH,gBAJS,SAACC,GAAD,MAAY,CAClCyH,OAAQzH,EAAMC,KAAKwQ,UAGN1Q,EA5SK,SAAC,GAAgC,IAA9B0H,EAA6B,EAA7BA,OAAQ9B,EAAqB,EAArBA,MAAOvF,EAAc,EAAdA,QACpCzB,qBAAU,YACS,uCAAG,4BAAAK,EAAA,+EAEOC,IAAMC,IAAN,6BACCyG,EAAM6K,OAAOC,SAHrB,OAEVmB,EAFU,OAKhBvO,QAAQC,IAAIsO,EAAS7U,MACrB8U,GAAQ,SAAC/S,GAAD,OAAW8S,EAAS7U,QANZ,gDAQhBsG,QAAQC,IAAI,KAAIL,SAASlG,MART,QAUlBwO,GAAW,SAACzM,GAAD,OAAW,KAVJ,yDAAH,qDAYjBgT,KACC,IAf+C,MAgB1BlU,YAAS,IAhBiB,mBAgB3CqC,EAhB2C,KAgBrC4R,EAhBqC,OAiBpBjU,aAAS,GAjBW,mBAiB3C6N,EAjB2C,KAiBlCF,EAjBkC,OAkB1B3C,IAAMC,UAAS,GAlBW,mBAkB3CC,EAlB2C,KAkBrCC,EAlBqC,OAmB1BnL,YAAS,CAC/BmU,SAAS,EACTC,QAAQ,IArBwC,mBAmB3CC,EAnB2C,KAmBrCC,EAnBqC,OAuBpBtU,YAAS,IAvBW,mBAuB3CuU,EAvB2C,KAuBlCC,EAvBkC,KA6B5CC,EAAQ,SAACpR,GACbA,EAAEgB,iBACFiQ,GAAQ,SAACpT,GACPA,EAAMmC,EAAEC,OAAOC,OAAQ,EACD,YAAlBF,EAAEC,OAAOC,KACXrC,EAAMkT,QAAS,EAEflT,EAAMiT,SAAU,MAOhBO,EAAS,uCAAG,WAAOrR,GAAP,eAAAjC,EAAA,sEAEdiC,EAAEgB,iBAFY,SAGYhD,IAAMoB,KAAN,iCACEJ,EAAKb,KAC/B,CAAE8G,QAASiM,IALC,OAGRI,EAHQ,OAOdlP,QAAQC,IAAIiP,EAAYxV,MAPV,gDASdsG,QAAQyC,MAAM,KAAI7C,UATJ,yDAAH,sDAYf,OACE,eAAC,WAAD,WACE,cAAC5B,EAAA,EAAD,UACE,8CAEF,cAACG,EAAA,EAAD,CACEC,UAAU,SACVE,cAAc,SACdjC,MAAO,CAAEgC,OAAQ,SACjBqF,QAAS,EACTyL,SAAO,EALT,SAOE,cAAChR,EAAA,EAAKsF,IAAN,CAAUpH,MAAO,CAAEmC,SAAU,KAA7B,SACG4J,EACC,cAACjM,EAAA,EAAD,yBAEA,eAAC,WAAD,WACE,eAACgC,EAAA,EAAKI,OAAN,WACE,cAACkB,EAAA,EAAD,CAAQ3B,KAAK,UAAU8F,QAASoL,EAAhC,qBAGA,cAACvP,EAAA,EAAD,CAAQ3B,KAAK,SAAS8F,QAASoL,EAA/B,6BAIDJ,EAAKF,SACJ,qCACE,eAACvQ,EAAA,EAAKI,OAAN,WACE,eAACpC,EAAA,EAAD,CAAQC,GAAG,KAAX,mBAAuBQ,EAAKkB,QAC5B,eAAC3B,EAAA,EAAD,CAAQC,GAAG,KAAX,6BAAiCQ,EAAK2E,UACtC,eAACpF,EAAA,EAAD,CAAQC,GAAG,KAAX,sBAA0BQ,EAAK0E,WAC9B8C,IAAWxH,EAAKb,IACf,cAAC0D,EAAA,EAAD,CAAQnD,MAAM,QAAQsH,QA/DlB,SAAChG,GACvBA,EAAEgB,iBACF7B,EAAQG,KAAK,eA6DK,iCAIA,mCACE,eAAC4J,EAAA,EAAD,CACEC,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,kBAAMtB,GAAQ,IACtBD,KAAMA,EACNwB,QAAS,cAACxH,EAAA,EAAD,CAAQnD,MAAM,QAAd,qBAJX,UAME,cAACwK,EAAA,EAAM3K,OAAP,sBACA,cAAC2K,EAAA,EAAM5C,QAAP,UACE,eAAC4C,EAAA,EAAM1B,YAAP,WACE,eAACjJ,EAAA,EAAD,CAAQiT,WAAS,EAAjB,iBAAuBxS,EAAKkB,QAC5B,cAAC6F,EAAA,EAAD,CACEtH,MAAO,CAAEuE,MAAO,QAChBjD,SAhEN,SAACC,GACvBmR,GAAW,SAACtT,GAAD,OAAWmC,EAAEC,OAAOE,UAgEHA,MAAO+Q,SAIb,eAAChI,EAAA,EAAMc,QAAP,WACE,cAACnI,EAAA,EAAD,CACEnD,MAAM,QACNsH,QAAS,kBAAM8B,GAAQ,IAFzB,mBAMA,cAACjG,EAAA,EAAD,CACEoD,QAAQ,OACRe,QAAS,SAAChG,GACR8H,GAAQ,GACRuJ,EAAUrR,IAEZyR,UAAQ,eAOpB,eAAClR,EAAA,EAAKI,OAAN,WACE,cAACpC,EAAA,EAAD,CAAQC,GAAG,KAAX,iBACc,KAAbQ,EAAK0S,KAAe1S,EAAK0S,IAKxB,qBAAKjT,MAAO,CAAE2E,UAAW,OAAQuO,UAAW,QAA5C,SACE,cAACpT,EAAA,EAAD,CAAQC,GAAG,KAAX,SAAiBQ,EAAK0S,QALxB,qBAAKjT,MAAO,CAAE2E,UAAW,OAAQuO,UAAW,QAA5C,SACE,cAACpT,EAAA,EAAD,CAAQ8R,KAAG,EAAX,sBAOJ,cAAC9R,EAAA,EAAD,CAAQC,GAAG,KAAX,wBAC2B,IAA1BQ,EAAK4S,UAAUxQ,OACd,qBAAK3C,MAAO,CAAE2E,UAAW,OAAQuO,UAAW,QAA5C,SACE,cAACpT,EAAA,EAAD,CAAQ8R,KAAG,EAAX,8BAGF,qBACE5R,MAAO,CACL2E,UAAW,OACXuO,UAAW,OACXnR,UAAW,QAJf,SAOE,cAACgD,GAAA,EAAK0D,MAAN,UACGlI,EAAK4S,UAAU1L,KAAI,SAAC2L,EAAOzL,GAAR,OAClB,cAAC5C,GAAA,EAAD,UACE,cAACA,GAAA,EAAK8C,QAAN,UACE,eAAC9C,GAAA,EAAKjF,OAAN,WACG6H,EAAQ,EADX,IACeyL,QAHRzL,UAWnB,cAAC7H,EAAA,EAAD,CAAQC,GAAG,KAAX,yBAC6B,IAA5BQ,EAAK8S,YAAY1Q,OAChB,qBAAK3C,MAAO,CAAE2E,UAAW,OAAQuO,UAAW,QAA5C,SACE,cAACpT,EAAA,EAAD,CAAQ8R,KAAG,EAAX,8BAGF,qBACE5R,MAAO,CACL2E,UAAW,OACXuO,UAAW,OACXnR,UAAW,QAJf,SAOE,cAACgD,GAAA,EAAK0D,MAAN,UACGlI,EAAK8S,YAAY5L,KAAI,SAAC6L,EAAY3L,GAAb,OACpB,cAAC5C,GAAA,EAAD,UACE,eAACA,GAAA,EAAK8C,QAAN,WACE,eAAC9C,GAAA,EAAKjF,OAAN,WACG6H,EAAQ,EADX,KACgB2L,EAAWC,SAE3B,cAACxO,GAAA,EAAK8D,KAAN,UAAYyK,EAAWE,UACvB,cAACzO,GAAA,EAAKgE,YAAN,UACGuK,EAAWG,cAEbH,EAAWI,QACV,cAAC3O,GAAA,EAAKkD,MAAN,UAAaqL,EAAWtH,OAExB,cAACjH,GAAA,EAAKkD,MAAN,iDAWnBsK,EAAKD,QACJ,eAACxQ,EAAA,EAAKI,OAAN,WACE,eAACpC,EAAA,EAAD,CAAQC,GAAG,KAAX,uBAA2BQ,EAAK4E,YAChC,eAACrF,EAAA,EAAD,CAAQC,GAAG,KAAX,4BACkBQ,EAAKoT,YAAYC,KADnC,IAEGrT,EAAKoT,YAAYE,UAEnB5N,EAAM6K,OAAOC,SAAWxQ,EAAKwQ,QAC5B,cAAC,WAAD,UACGhJ,IAAWxH,EAAKb,KACf,qCACE,cAAC0D,EAAA,EAAD,CACEnD,MAAM,QACNsH,QAAS,WACP7G,EAAQG,KAAR,kBAAwBoF,EAAM6K,OAAOC,UAHzC,oBAQA,uBACA,uBACA,cAAC3N,EAAA,EAAD,CACEnD,MAAM,QACNsH,QAAS,WACP7G,EAAQG,KAAR,wBACmBoF,EAAM6K,OAAOC,UAJpC,iCAUA,uBACA,4BAMR,eAACtG,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,kBAAMtB,GAAQ,IACtBuB,QAAS,cAACxH,EAAA,EAAD,CAAQnD,MAAM,QAAd,4BAJX,UAME,cAACwK,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,uBAEF,cAACgL,EAAA,EAAMM,KAAP,mBACA,cAACN,EAAA,EAAMM,KAAP,UACE,eAACN,EAAA,EAAMM,KAAP,0CAEE,uBAFF,qBAGE,uBAHF,wBAIE,uBAJF,uBAOF,cAACN,EAAA,EAAMM,KAAP,8CAMV,cAACX,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,kC,UCU1BpB,gBARS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAOCF,EAnSW,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,QAAc,EACvBxC,YAASqC,EAAKsG,SAAWtG,EAAKsG,SAAW,IADlB,mBACxCpF,EADwC,KAClCqS,EADkC,OAEzB5V,YACpBqC,EAAKyE,YAAYiO,IAAM1S,EAAKyE,YAAYiO,IAAM,IAHD,mBAExCA,EAFwC,KAEnCc,EAFmC,OAMnB7V,YAC1BqC,EAAKyE,YAAYmO,UAAY5S,EAAKyE,YAAYmO,UAAY,IAPb,mBAMxCa,EANwC,KAMhCC,EANgC,OAUT/V,YACpCqC,EAAKyE,YAAYqO,YAAc9S,EAAKyE,YAAYqO,YAAc,IAXjB,mBAUxCA,EAVwC,KAU3Ba,EAV2B,OAmBjBhW,YAAS,CACrCiW,QACE5T,EAAKyE,YAAYoP,SAChB7T,EAAKyE,YAAYoP,OAAOD,QAAU5T,EAAKyE,YAAYoP,OAAOD,QAAU,IACvEE,QACE9T,EAAKyE,YAAYoP,SAChB7T,EAAKyE,YAAYoP,OAAOC,QAAU9T,EAAKyE,YAAYoP,OAAOC,QAAU,IACvEC,SACE/T,EAAKyE,YAAYoP,SAChB7T,EAAKyE,YAAYoP,OAAOE,SACrB/T,EAAKyE,YAAYoP,OAAOE,SACxB,IACNC,UACEhU,EAAKyE,YAAYoP,SAChB7T,EAAKyE,YAAYoP,OAAOG,UACrBhU,EAAKyE,YAAYoP,OAAOG,UACxB,MAnCuC,mBAmBxCC,EAnBwC,KAmB/BC,EAnB+B,OAqCjBvW,YAAS,IArCQ,mBAqCxCwW,EArCwC,KAqC/BC,EArC+B,OAsCjBzW,YAAS,IAtCQ,mBAsCxCsV,EAtCwC,KAsC/BoB,EAtC+B,KA4CzCC,EAAgB,SAACtT,GACrBoC,QAAQC,IAAIrC,EAAEC,OAAOsT,IACrBb,GAAU,SAAC7U,GACTA,EAAMmC,EAAEC,OAAOsT,IAAMvT,EAAEC,OAAOE,UAG5BqT,EAAgB,SAACxT,GACrBA,EAAEgB,iBACF0R,GAAU,SAAC7U,GAAeA,EAAM4V,OAAOzT,EAAEC,OAAOE,MAAO,OAcnDuT,EAAc,SAAC1T,GACnB2S,GAAe,SAAC9U,GACdA,EAAMmC,EAAEC,OAAOsT,IAAIvT,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,UAI3CwT,EAAc,SAAC3T,GACnBA,EAAEgB,iBACF2R,GAAe,SAAC9U,GACdA,EAAM4V,OAAOzT,EAAEC,OAAOsT,GAAI,OAIxBK,EAAiB,SAAC5T,GACtBkT,GAAW,SAACrV,GACVA,EAAMmC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,UAmB9BY,EAAQ,uCAAG,WAAOf,GAAP,iBAAAjC,EAAA,sEAEbiC,EAAEgB,iBACI9B,EAAW,CACfgB,KAAMA,EACNwR,IAAKA,EACLe,OAAQA,EACRX,YAAaA,EACb+B,aAAcZ,EACdE,QAASA,EACTlB,QAASA,GAEX7P,QAAQC,IAAI,cAAenD,GAZd,SAaYlB,IAAMoB,KAC7B,6BACAF,GAfW,OAaP4U,EAbO,OAiBb1R,QAAQC,IAAI,mBAAoByR,GAChC3U,EAAQG,KAAR,mBAAyBN,EAAKwQ,SAlBjB,kDAoBbpN,QAAQyC,MAAM,UAAW,KAAI7C,SAASlG,MApBzB,0DAAH,sDAwBd,OACE,cAACyE,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,cAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,SACE,eAACC,EAAA,EAAD,CAAME,SAAUA,EAAhB,UACE,eAACF,EAAA,EAAKkT,MAAN,WACE,yCACA,uBACEnS,YAAY,aACZ1B,KAAK,OACLC,MAAOD,EACPH,SAzCS,SAACC,GACpBuS,GAAQ,SAAC1U,GAAD,OAAWmC,EAAEC,OAAOE,eA2CtB,eAACU,EAAA,EAAKkT,MAAN,WACE,wCACA,cAAChO,EAAA,EAAD,CACEnE,YAAY,MACZ1B,KAAK,MACLC,MAAOuR,EACP3R,SA/CQ,SAACC,GACnBwS,GAAO,SAAC3U,GAAD,OAAWmC,EAAEC,OAAOE,eAiDrB,eAACU,EAAA,EAAKkT,MAAN,WACE,+CACA,cAAClS,EAAA,EAAD,CAAQnD,MAAM,OAAOsH,QA5GX,SAAChG,GACnBA,EAAEgB,iBACF0R,GAAU,SAAC7U,GAAeA,EAAMyB,KAAK,QA0G7B,iBAGCmT,EAAOvM,KAAI,SAAC2L,EAAOzL,GAAR,OACV,eAAC,WAAD,WACE,eAAC5E,EAAA,EAAD,CACEwH,OAAK,EACL7I,MAAO0R,EACP0B,GAAInN,EAEJrG,SAAUuT,EALZ,UAOE,cAACU,GAAA,EAAD,UAAQ5N,EAAQ,IAChB,0BACA,cAACvE,EAAA,EAAD,CAAQ1B,MAAOiG,EAAOJ,QAASwN,EAA/B,sBALKpN,GASP,uBACA,yBAfaA,SAmBnB,eAACvF,EAAA,EAAKkT,MAAN,WACE,gDACA,cAAClS,EAAA,EAAD,CAAQnD,MAAM,OAAOsH,QAtHd,SAAChG,GAChBA,EAAEgB,iBACF2R,GAAe,SAAC9U,GACdA,EAAMyB,KAAK,CACT0S,MAAO,GACPC,QAAS,GACTC,YAAa,SAgHT,iBAGA,cAAC1O,GAAA,EAAK0D,MAAN,CAAYzI,MAAO,CAAE+B,UAAW,QAAhC,SACGsR,EAAY5L,KAAI,SAAC6L,EAAY3L,GAAb,OACf,eAAC,WAAD,WAUE,eAAC7H,EAAA,EAAD,CAAQC,GAAG,KAAX,UAAiB4H,EAAQ,EAAzB,OACA,eAAC5E,EAAA,EAAD,CACEwH,OAAK,EACL7I,MAAO4R,EAAWC,MAClBjS,SAAU2T,EACVH,GAAInN,EACJlG,KAAK,QALP,UAOE,cAAC8T,GAAA,EAAD,oBACA,6BAEF,eAACxS,EAAA,EAAD,CACEwH,OAAK,EACL7I,MAAO4R,EAAWE,QAClBlS,SAAU2T,EACVH,GAAInN,EACJlG,KAAK,UALP,UAOE,cAAC8T,GAAA,EAAD,sBACA,6BAEF,eAACxS,EAAA,EAAD,CACEwH,OAAK,EACL7I,MAAO4R,EAAWG,YAClBnS,SAAU2T,EACVH,GAAInN,EACJlG,KAAK,cALP,UAOE,cAAC8T,GAAA,EAAD,0BACA,6BAEF,cAACnS,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAC8R,GAAInN,EAAOJ,QAAS2N,EAA9C,sBAzCavN,WAgDrB,eAACvF,EAAA,EAAKkT,MAAN,WACE,4CACA,cAACvS,EAAA,EAAD,CACEwH,MAAM,UACNpH,YAAY,UACZ1B,KAAK,UACLH,SAAU6T,EACVzT,MAAO8S,EAAQL,UAEjB,cAACpR,EAAA,EAAD,CACEwH,MAAM,UACNpH,YAAY,UACZ1B,KAAK,UACLH,SAAU6T,EACVzT,MAAO8S,EAAQH,UAEjB,cAACtR,EAAA,EAAD,CACEwH,MAAM,WACNpH,YAAY,WACZ1B,KAAK,WACLH,SAAU6T,EACVzT,MAAO8S,EAAQF,WAEjB,cAACvR,EAAA,EAAD,CACEwH,MAAM,YACNpH,YAAY,YACZ1B,KAAK,YACLH,SAAU6T,EACVzT,MAAO8S,EAAQD,eAGnB,eAACnS,EAAA,EAAKkT,MAAN,WACE,4CACA,uBACEnS,YAAY,UACZzB,MAAOgT,EACPpT,SAjLY,SAACC,GACvBoT,GAAW,SAACvV,GAAD,OAAWmC,EAAEC,OAAOE,eAmLzB,eAACU,EAAA,EAAKkT,MAAN,WACE,4CACA,uBACEnS,YAAY,UACZzB,MAAO8R,EACPlS,SArLY,SAACC,GACvBqT,GAAW,SAACxV,GAAD,OAAWmC,EAAEC,OAAOE,eAwLzB,cAAC0B,EAAA,EAAD,CAAQ7F,KAAK,SAAS0C,MAAM,QAA5B,8B,UCyNKuV,GA1eU,SAAC,GAAe,IAAbvP,EAAY,EAAZA,MAC1BhH,qBAAU,YACM,uCAAG,4BAAAK,EAAA,+EAEQC,IAAMC,IAAI,wBAFlB,OAEPyH,EAFO,OAGb2G,GAAS,SAACxO,GACRA,EAAMyO,MAAQ5G,EAAO5J,KAAKoI,qBAAqBC,OAC/CtG,EAAM0O,SAAW7G,EAAO5J,KAAKoI,qBAAqBE,aALvC,gDAQbhC,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KARnB,yDAAH,qDAWd+L,KACC,IAdmC,MAedrG,IAAMC,UAAS,GAfD,mBAe/BC,EAf+B,KAezBC,EAfyB,OAgBJH,IAAMC,UAAS,GAhBX,mBAgB/BsM,EAhB+B,KAgBpBC,EAhBoB,OAiBZxX,YAAS,CACjC2P,MAAOf,OACPgB,SAAUhB,SAnB0B,mBAiB/B2C,EAjB+B,KAiBxB7B,EAjBwB,OAqBd1P,YAAS,CAC/BmU,SAAS,EACTC,QAAQ,IAvB4B,mBAqB/BC,EArB+B,KAqBzBC,EArByB,OAyBZtU,YAAS,GAzBG,mBAyB/B2P,EAzB+B,KAyBxB8H,EAzBwB,OA+BNzX,YAAS,GA/BH,mBA+B/B4P,EA/B+B,KA+BrB8H,EA/BqB,KAsChCC,EAAW,uCAAG,WAAOtU,GAAP,SAAAjC,EAAA,sEAEhBiC,EAAEgB,iBAFc,SAGKhD,IAAMoB,KAAK,0BAA2B,CACzDkN,QACArM,WALc,cAOhBV,MAAM,MACN6U,GAAS,SAACvW,GAAD,OAAW,KARJ,gDAUhBuE,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KAVhB,yDAAH,sDAaXsS,EAAc,uCAAG,WAAOvU,GAAP,SAAAjC,EAAA,sEAEnBiC,EAAEgB,iBAFiB,SAGEhD,IAAMoB,KAAK,6BAA8B,CAC5DmN,WACAtM,WALiB,cAOnBV,MAAM,MACN8U,GAAY,SAACxW,GAAD,OAAW,KARJ,gDAUnBuE,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KAVb,yDAAH,sDAnDkB,EAiEVtF,YAC1B+H,EAAM6K,OAAOC,OAAS9K,EAAM6K,OAAOC,OAAS,IAlER,mBAiE/BvP,EAjE+B,KAiEvBwP,EAjEuB,OAuEF9S,YAAS,IAvEP,mBAuE/B6X,EAvE+B,KAuEnBC,EAvEmB,KAwEhCC,EAAe,uCAAG,4BAAA3W,EAAA,+EAECC,IAAMC,IAAI,8BAFX,OAEdyH,EAFc,OAGpB+O,GAAc,SAAC5W,GAAD,OAAW6H,EAAO5J,QAHZ,gDAKpBsG,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KALZ,yDAAH,qDAxEiB,GAiFZtF,YAAS,IAjFG,qBAiF/BqO,GAjF+B,MAiFxB2J,GAjFwB,MAkFhCC,GAAS,uCAAG,4BAAA7W,EAAA,+EAEOC,IAAMC,IAAI,gCAFjB,OAERyH,EAFQ,OAGdtD,QAAQC,IAAIqD,EAAO5J,KAAK,GAAGoI,qBAAqB2Q,QAChDF,IAAS,SAAC9W,GAAD,OAAW6H,EAAO5J,KAAK,GAAGoI,qBAAqB2Q,UAJ1C,gDAMdzS,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KANlB,yDAAH,qDAlFuB,GA2FJtF,YAAS,IA3FL,qBA2F/BmY,GA3F+B,MA2FpBC,GA3FoB,MA4FhCC,GAAc,uCAAG,4BAAAjX,EAAA,+EAEEC,IAAMC,IAAI,iCAFZ,OAEbyH,EAFa,OAGnBqP,IAAa,SAAClX,GAAD,OAAW6H,EAAO5J,QAHZ,gDAKnBsG,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KALb,yDAAH,qDA5FkB,GAqGNtF,YAAS,IArGH,qBAqG/BsY,GArG+B,MAqGrBC,GArGqB,MAsGhCC,GAAa,uCAAG,4BAAApX,EAAA,+EAEGC,IAAMC,IAAI,mCAFb,OAEZyH,EAFY,OAGlBwP,IAAY,SAACrX,GAAD,OAAW6H,EAAO5J,KAAK,GAAGoI,qBAAqBkR,aAHzC,gDAKlBhT,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KALd,yDAAH,qDASboT,GACJ,mCACE,eAAC9U,EAAA,EAAKI,OAAN,WACE,cAACa,EAAA,EAAD,CAAOwH,MAAM,UAAU7I,MAAOF,EAAQF,SA9CrB,SAACC,GACtByP,GAAU,SAAC5R,GAAD,OAAWmC,EAAEC,OAAOE,YA8C1B,eAACoJ,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,cAACH,EAAA,EAAMI,KAAP,UACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,sBAEF,cAACgL,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,UAAS2P,EAAM5B,UAEjB,cAAC/C,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ5F,KAAK,SACLmE,MAAOmM,EACPvM,SA7GM,SAACC,GACjB,oBAAoBiJ,KAAKjJ,EAAEC,OAAOE,QACpCiU,GAAS,SAACvW,GAAD,OAAWmC,EAAEC,OAAOE,sBAkH3B,cAAC0B,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAACuE,QAASsO,EAArC,kBAGA,uBACA,eAACpL,EAAA,EAAD,CACErB,KAAMqM,EACN/K,QAAS,kBAAMgL,GAAa,IAC5B/K,OAAQ,WACN+K,GAAa,GACbO,KAEFrL,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAzB,4BARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,wBACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACG6K,EAAWtO,KAAI,SAAC0D,EAAMxD,GAAP,OACd,eAACmD,EAAA,EAAM1D,IAAP,WACE,eAAC0D,EAAA,EAAMM,KAAP,WAAaD,EAAK0L,OAAO,GAAGxM,OAA5B,YACA,cAACS,EAAA,EAAMM,KAAP,UACE,cAAC,IAAD,CAAMvJ,GAAE,mBAAcsJ,EAAK3J,OAAO9B,KAAlC,SACGyL,EAAK3J,OAAOC,SAGjB,cAACqJ,EAAA,EAAMM,KAAP,UAAaD,EAAKG,iBAClB,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,SARJW,eAe1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAMmO,GAAa,IAAQzV,MAAM,QAAlD,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,kBAKvB,eAACgJ,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACR8M,MAEFvL,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAA3B,6BARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,8BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGqB,GAAM9E,KAAI,SAACqP,EAAMnP,GAAP,OACT,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQC,GAAG,KAAX,SAAiB+W,EAAK7P,WAGxB,eAAC6D,EAAA,EAAMM,KAAP,WACE,eAAC2L,GAAA,EAAD,WACE,cAACA,GAAA,EAAKhS,KAAN,UACE,wDAEF,cAACgS,GAAA,EAAKhS,KAAN,UACE,eAACgS,GAAA,EAAKA,KAAN,WACE,eAACA,GAAA,EAAKhS,KAAN,sBACW+R,EAAKrR,qBAAqBC,UAErC,eAACqR,GAAA,EAAKhS,KAAN,yBACc+R,EAAKrR,qBAAqBE,qBAK9C,eAACoR,GAAA,EAAD,WACE,cAACA,GAAA,EAAKhS,KAAN,UACE,oDAEF,cAACgS,GAAA,EAAKhS,KAAN,UACE,eAACgS,GAAA,EAAKA,KAAN,WACE,eAACA,GAAA,EAAKhS,KAAN,6BACkB+R,EAAKlR,iBAAiBC,aAExC,eAACkR,GAAA,EAAKhS,KAAN,6BACkB,IACf+R,EAAKlR,iBAAiBE,sBAK/B,eAACiR,GAAA,EAAD,WACE,cAACA,GAAA,EAAKhS,KAAN,UACE,+CAEF,cAACgS,GAAA,EAAKhS,KAAN,UACE,eAACgS,GAAA,EAAKA,KAAN,WACE,eAACA,GAAA,EAAKhS,KAAN,6BACkB+R,EAAK/Q,YAAYF,aAEnC,eAACkR,GAAA,EAAKhS,KAAN,6BACkB+R,EAAK/Q,YAAYD,sBAKzC,eAACiR,GAAA,EAAD,WACE,cAACA,GAAA,EAAKhS,KAAN,UACE,+CAEF,cAACgS,GAAA,EAAKhS,KAAN,UACE,eAACgS,GAAA,EAAKA,KAAN,WACE,eAACA,GAAA,EAAKhS,KAAN,6BACkB+R,EAAKE,cAAcnR,aAErC,eAACkR,GAAA,EAAKhS,KAAN,8BACmB+R,EAAKE,cAAclR,yBAM9C,cAACgF,EAAA,EAAMM,KAAP,CAAYC,YAAU,EAAtB,SACE,cAAC,IAAD,CAAMxJ,GAAE,mBAAciV,EAAKtV,OAAO9B,KAAlC,SACGoX,EAAKtV,OAAOC,SAGjB,cAACqJ,EAAA,EAAMM,KAAP,UAAa0L,EAAK9P,SAzEJW,eAgF1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,uBAOvBwV,GACJ,mCACE,eAACnV,EAAA,EAAKI,OAAN,WACE,cAACa,EAAA,EAAD,CAAOwH,MAAM,UAAU7I,MAAOF,IAC9B,eAACsJ,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,4BAGJ,cAACH,EAAA,EAAMI,KAAP,UACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,0BAEF,cAACgL,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,UAAS2P,EAAM3B,aAEjB,cAAChD,EAAA,EAAMM,KAAP,UACE,cAACrI,EAAA,EAAD,CACEI,YAAY,YACZ5F,KAAK,SACLmE,MAAOoM,EACPxM,SA/SS,SAACC,GACpB,oBAAoBiJ,KAAKjJ,EAAEC,OAAOE,QACpCkU,GAAY,SAACxW,GAAD,OAAWmC,EAAEC,OAAOE,sBAmT9B,cAAC0B,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAACuE,QAASuO,EAArC,kBAGA,uBACA,eAACrL,EAAA,EAAD,CACErB,KAAMqM,EACN/K,QAAS,kBAAMgL,GAAa,IAC5B/K,OAAQ,WACN+K,GAAa,GACba,MAEF3L,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,MAAM+C,OAAK,EAAzB,4BARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,6BACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,wBACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGmL,GAAU5O,KAAI,SAAC0D,EAAMxD,GAAP,OACb,eAACmD,EAAA,EAAM1D,IAAP,WACE,eAAC0D,EAAA,EAAMM,KAAP,WAAaD,EAAK0L,OAAO,GAAGxM,OAA5B,YACA,cAACS,EAAA,EAAMM,KAAP,UACE,cAAC,IAAD,CAAMvJ,GAAE,mBAAcsJ,EAAK3J,OAAO9B,KAAlC,SACGyL,EAAK3J,OAAOC,SAGjB,cAACqJ,EAAA,EAAMM,KAAP,UAAaD,EAAKG,iBAClB,cAACR,EAAA,EAAMM,KAAP,UAAaD,EAAKnE,SARJW,eAe1B,cAAC8C,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAMmO,GAAa,IAAQzV,MAAM,QAAlD,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,kBAKvB,eAACgJ,EAAA,EAAD,CACErB,KAAMA,EACNsB,QAAS,kBAAMrB,GAAQ,IACvBsB,OAAQ,WACNtB,GAAQ,GACRqN,MAEF9L,QACE,cAACxH,EAAA,EAAD,CAAQnD,MAAM,QAAQ+C,OAAK,EAA3B,sBARJ,UAaE,cAACyH,EAAA,EAAM3K,OAAP,uBACA,cAAC2K,EAAA,EAAM5C,QAAP,CAAegD,WAAS,EAAxB,SACE,cAACJ,EAAA,EAAM1B,YAAP,UACE,eAAC+B,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,wBAGJ,cAACH,EAAA,EAAMI,KAAP,UACGsL,GAAS/O,KAAI,SAACyP,EAASvP,GAAV,OACZ,eAACmD,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQC,GAAG,KAAKgC,UAAU,SAA1B,SACGmV,EAAQjQ,WAGb,cAAC6D,EAAA,EAAMM,KAAP,UAAa8L,EAAQzD,cACrB,cAAC3I,EAAA,EAAMM,KAAP,UACE,cAAC,IAAD,CAAMvJ,GAAE,mBAAcqV,EAAQ1V,OAAO9B,KAArC,SACGwX,EAAQ1V,OAAOC,SAGpB,cAACqJ,EAAA,EAAMM,KAAP,UAAa8L,EAAQlQ,sBAOjC,cAACyD,EAAA,EAAMc,QAAP,UACE,eAACnI,EAAA,EAAD,CAAQmE,QAAS,kBAAM8B,GAAQ,IAAQpJ,MAAM,QAA7C,mBACQ,cAACuL,EAAA,EAAD,CAAM/J,KAAK,uBAQvBkR,GAAQ,SAACpR,GACbA,EAAEgB,iBACFiQ,GAAQ,SAACpT,GACPA,EAAMmC,EAAEC,OAAOC,OAAQ,EACD,YAAlBF,EAAEC,OAAOC,KACXrC,EAAMkT,QAAS,EAEflT,EAAMiT,SAAU,MAItB,OACE,eAAC,WAAD,WACE,cAAC1Q,EAAA,EAAD,UACE,8CAEF,cAACG,EAAA,EAAD,CACEC,UAAU,SACVE,cAAc,SACdjC,MAAO,CAAEgC,OAAQ,SACjBqF,QAAS,EACTyL,SAAO,EALT,SAOE,eAAChR,EAAA,EAAKsF,IAAN,CAAUpH,MAAO,CAAEmC,SAAU,KAA7B,UACE,eAACL,EAAA,EAAKI,OAAN,WACE,cAACkB,EAAA,EAAD,CAAQ3B,KAAK,UAAU8F,QAASoL,GAAhC,mBAGA,cAACvP,EAAA,EAAD,CAAQ3B,KAAK,SAAS8F,QAASoL,GAA/B,yBAIDJ,EAAKF,SAAWuE,GAChBrE,EAAKD,QAAU2E,YCzbXE,GAvDE,WACflY,qBAAU,YACK,uCAAG,4BAAAK,EAAA,+EAEOC,IAAMC,IAAI,sBAFjB,OAEN4X,EAFM,OAGZzT,QAAQC,IAAIwT,EAAK/Z,KAAKga,SACtBC,GAAY,SAAClY,GAAD,OAAWgY,EAAK/Z,KAAKga,WAJrB,gDAMZ1T,QAAQyC,MAAM,KAAI7C,UANN,yDAAH,qDASbgU,KACC,IAZkB,MAaWrZ,YAAS,IAbpB,mBAadsZ,EAbc,KAaJF,EAbI,KAcrB,OACE,cAACxV,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,SAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,kBACA,eAAC+K,EAAA,EAAD,CAAOC,QAAM,EAACC,QAAM,EAApB,UACE,cAACF,EAAA,EAAMhL,OAAP,UACE,eAACgL,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,qBACA,cAACH,EAAA,EAAMG,WAAP,0BACA,cAACH,EAAA,EAAMG,WAAP,mBACA,cAACH,EAAA,EAAMG,WAAP,wBAGHuM,EAAS/P,KAAI,SAAC7D,GAAD,OACZ,cAACkH,EAAA,EAAMI,KAAP,UACE,eAACJ,EAAA,EAAM1D,IAAP,WACE,cAAC0D,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQC,GAAG,KAAKgC,UAAU,SAA1B,SACG6B,EAAIrG,SAGT,cAACuN,EAAA,EAAMM,KAAP,UACE,cAACtL,EAAA,EAAD,CAAQC,GAAG,KAAKgC,UAAU,SAA1B,SACG6B,EAAIqD,WAGT,cAAC6D,EAAA,EAAMM,KAAP,UAAaxH,EAAI6P,cACjB,cAAC3I,EAAA,EAAMM,KAAP,UACE,cAAC,IAAD,CAAMvJ,GAAE,mBAAc+B,EAAIoI,KAAKtM,KAA/B,SAAuCkE,EAAIoI,KAAKvK,SAElD,cAACqJ,EAAA,EAAMM,KAAP,UAAaxH,EAAIoD,wB,UCXlByQ,GA5BM,WACnB,OACE,cAAC3V,EAAA,EAAD,CAAMC,UAAU,SAASE,cAAc,SAASjC,MAAO,CAAEgC,OAAQ,SAAjE,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,2BACA,eAAC,WAAD,WACE,cAACqD,EAAA,EAAD,CAAQnD,MAAM,OAAd,uBACA,cAACmD,EAAA,EAAD,CAAQnD,MAAM,QAAd,sBACA,cAACmD,EAAA,EAAD,CAAQnD,MAAM,MAAd,6BAEF,cAACuI,EAAA,EAAKC,MAAN,UACE,eAACD,EAAA,EAAD,CAAMkP,KAAI,eAAV,UACE,cAACC,GAAA,EAAD,CACEC,IAAI,gEACJC,SAAO,EACPC,IAAI,IAEN,eAACtP,EAAA,EAAKX,QAAN,WACE,cAACW,EAAA,EAAK1I,OAAN,kBACA,cAAC0I,EAAA,EAAKO,YAAN,yC,oBCgFCgP,GAlGI,WAOjB,OACE,eAAClV,EAAA,EAAD,CAAS7C,MAAO,CAAEgY,WAAY,SAA9B,UACE,eAAClW,EAAA,EAAD,CACEC,UAAU,SACVE,cAAc,SACdjC,MAAO,CAAEgC,OAAQ,SACjBqF,QAAS,EAJX,UAME,eAACvF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,wEAGA,cAACsD,EAAA,EAAD,CAAQnD,MAAM,MAAd,uBACA,cAACmD,EAAA,EAAD,CAAQnD,MAAM,OAAd,uBACA,eAAC8E,GAAA,EAAK0D,MAAN,CAAYzI,MAAO,CAAEiY,UAAW,UAAhC,UACE,eAAClT,GAAA,EAAD,WACE,cAACA,GAAA,EAAK4S,MAAN,CACEtV,KAAK,OACLuV,IAAI,6DAGN,eAAC7S,GAAA,EAAK8C,QAAN,WACE,cAAC9C,GAAA,EAAKjF,OAAN,CAAaC,GAAG,IAAhB,oBACA,cAACgF,GAAA,EAAK8D,KAAN,0BACA,cAAC9D,GAAA,EAAKgE,YAAN,UACE,cAAC4O,GAAA,EAAD,CAAOC,IAAI,yEAEb,cAAC7S,GAAA,EAAKkD,MAAN,uCAIJ,eAAClD,GAAA,EAAD,WACE,cAACA,GAAA,EAAK4S,MAAN,CACEtV,KAAK,OACLuV,IAAI,6DAGN,eAAC7S,GAAA,EAAK8C,QAAN,WACE,cAAC9C,GAAA,EAAKjF,OAAN,CAAaC,GAAG,IAAhB,oBACA,cAACgF,GAAA,EAAK8D,KAAN,0BACA,cAAC9D,GAAA,EAAKgE,YAAN,UACE,cAAC4O,GAAA,EAAD,CAAOC,IAAI,yEAEb,cAAC7S,GAAA,EAAKkD,MAAN,6CAKR,eAACnG,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,UACE,cAACrC,EAAA,EAAD,yBACA,cAACoY,GAAA,EAAD,CAAUlV,OAAK,EAACmV,WAAS,EAACC,QAxDX,CACrB,CAAEC,IAAK,MAAO3W,MAAO,MAAOoF,KAAM,OAClC,CAAEuR,IAAK,KAAM3W,MAAO,KAAMoF,KAAM,eAChC,CAAEuR,IAAK,KAAM3W,MAAO,KAAMoF,KAAM,YAChC,CAAEuR,IAAK,KAAM3W,MAAO,KAAMoF,KAAM,aAqD1B,eAAC/B,GAAA,EAAK0D,MAAN,CAAYzI,MAAO,CAAEiY,UAAW,UAAhC,UACE,eAAClT,GAAA,EAAD,WACE,cAACA,GAAA,EAAK4S,MAAN,CACEtV,KAAK,OACLuV,IAAI,6DAGN,eAAC7S,GAAA,EAAK8C,QAAN,WACE,cAAC9C,GAAA,EAAKjF,OAAN,CAAaC,GAAG,IAAhB,oBACA,cAACgF,GAAA,EAAK8D,KAAN,0BACA,cAAC9D,GAAA,EAAKgE,YAAN,UACE,cAAC4O,GAAA,EAAD,CAAOC,IAAI,yEAEb,cAAC7S,GAAA,EAAKkD,MAAN,uCAIJ,eAAClD,GAAA,EAAD,WACE,cAACA,GAAA,EAAK4S,MAAN,CACEtV,KAAK,OACLuV,IAAI,6DAGN,eAAC7S,GAAA,EAAK8C,QAAN,WACE,cAAC9C,GAAA,EAAKjF,OAAN,CAAaC,GAAG,IAAhB,oBACA,cAACgF,GAAA,EAAK8D,KAAN,0BACA,cAAC9D,GAAA,EAAKgE,YAAN,UACE,cAAC4O,GAAA,EAAD,CAAOC,IAAI,yEAEb,cAAC7S,GAAA,EAAKkD,MAAN,gDAMV,cAACqQ,GAAA,EAAD,CAASzT,UAAQ,EAAjB,qB,UCrBS0T,GAvEM,SAAC,GAAe,IAAbtS,EAAY,EAAZA,MACtBhH,qBAAU,YACI,uCAAG,4BAAAK,EAAA,+EAEUC,IAAMC,IAAN,gCACMyG,EAAM6K,OAAOrP,OAH7B,OAELwF,EAFK,OAKXuR,GAAa,SAACpZ,GAAD,OAAW6H,EAAO5J,QALpB,gDAOXsG,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KAPrB,yDAAH,qDAUZiV,KACC,IAb+B,MAcAva,YAAS,IAdT,mBAc3Bwa,EAd2B,KAchBF,EAdgB,OAeFta,YAAS,IAfP,mBAe3Bya,EAf2B,KAejBC,EAfiB,KAoB5BtW,EAAQ,uCAAG,WAAOf,GAAP,eAAAjC,EAAA,sEAEP6K,EAAY,CAChBwO,SAAUA,EACV9W,GAAI,OAJO,SAMKtC,IAAMoB,KAAK,wBAAyBwJ,GANzC,cAObrJ,MAAM,sDACN8X,GAAY,SAACxZ,GAAD,MAAW,MARV,gDAUbuE,QAAQC,IAAI,KAAIL,SAASlG,KAAKmG,KAVjB,yDAAH,sDAad,OACE,cAAC1B,EAAA,EAAD,CAAMC,UAAU,SAAS/B,MAAO,CAAEgC,OAAQ,SAA1C,SACE,eAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,IAAK0W,MAAO,QAA5C,UACE,eAAC/Y,EAAA,EAAD,CAAQC,GAAG,KAAX,iBAAqBkG,EAAM6K,OAAOrP,KAAlC,OAEA,eAACW,EAAA,EAAD,CAAME,SAAUA,EAAhB,UACE,cAACgF,EAAA,EAAD,CACEnE,YAAY,yBACZzB,MAAOiX,EACPrX,SAzBO,SAACC,GAChBqX,GAAY,SAACxZ,GAAD,OAAWmC,EAAEC,OAAOE,YA0B1B,cAAC0B,EAAA,EAAD,CAAQnD,MAAM,WAAW1C,KAAK,SAA9B,uBAIF,cAACuC,EAAA,EAAD,CAAQ8R,KAAG,EAAX,qDACA,eAACkH,GAAA,EAAQrQ,MAAT,WACE,cAAC3I,EAAA,EAAD,CAAQC,GAAG,KAAKgZ,UAAQ,EAAxB,iBAGA,cAACvQ,EAAA,EAAKC,MAAN,UACGiQ,EAAUjR,KAAI,SAACuR,EAAKrR,GAAN,OACb,cAACa,EAAA,EAAD,CAAMxF,OAAK,EAAX,SACE,eAACwF,EAAA,EAAKX,QAAN,CAAc9F,UAAU,OAAxB,UACE,eAACyG,EAAA,EAAK1I,OAAN,WACG6H,EAAQ,EADX,KACgBqR,EAAIL,YAEpB,cAACnQ,EAAA,EAAKO,YAAN,UAAmBiQ,EAAIC,YALVtR,iBCvBhBuR,GAjCE,WAAO,IAAD,EACWhb,YAAS,IADpB,mBACdib,EADc,KACJC,EADI,KAKf9W,EAAQ,uCAAG,WAAOf,GAAP,SAAAjC,EAAA,sEAEbiC,EAAEgB,iBAFW,SAGQhD,IAAMoB,KAAK,sBAAuB,CAAEwY,aAH5C,cAKbrY,MAAM,cACNsY,GAAY,SAACha,GAAD,MAAW,MANV,gDAQbuE,QAAQyC,MAAM,KAAI7C,SAASlG,KAAKmG,KARnB,yDAAH,sDAWd,OACE,cAAC1B,EAAA,EAAD,CAAMC,UAAU,SAAS/B,MAAO,CAAEgC,OAAQ,SAAWC,cAAc,SAAnE,SACE,eAACH,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,IAAK0W,MAAO,QAA5C,UACE,cAAC/Y,EAAA,EAAD,CAAQC,GAAG,KAAX,sBACA,eAACqC,EAAA,EAAD,CAAME,SAAUA,EAAhB,UACE,cAACgF,EAAA,EAAD,CACEnE,YAAY,WACZzB,MAAOyX,EACP7X,SAtBO,SAACC,GAChB6X,GAAY,SAACha,GAAD,OAAWmC,EAAEC,OAAOE,YAuB1B,cAAC0B,EAAA,EAAD,CAAQ7F,KAAK,SAAb,6B,4BCpCJ8b,GAAe,CACnBtI,OAAQ,GACRlK,SAAU,GACV7F,MAAO,GACPqS,YAAa,GACbrO,YAAa,GACbpD,iBAAiB,GA+BJrB,GA5BF,eAACD,EAAD,uDAAS+Y,GAAcC,EAAvB,8CACXC,aAAQjZ,GAAO,SAAClB,GACd,OAAQka,EAAO/b,MACb,KAAKN,EACL,KAAKF,EACL,KAAKD,EACHsC,EAAM2R,OAASuI,EAAO9b,QAAQkC,IAC9BN,EAAMyH,SAAWyS,EAAO9b,QAAQiE,KAChCrC,EAAM4B,MAAQsY,EAAO9b,QAAQwD,MAC7B5B,EAAMiU,YAAciG,EAAO9b,QAAQ6V,YACnCjU,EAAM4F,YAAcsU,EAAO9b,QAC3B4B,EAAMwC,iBAAkB,EACxB,MAEF,KAAK5E,EACHoC,EAAM2R,OAAS,GACf3R,EAAMyH,SAAW,GACjBzH,EAAM4B,MAAQ,GACd5B,EAAMiU,YAAc,GACpBjU,EAAM4F,YAAc,GACpB5F,EAAMwC,iBAAkB,OC7B1ByX,GAAe,CAAEhc,KAAM,GAAIuB,WAAW,GAc7BwJ,GAZD,eAAC9H,EAAD,uDAAS+Y,GAAcC,EAAvB,8CACZC,aAAQjZ,GAAO,SAAClB,GACd,OAAQka,EAAO/b,MACb,KAAKL,EACHkC,EAAM/B,KAAOic,EAAO9b,QAAQ,GAC5B4B,EAAMR,WAAY,OCPpBya,GAAe,CACnBzP,MAAO,GACPhL,WAAW,GAeEgL,GAZD,eAACtJ,EAAD,uDAAS+Y,GAAcC,EAAvB,8CACZC,aAAQjZ,GAAO,SAAClB,GACd,OAAQka,EAAO/b,MACb,KAAKJ,EACHiC,EAAMwK,MAAQ,CAAC,CAAE4P,QAAS,YAC1Bpa,EAAMR,WAAY,OCNX6a,GAFKC,2BAAgB,CAAEnZ,QAAM6H,SAAOuR,c,UCE7CC,GAAa,CAACC,MAQLC,GANOC,uBACpBC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCuJ1BvZ,gBAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAGCF,CAAyBU,aAjJxB,SAAC,GAAiC,IAA/BR,EAA8B,EAA9BA,KAAM4Z,EAAwB,EAAxBA,SAAUzZ,EAAc,EAAdA,QACjCzB,qBAAU,YACgB,uCAAG,8BAAAK,EAAA,+EAEJC,IAAMC,IAAI,iCAFN,cAEjB4a,EAFiB,OAGvBC,GAAgB,SAACjb,GAAD,OAAWgb,EAAK/c,QAHT,SAIJkC,IAAMC,IAAI,6BAJN,OAIjB8a,EAJiB,OAKvBC,GAAa,SAACnb,GAAD,OAAWkb,EAAKjd,QALN,kDAOvBsG,QAAQyC,MAAM,KAAI7C,UAPK,0DAAH,qDAWxBiX,MAb6C,MAePtc,YAAS4O,QAfF,mBAexC2N,EAfwC,KAe1BJ,EAf0B,OAgBbnc,YAAS4O,QAhBI,mBAgBxC4N,EAhBwC,KAgB7BH,EAhB6B,OAiBvBrc,aAAS,GAjBc,mBAiBxCyc,EAjBwC,KAiBlCC,EAjBkC,KAkBzCC,EAAY,WAChBD,GAAQ,SAACxb,GAAD,OAAYA,MAEtB,OACE,eAAC,WAAD,WACGub,EACC,qBACE3a,MAAO,CACLiE,SAAU,QACV6W,OAAQ,EACR5W,QAAS,OACTC,cAAe,SACfC,IAAK,EACLC,OAAQ,EACR0W,KAAM,EACNxW,MAAO,QACPC,WAAY,UACZC,UAAW,SACXC,KAAM,GAZV,SAeE,qBACE1E,MAAO,CACL0E,KAAM,EACNC,UAAW,QAHf,SAME,eAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,UAAQ,EAACzC,KAAK,UAA7B,UACE,cAACuC,EAAA,EAAKG,KAAN,UACE,cAAC3B,EAAA,EAAD,CAAQmE,QAASsT,EAAjB,0BAEF,cAACjW,EAAA,EAAKG,KAAN,UACE,cAAC,EAAD,MAEF,cAACH,EAAA,EAAKG,KAAN,UACE,eAACH,EAAA,EAAKA,KAAN,WACE,cAACA,EAAA,EAAKG,KAAN,CACEtD,KAAK,OACL8F,QAAS,WACP7G,EAAQG,KAAK,cAEfb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,aACL8F,QAAS,WACP7G,EAAQG,KAAR,mBAAyBN,EAAKwQ,UAEhC/Q,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,eACL8F,QAAS,WACP7G,EAAQG,KAAK,WAAYN,IAE3BP,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAM,YAA+B,IAAjBgZ,EAAqBA,EAAe,IACxDlT,QAAS,kBAAM7G,EAAQG,KAAK,cAC5Bb,MAAO,CACLgb,SAAU,UACV/a,MAAwB,IAAjBwa,GAAsB,YAGjC,cAAC7V,EAAA,EAAKG,KAAN,CACEtD,KAAM,WAA2B,IAAdiZ,EAAkBA,EAAY,IACjDnT,QAAS,kBAAM7G,EAAQG,KAAK,UAC5Bb,MAAO,CACLgb,SAAU,UACV/a,MAAqB,IAAdya,GAAmB,YAI9B,cAAC9V,EAAA,EAAKG,KAAN,CACEtD,KAAK,YACL8F,QAAS,kBAAM7G,EAAQG,KAAK,eAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,WACL8F,QAAS,kBAAM7G,EAAQG,KAAK,cAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,SACL8F,QAAS,kBAAM7G,EAAQG,KAAK,YAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,eACL8F,QAAS,kBAAM7G,EAAQG,KAAK,kBAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,aACL8F,QAAS,kBAAM7G,EAAQG,KAAK,gBAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,gBACL8F,QAAS,kBAAM7G,EAAQG,KAAK,kBAC5Bb,MAAO,CAAEgb,SAAU,aAErB,cAACpW,EAAA,EAAKG,KAAN,CACEtD,KAAK,WACL8F,QAAS,kBAAM7G,EAAQG,KAAK,cAC5Bb,MAAO,CAAEgb,SAAU,yBAQ/B,cAAC5X,EAAA,EAAD,CAAQmE,QAASsT,EAAjB,uBAGDV,SCvCQc,GAnFH,WAAO,IAAD,EAC0B/c,YAAS,CACjDY,MAAM,EACNoJ,QAAQ,IAHM,mBACTgT,EADS,KACMC,EADN,KAyBhB,OAnBAlc,qBAAU,WAAM,4CAId,4BAAAK,EAAA,+EAEuBC,IAAMC,IAAI,qBAFjC,OAEUe,EAFV,OAGIoD,QAAQC,IAAI,OAAQrD,GACpB6a,GAAM9d,SAASF,EAASmD,EAAKlD,OAJjC,gDAMI+d,GAAM9d,SAASG,KANnB,QAQE0d,GAAiB,SAAC/b,GAChBA,EAAMN,MAAO,EACbM,EAAM8I,OAASkT,GAAMC,WAAW9a,KAAKqB,mBAVzC,0DAJc,sBACVmC,OAAOC,WAAa,KACtBlD,MAAM,wCAFM,mCAiBdwa,KACC,CAACH,IAEF,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACGF,EAAcpc,KACb,cAAC,WAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyc,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWE,IACvC,eAAC,GAAD,WACE,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWG,IACzC,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WAAWC,UAAWI,IACxC,cAAC,IAAD,CAAON,OAAK,EAACC,KAAK,WAAWC,UAAWK,IACxC,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,YAAYC,UAAWM,IACzC,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,aAAaC,UAAWO,KAC1C,cAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,YAAYC,UAAW/N,KACzC,cAAC,IAAD,CAAO6N,OAAK,EAACC,KAAK,UAAUC,UAAW9K,KACvC,cAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,kBAAkBC,UAAW9K,KAC/C,cAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,cAAcC,UAAW5J,KAC3C,cAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,mBAAmBC,UAAWQ,KAChD,cAAC,IAAD,CACEV,OAAK,EACLC,KAAK,aACLC,UAAWS,KAEb,cAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,QAAQC,UAAWtE,KACrC,cAAC,IAAD,CACEoE,OAAK,EACLC,KAAK,gBACLC,UAAWjG,KAEb,cAAC,IAAD,CACE+F,OAAK,EACLC,KAAK,wBACLC,UAAWjG,KAEb,cAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,gBAAgBC,UAAWhE,KAC7C,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,iBAAiBC,UAAWU,KAC9C,cAAC,IAAD,CAAOZ,OAAK,EAACC,KAAK,eAAeC,UAAW1D,KAC5C,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,YAAYC,UAAWvC,eAMjD,cAACpX,EAAA,EAAD,CACEC,UAAU,SACVE,cAAc,SACdjC,MAAO,CAAEgC,OAAQ,SAHnB,SAKE,cAACF,EAAA,EAAKI,OAAN,CAAalC,MAAO,CAAEmC,SAAU,KAAhC,SACE,cAACrC,EAAA,EAAD,CAAQC,GAAG,KAAX,gC,OCtGZqc,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2956b735.chunk.js","sourcesContent":["//USER\nexport const LOGIN = 'LOGIN';\nexport const INIT_USER = 'INIT_USER';\nexport const RESET_USER = 'RESET_USER';\nexport const SIGNUP = 'SIGNUP';\n\n//ITEM\nexport const GETITEMS = 'GETITEMS';\n\n//ToDoList\nexport const ADDTASKS = 'ADDTASKS';\n","import axios from 'axios';\nimport { LOGIN, INIT_USER, RESET_USER, SIGNUP } from './types';\n\n//Login user\nexport const loginUser = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n\n    dispatch({\n      type: LOGIN,\n      payload: res.data,\n    });\n    //history.push('/admin/controlpanel');\n    history.push(`/homepage`);\n  } catch (err) {\n    alert('Invalid Account');\n  }\n};\n\n//Initialize User info when refreshed\nexport const initUser = (data) => (dispatch) => {\n  dispatch({\n    type: INIT_USER,\n    payload: data,\n  });\n};\n\n//Reset / Logout user\nexport const resetUser = () => (dispatch) => {\n  dispatch({\n    type: RESET_USER,\n  });\n};\n\n//Sign up user\nexport const signup = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: SIGNUP,\n      payload: res.data,\n    });\n    history.push(`/homepage`);\n  } catch (err) {\n    alert(err.response.data.msg);\n  }\n};\n","import React, { useEffect, Fragment } from 'react';\nimport { DateTime } from 'luxon';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\nimport { Header } from 'semantic-ui-react';\n\n/*\n    desc: Display server time and next tick duration and current server tick number\n*/\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'tt',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst ServerTime = () => {\n  const [serverTime, setServerTime] = useImmer({\n    serverTime: DateTime.local()\n      .setZone(dateSetting.timezone)\n      .setLocale(dateSetting.locale)\n      .toFormat(dateSetting.format)\n      .toLocaleString(dateSetting.localeString),\n  });\n  const [serverTicker, setServerTicker] = useImmer({\n    serverID: '',\n    serverTicker: '',\n    isLoading: true,\n  });\n  const [serverDoneTicking, setServerDoneTicking] = useImmer({\n    done: false,\n  });\n  useEffect(() => {\n    //isMountedRef.current = true;\n    const interval = setInterval(() => {\n      setServerTime((draft) => {\n        draft.serverTime = DateTime.local()\n          .setZone(dateSetting.timezone)\n          .setLocale(dateSetting.locale)\n          .toFormat(dateSetting.format)\n          .toLocaleString(dateSetting.localeString);\n      });\n    }, 1000);\n\n    return () => {\n      //isMountedRef.current = false;\n      clearInterval(interval);\n    };\n  }, [setServerTime]);\n\n  useEffect(() => {\n    const getServerTicker = async () => {\n      const serverTick = await axios.get('/api/controlpanel/getstick');\n      setServerTicker((draft) => {\n        draft.serverID = serverTick.data._id;\n        draft.serverTicker = serverTick.data.tick;\n        draft.isLoading = false;\n      });\n    };\n    getServerTicker();\n  }, [setServerTicker]);\n\n  const plusServerTicker = async () => {\n    if (!serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = true;\n      });\n      setServerTicker((draft) => {\n        draft.serverTicker = draft.serverTicker + 1;\n      });\n      //await axios.post('/api/controlpanel/plusstick', serverTicker);\n    }\n  };\n\n  const tickerTimer = () => {\n    const now = DateTime.local()\n      .setZone('Asia/Singapore')\n      .setLocale('en-US')\n      .toFormat('m');\n\n    if (now === '30' || now === '0') {\n      plusServerTicker();\n      return 30;\n    }\n    //0 > x < 60\n    if (parseInt(now) > 0 && parseInt(now) < 60 && serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = false;\n      });\n    }\n    if (parseInt(now) >= 0 && parseInt(now) < 30 && !serverDoneTicking.done) {\n      return 30 - parseInt(now);\n    }\n    // 30<x<60\n    if (parseInt(now) >= 30 && parseInt(now) < 60 && !serverDoneTicking.done) {\n      return 60 - parseInt(now);\n    }\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    plusServerTicker();\n  };\n  return (\n    <Fragment>\n      {serverTicker.isLoading ? null : (\n        <Header as=\"h4\" style={{ color: 'white' }}>\n          {serverTime.serverTime}\n          <br />\n          Next Tick In: [{tickerTimer()} mins]\n          {/*<h4>Server Tick: {serverTicker.serverTicker}</h4>*/}\n        </Header>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ServerTime;\n","import React, { Fragment } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/user';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { Helmet } from 'react-helmet';\n\nconst AuthPage = ({ loginUser, history, user }) => {\n  const [formData, setFormData] = useImmer({\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n\n    /*setFormData(\n      produce((draft) => {\n        draft[e.target.name] = e.target.value;\n      })\n    );*/\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const checkForm = () => {\n    const errors = {};\n    if (formData.email === '' || !formData.email.includes('@')) {\n      errors.email = 'Email field is invalid.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Password field is empty.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n    const isValid = checkForm();\n    if (isValid) {\n      loginUser(formData, history);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Login Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Grid\n          textAlign=\"center\"\n          style={{ height: '100vh' }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <ServerTime />\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={onSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={onChange}\n                />\n                {formErrors.errors.email}\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={onChange}\n                />\n                {formErrors.errors.password}\n\n                <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to=\"/signup\">Sign Up</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      ) : (\n        <Redirect to={`/homepage`} />\n      )}\n    </Fragment>\n  );\n};\n\nAuthPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(AuthPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { connect } from 'react-redux';\nimport { signup } from '../../redux/actions/user';\nimport { withRouter } from 'react-router-dom';\n\nconst SignupPage = ({ signup, history }) => {\n  const [formData, setFormData] = useImmer({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = async (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (formData.name === '') {\n      errors.name = 'Missing name.';\n    }\n    if (formData.email === '') {\n      errors.email = 'Missing email.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Missing password.';\n    }\n    if (formData.password.length < 6) {\n      errors.password = 'Password length must be 6 characters or more.';\n    }\n\n    if (formData.password2 === '') {\n      errors.password2 = 'Missing password.';\n    }\n    if (formData.password !== formData.password2) {\n      errors.password2 = 'Password does not match.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n\n    const isValid = validateForm();\n    if (isValid) {\n      console.log('FormData:', formData);\n      signup(formData, history);\n    } else {\n      console.log('Form incomplete');\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Signup\n        </Header>\n        <Form size=\"large\" onSubmit={onSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"wheelchair\"\n              iconPosition=\"left\"\n              placeholder=\"Name\"\n              name=\"name\"\n              onChange={onChange}\n            />\n            {formErrors.errors.name}\n            <p>(@u.nus.edu|@ntu.edu.sg|@smu.edu.sg)</p>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"School email address\"\n              name=\"email\"\n              onChange={onChange}\n            />\n\n            {formErrors.errors.email}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Re-type password\"\n              type=\"password\"\n              name=\"password2\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password2}\n\n            <Button color=\"blue\" fluid size=\"large\" type=\"submit\">\n              Sign up\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nSignupPage.propTypes = {\n  signup: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { signup })(withRouter(SignupPage));\n","import React, { Fragment } from 'react';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst SideOverview = ({ userDetails }) => {\n  return (\n    <Fragment>\n      {window.innerWidth < 800 ? (\n        <Fragment></Fragment>\n      ) : (\n        <div\n          style={{\n            position: 'fixed',\n            display: 'flex',\n            flexDirection: 'column',\n            top: 0,\n            bottom: 0,\n            right: 0,\n            width: '250px',\n            background: '#1B1C1D',\n            overflowX: 'hidden',\n            flex: 1,\n          }}\n        >\n          <div\n            style={{\n              flex: 1,\n              overflowY: 'auto',\n            }}\n          >\n            <Menu vertical inverted>\n              <Menu.Item>\n                <Menu.Header>Your Territory</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Country: {userDetails.otherThings.country}\n                  </Menu.Item>\n                  <Menu.Item>\n                    School: {userDetails.otherThings.school}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Networth: {userDetails.otherThings.networth}\n                  </Menu.Item>\n                  <Menu.Item>Land: {userDetails.otherThings.land}</Menu.Item>\n                  <Menu.Item>Money: ${userDetails.otherThings.money}</Menu.Item>\n                  <Menu.Item>\n                    Population: {userDetails.otherThings.population}\n                  </Menu.Item>\n                  <Menu.Item>Food: {userDetails.otherThings.food}</Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n              <Menu.Item>\n                <Menu.Header>Next Tick Increments</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Money: ${userDetails.otherThings.nextIncrements.money}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Population:{' '}\n                    {userDetails.otherThings.nextIncrements.population}\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n\n              <Menu.Item>\n                <Menu.Header>Intelligence Division</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Reconnaissance:{' '}\n                    {userDetails.otherThings.intelligenceDivision.recons}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Commandos:{' '}\n                    {userDetails.otherThings.intelligenceDivision.commandos}\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n              <Menu.Item>\n                <Menu.Header>Infantry Division</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Attack Points:{' '}\n                    {userDetails.otherThings.infantryDivision.attackPts}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Defence Points:{' '}\n                    {userDetails.otherThings.infantryDivision.defencePts}\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n\n              <Menu.Item>\n                <Menu.Header>Air Division</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Attack Points:{' '}\n                    {userDetails.otherThings.airDivision.attackPts}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Defence Points:{' '}\n                    {userDetails.otherThings.airDivision.defencePts}\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n              <Menu.Item>\n                <Menu.Header>Sea Division</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    Attack Points:{' '}\n                    {userDetails.otherThings.seaDivision.attackPts}\n                  </Menu.Item>\n                  <Menu.Item>\n                    Defence Points:{' '}\n                    {userDetails.otherThings.seaDivision.defencePts}\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n            </Menu>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nSideOverview.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n};\n\nexport default SideOverview;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport Overview from '../SideNav/SideOverview';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { initUser } from '../../redux/actions/user';\nimport {\n  Grid,\n  Feed,\n  Icon,\n  Form,\n  TextArea,\n  Button,\n  Header,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { DateTime } from 'luxon';\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'FF',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst HomePage = ({ user, initUser, match }) => {\n  useEffect(() => {\n    const retrieveUser = async () => {\n      try {\n        const getUser = await axios.get(`/api/auth/getuser`);\n        initUser(getUser.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    const retrievePosts = async () => {\n      try {\n        const getPosts = await axios.get('/api/post/getallposts');\n        setPosts((draft) => {\n          draft.content = getPosts.data;\n        });\n      } catch (err) {\n        console.log(err.response);\n      }\n    };\n    retrieveUser();\n    retrievePosts();\n  }, []);\n  const [post, setPost] = useImmer({ content: '' });\n  const [posts, setPosts] = useImmer({ content: [] });\n  const onChange = (e) => {\n    setPost((draft) => {\n      draft.content = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const postStructure = {\n        school: user.otherThings.school,\n        coverage: 'Singapore',\n        name: user.username,\n        text: post,\n      };\n      setPosts((draft) => {\n        draft.content.unshift({\n          date: DateTime.local()\n            .setZone(dateSetting.timezone)\n            .setLocale(dateSetting.locale)\n            .toFormat(dateSetting.format),\n          coverage: 'Singapore',\n          school: user.otherThings.school,\n          name: user.username,\n          text: post.content,\n        });\n      });\n      const result = await axios.post('/api/post/post', postStructure);\n      console.log(result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const onRefresh = async (e) => {\n    try {\n      e.preventDefault();\n      const getPosts = await axios.get('/api/post/getallposts');\n      setPosts((draft) => {\n        draft.content = getPosts.data;\n      });\n    } catch (err) {\n      console.err(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <div>\n          <Grid style={{ height: '100vh' }} textAlign=\"center\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <Fragment>\n                  <Header as=\"h1\" textAlign=\"left\">\n                    Welcome\n                  </Header>\n                  <Form onSubmit={onSubmit}>\n                    <TextArea\n                      placeholder=\"Tell us more\"\n                      name=\"post\"\n                      onChange={onChange}\n                    />\n\n                    {/*<Dropdown\n                      placeholder=\"Select Coverage\"\n                      selection\n                      options={[\n                        { key: 'school', value: 'NUS', text: 'School' },\n                        { key: 'country', value: 'Singapore', text: 'Country' },\n                        { key: 'global', value: 'Global', text: 'Global' },\n                      ]}\n                    />*/}\n                    <Button\n                      content=\"POST\"\n                      color=\"black\"\n                      size=\"large\"\n                      fluid\n                      type=\"submit\"\n                    />\n                  </Form>\n                  <Button fluid color=\"red\" onClick={onRefresh}>\n                    REFRESH\n                  </Button>\n                  <Feed>\n                    {posts.content.map((postx, index) => (\n                      <Feed.Event key={index}>\n                        <Feed.Content>\n                          <Feed.Summary>\n                            <Link to={`/profile/${postx.userID}`}>\n                              {postx.name}\n                            </Link>\n                            <Feed.Date>{postx.school}</Feed.Date>\n                            <Feed.Date>{postx.date}</Feed.Date>\n                          </Feed.Summary>\n                          <Feed.Extra text>{postx.text}</Feed.Extra>\n                        </Feed.Content>\n                      </Feed.Event>\n                    ))}\n                  </Feed>\n                </Fragment>\n                <Overview userDetails={user} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nHomePage.propTypes = {\n  user: PropTypes.object.isRequired,\n  initUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { initUser })(HomePage);\n","import React, { Fragment, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { getAllItemsByEmail } from '../../redux/actions/items';\nimport { Card, Grid } from 'semantic-ui-react';\nconst ControlPanel = ({ isAuth, getAllItemsByEmail, userItems }) => {\n  const [theItems, setTheItems] = useImmer({\n    items: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    getAllItemsByEmail();\n  }, [getAllItemsByEmail]);\n\n  useEffect(() => {\n    if (!userItems.isLoading) {\n      setTheItems((draft) => {\n        draft.items = userItems.data.items;\n        draft.isLoading = false;\n      });\n    } else {\n      setTheItems((draft) => {\n        draft.items = [];\n        draft.isLoading = true;\n      });\n    }\n    // eslint-disable-next-line\n  }, [userItems.isLoading]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Helmet>\n          <title>Control Panel</title>\n        </Helmet>\n        {!isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Fragment>\n            <h1>ControlPanel</h1>\n            <ServerTime />\n            {theItems.isLoading ? (\n              <h3>Loading Items...</h3>\n            ) : (\n              <Fragment>\n                {theItems.items.length === 0 ? (\n                  <h3>No items....</h3>\n                ) : (\n                  <Card.Group centered={true}>\n                    {theItems.items.map((item) => (\n                      <Card key={item._id}>\n                        <Card.Content>\n                          <Card.Header>{item.itemName}</Card.Header>\n                          <Card.Meta>x{item.quantity}</Card.Meta>\n                          <Card.Description>\n                            {item.additionalNote}\n                          </Card.Description>\n                        </Card.Content>\n                      </Card>\n                    ))}\n                  </Card.Group>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nControlPanel.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getAllItemsByEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.user.isAuthenticated,\n  userItems: state.items,\n});\n\nexport default connect(mapStateToProps, { getAllItemsByEmail })(ControlPanel);\n","import axios from 'axios';\nimport { GETITEMS } from './types';\n\nexport const getAllItemsByEmail = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/items/getall');\n    dispatch({\n      type: GETITEMS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Error: ', err.response.data);\n  }\n};\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Input,\n  Modal,\n  Button,\n  Icon,\n  Table,\n  Item,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst ExploreLand = ({ history }) => {\n  const [open, setOpen] = React.useState(false);\n  const [population, setPopulation] = useImmer(\n    history.location.state.otherThings.population\n  );\n  const [sendingAmt, setSendingAmt] = useImmer(0);\n  const [totalCost, setTotalCost] = useImmer(0);\n  const [tasks, setTasks] = useImmer([]);\n\n  const EXPLORER_COST = 500;\n\n  const getExploringTasks = async () => {\n    try {\n      const retrievedTasks = await axios.get('/api/actions/getexploringtasks');\n      setTasks((draft) => retrievedTasks.data);\n    } catch (err) {\n      alert(JSON.stringify(err.response.data));\n    }\n  };\n  const onChange = (e) => {\n    if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n      setSendingAmt((draft) => e.target.value);\n      setTotalCost((draft) => e.target.value * EXPLORER_COST);\n    }\n  };\n\n  const onSend = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        creation: {\n          amount: sendingAmt,\n        },\n        totalCost: totalCost,\n      };\n      console.log('Data', sendingAmt);\n      const sendExplorer = await axios.post(\n        '/api/actions/sendexplorer',\n        structure\n      );\n      console.log(sendExplorer.data);\n      setSendingAmt((draft) => 0);\n      setPopulation((draft) => (draft -= sendingAmt));\n      alert('ok');\n    } catch (err) {\n      alert(JSON.stringify(err.response.data.msg));\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\">Explore Land</Header>\n          <>\n            <Header>Available Units: {population}</Header>\n            <Header>1 unit = $500</Header>\n          </>\n          <>\n            <Input\n              label=\"Amount:\"\n              value={sendingAmt}\n              onChange={onChange}\n              type=\"number\"\n            />\n            <Button color=\"black\" onClick={onSend}>\n              Send\n            </Button>\n          </>\n          <br />\n          <br />\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getExploringTasks();\n            }}\n            trigger={<Button color=\"black\">View On-going tasks</Button>}\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task) => (\n                      <Table.Row>\n                        <Table.Cell>\n                          <Header>\n                            {task.creation.amount} units (\n                            {task.creation.amount * 5} land)\n                          </Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Ticks\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default ExploreLand;\n","import React, { useEffect, Fragment } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nconst MyMessages = () => {\n  useEffect(() => {\n    const retrieveMsg = async () => {\n      try {\n        const getMsg = await axios.get('/api/users/messages');\n        setMessages((draft) => getMsg.data.messages);\n        setLoading((draft) => false);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    retrieveMsg();\n  }, []);\n  const [messages, setMessages] = useImmer([]);\n  const [loading, setLoading] = useImmer(true);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '650px' }}>\n        <Header as=\"h1\">Messages</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Content</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {!loading && (\n              <Fragment>\n                {messages.map((msg, index) => (\n                  <Table.Row key={index}>\n                    <Table.Cell>{msg.content}</Table.Cell>\n                    <Table.Cell>\n                      <Link to={`/profile/${msg.from._id}`}>\n                        {msg.from.name}\n                      </Link>\n                    </Table.Cell>\n\n                    <Table.Cell>{msg.date}</Table.Cell>\n                    <Table.Cell>\n                      <Button color=\"black\">Reply</Button>\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Fragment>\n            )}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MyMessages;\n","import React, { useEffect, Fragment } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst Buildings = () => {\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setBuildingQty((draft) => {\n          draft.home = result.data.buildings.homes.quantity;\n          draft.moneyGenerator = result.data.buildings.moneyGenerator.quantity;\n          draft.intel = result.data.buildings.intelligenceCamp.quantity;\n          draft.armyCamp = result.data.buildings.infantryCamp.quantity;\n          draft.airField = result.data.buildings.airField.quantity;\n          draft.navalBase = result.data.buildings.navalBase.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getBuildings();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [buildingQty, setBuildingQty] = useImmer({\n    home: Number,\n    moneyGenerator: Number,\n    intel: Number,\n    armyCamp: Number,\n    airField: Number,\n    navalBase: Number,\n  });\n  const [intelDiv, setIntelDiv] = useImmer(0);\n  const [moneyGenerator, setMoneyGenerator] = useImmer(0);\n  const [homes, setHomes] = useImmer(0);\n  const [armyCamp, setArmyCamp] = useImmer(0);\n  const [airField, setAirField] = useImmer(0);\n  const [navalBase, setNavalBase] = useImmer(0);\n  //const [foodBank, setFoodBank] = useImmer(0);\n  const [buildingTasks, setBuildingTasks] = useImmer([]);\n\n  const getBuildingTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getbuildingtasks');\n      console.log(result.data);\n      setBuildingTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'home') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setHomes((draft) => e.target.value);\n      }\n    }\n    if (e.target.name === 'money') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setMoneyGenerator((draft) => e.target.value);\n      }\n    }\n    if (e.target.name === 'armyCamp') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setArmyCamp((draft) => e.target.value);\n      }\n    }\n    if (e.target.name === 'airField') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setAirField((draft) => e.target.value);\n      }\n    }\n    if (e.target.name === 'navalBase') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setNavalBase((draft) => e.target.value);\n      }\n    }\n    if (e.target.name === 'intelDiv') {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        setIntelDiv((draft) => e.target.value);\n      }\n    }\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        homes,\n        moneyGenerator,\n        intelDiv,\n        armyCamp,\n        airField,\n        navalBase,\n      };\n      const res = await axios.post('/api/actions/buildbuildings', structure);\n      console.log(res.data);\n      setHomes((draft) => 0);\n      setMoneyGenerator((draft) => 0);\n      setIntelDiv((draft) => 0);\n      setArmyCamp((draft) => 0);\n      setAirField((draft) => 0);\n      setNavalBase((draft) => 0);\n      alert('ok');\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Fragment>\n          <Header>Non-Military</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Building</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n                <Table.HeaderCell>Networth per unit</Table.HeaderCell>\n                <Table.HeaderCell>Amount Generated per unit</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Home</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>50 population</Table.Cell>\n                <Table.Cell>{buildingQty.home}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"home\"\n                    value={homes}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Money Generator</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>$1000</Table.Cell>\n                <Table.Cell>{buildingQty.moneyGenerator}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"money\"\n                    value={moneyGenerator}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Fragment>\n        <Fragment>\n          <Header>Military</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Building</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Extra Space per unit</Table.HeaderCell>\n                <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n                <Table.HeaderCell>Networth per unit</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Intelligence Dept</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.intel}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"intelDiv\"\n                    value={intelDiv}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Army Camp</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.armyCamp}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"armyCamp\"\n                    value={armyCamp}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air Field</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.airField}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airField\"\n                    value={airField}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Naval Base</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.navalBase}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"navalBase\"\n                    value={navalBase}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              {/* <Table.Row>\n              <Table.Cell>\n                <Header>Food Bank</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"foodBank\"\n                  value={foodBank}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n           </Table.Row>*/}\n            </Table.Body>\n          </Table>\n        </Fragment>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getBuildingTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {buildingTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Buildings;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst MilitaryPage = () => {\n  useEffect(() => {\n    const getUnits = async () => {\n      const result = await axios.get('/api/users/getmyself');\n      setSpaces((draft) => result.data.buildings);\n      setUnits((draft) => {\n        draft.recon = result.data.intelligenceDivision.recons;\n        draft.commando = result.data.intelligenceDivision.commandos;\n        draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n        draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n        draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n        draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n        draft.airOne = result.data.airDivision.air1.quantity;\n        draft.airTwo = result.data.airDivision.air2.quantity;\n        draft.airThree = result.data.airDivision.air3.quantity;\n        draft.airFour = result.data.airDivision.air4.quantity;\n        draft.seaOne = result.data.seaDivision.sea1.quantity;\n        draft.seaTwo = result.data.seaDivision.sea2.quantity;\n        draft.seaThree = result.data.seaDivision.sea3.quantity;\n        draft.seaFour = result.data.seaDivision.sea4.quantity;\n      });\n      setLoading((draft) => false);\n    };\n    getUnits();\n  }, []);\n  const [loading, setLoading] = useImmer(true);\n  const [spaces, setSpaces] = useImmer({});\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const getMilitaryTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getmilitarytasks');\n      console.log(result.data);\n      setTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  const [tasks, setTasks] = useImmer([]);\n\n  const [intelligenceDiv, setIntelDiv] = useImmer({\n    recon: 0,\n    commando: 0,\n  });\n\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onChangeIntelDiv = (e) => {\n    setIntelDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = e.target.value;\n      }\n    });\n  };\n  const onChangeInfanDiv = (e) => {\n    setInfantryDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = e.target.value;\n      }\n    });\n  };\n  const onChangeAirDiv = (e) => {\n    setAirDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = e.target.value;\n      }\n    });\n  };\n  const onChangeNavalDiv = (e) => {\n    setNavalDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = e.target.value;\n      }\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const res = await axios.post('/api/actions/createmilitary', {\n        intelligenceDiv,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      });\n      setInfantryDiv((draft) => {\n        draft.infantryOne = 0;\n        draft.infantryTwo = 0;\n        draft.infantryThree = 0;\n        draft.infantryFour = 0;\n      });\n      setAirDiv((draft) => {\n        draft.airOne = 0;\n        draft.airTwo = 0;\n        draft.airThree = 0;\n        draft.airFour = 0;\n      });\n      setNavalDiv((draft) => {\n        draft.seaOne = 0;\n        draft.seaTwo = 0;\n        draft.seaThree = 0;\n        draft.seaFour = 0;\n      });\n      alert('ok');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      style={{ height: '100vh' }}\n      columns={3}\n    >\n      {loading ? (\n        <Header>Loading...</Header>\n      ) : (\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header as=\"h3\">MilitaryPage</Header>\n          <Header>Intelligence Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Reconn</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>\n                  {spaces.intelligenceCamp.availableSpace}\n                </Table.Cell>\n                <Table.Cell>{units.recon}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"recon\"\n                    value={intelligenceDiv.recon}\n                    onChange={onChangeIntelDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Commando</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>\n                  {spaces.intelligenceCamp.availableSpace}\n                </Table.Cell>\n                <Table.Cell>{units.commando}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"commando\"\n                    value={intelligenceDiv.commando}\n                    onChange={onChangeIntelDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Infantry Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryOne\"\n                    value={infantryDiv.infantryOne}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryTwo\"\n                    value={infantryDiv.infantryTwo}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryThree\"\n                    value={infantryDiv.infantryThree}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryFour\"\n                    value={infantryDiv.infantryFour}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Air Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airOne\"\n                    value={airDiv.airOne}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airTwo\"\n                    value={airDiv.airTwo}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airThree\"\n                    value={airDiv.airThree}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airFour\"\n                    value={airDiv.airFour}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Naval Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaOne\"\n                    value={navalDiv.seaOne}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaTwo\"\n                    value={navalDiv.seaTwo}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaThree\"\n                    value={navalDiv.seaThree}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaFour\"\n                    value={navalDiv.seaFour}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Button color=\"black\" fluid onClick={onSubmit}>\n            Build\n          </Button>\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getMilitaryTasks();\n            }}\n            trigger={\n              <Button color=\"red\" fluid>\n                View On-going tasks\n              </Button>\n            }\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Building</Table.HeaderCell>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task, index) => (\n                      <Table.Row key={index}>\n                        <Table.Cell>\n                          <Header>{task.creation.name}</Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.creation.amount}{' '}\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Tick\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n};\n\nexport default MilitaryPage;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst AttackPage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n          draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n          draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n          draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n          draft.airOne = result.data.airDivision.air1.quantity;\n          draft.airTwo = result.data.airDivision.air2.quantity;\n          draft.airThree = result.data.airDivision.air3.quantity;\n          draft.airFour = result.data.airDivision.air4.quantity;\n          draft.seaOne = result.data.seaDivision.sea1.quantity;\n          draft.seaTwo = result.data.seaDivision.sea2.quantity;\n          draft.seaThree = result.data.seaDivision.sea3.quantity;\n          draft.seaFour = result.data.seaDivision.sea4.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getUnits();\n  }, []);\n\n  const getTasks = async () => {\n    try {\n      const output = await axios.get('/api/actions/getattacktasks');\n      setTasks((draft) => output.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [open, setOpen] = React.useState(false);\n  const [tasks, setTasks] = useImmer([]);\n\n  const [units, setUnits] = useImmer({\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n\n  const onInfantryChange = (e) => {\n    setInfantryDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = Number(e.target.value);\n      }\n    });\n  };\n  const onAirChange = (e) => {\n    setAirDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = Number(e.target.value);\n      }\n    });\n  };\n  const onNavalChange = (e) => {\n    setNavalDiv((draft) => {\n      if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n        draft[e.target.name] = Number(e.target.value);\n      }\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        target,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      };\n      const result = await axios.post('/api/actions/attack', structure);\n      alert('ok');\n      setInfantryDiv((draft) => {\n        draft.infantryOne = 0;\n        draft.infantryTwo = 0;\n        draft.infantryThree = 0;\n        draft.infantryFour = 0;\n      });\n      setAirDiv((draft) => {\n        draft.airOne = 0;\n        draft.airTwo = 0;\n        draft.airThree = 0;\n        draft.airFour = 0;\n      });\n      setNavalDiv((draft) => {\n        draft.seaOne = 0;\n        draft.seaTwo = 0;\n        draft.seaThree = 0;\n        draft.seaFour = 0;\n      });\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const totalPower = () => {\n    let tPwer = 0;\n    let tCost = 0;\n    const infantryPower = Object.entries(infantryDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += infantryPower[i][1] * 10;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += infantryPower[i][1] * 20;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += infantryPower[i][1] * 30;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += infantryPower[i][1] * 40;\n        tCost += infantryPower[i][1] * 500;\n      }\n    }\n    const airPower = Object.entries(airDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += airPower[i][1] * 10;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += airPower[i][1] * 20;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += airPower[i][1] * 30;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += airPower[i][1] * 40;\n        tCost += airPower[i][1] * 500;\n      }\n    }\n    const navalPower = Object.entries(navalDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += navalPower[i][1] * 10;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += navalPower[i][1] * 20;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += navalPower[i][1] * 30;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += navalPower[i][1] * 40;\n        tCost += navalPower[i][1] * 500;\n      }\n    }\n    return { tPwer, tCost };\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Attack Page</Header>\n        <Input\n          label=\"Target\"\n          value={target}\n          name=\"target\"\n          onChange={onTarget}\n        />\n        <Header sub>\n          If attack is successful => You will take 5% of target's land but lose\n          1% of dispatched units. Target loses 5% of land and military.\n        </Header>\n        <Header sub>\n          If attack is unsuccessful => You will lose 5% of dispatched units.\n          Target loses 1% military.\n        </Header>\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryOne}\n                  name=\"infantryOne\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryTwo}\n                  name=\"infantryTwo\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryThree}\n                  name=\"infantryThree\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryFour}\n                  name=\"infantryFour\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        {/*<Header>Armoured Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        \n        */}\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airOne}\n                  name=\"airOne\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airTwo}\n                  name=\"airTwo\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airThree}\n                  name=\"airThree\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airFour}\n                  name=\"airFour\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaOne}\n                  name=\"seaOne\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaTwo}\n                  name=\"seaTwo\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaThree}\n                  name=\"seaThree\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaFour}\n                  name=\"seaFour\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Attack Points: {totalPower().tPwer}</Header>\n        <Header>Total Cost:${totalPower().tCost}</Header>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Attack\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Total Attack Power</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.totalPower}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{task.target.name}</Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AttackPage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Dropdown, Table } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ScoreboardPage = () => {\n  const [users, setUsers] = useImmer([]);\n  useEffect(() => {\n    const getUsers = async () => {\n      const retrievedUsers = await axios.get('/api/users/getusers');\n      setUsers((draft) => retrievedUsers.data);\n    };\n    getUsers();\n  }, []);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">ScoreboardPage</Header>\n        {/* <Dropdown\n          placeholder=\"Select Coverage\"\n          selection\n          options={[\n            { key: 'school', value: 'NUS', text: 'School' },\n            { key: 'country', value: 'Singapore', text: 'Country' },\n            { key: 'global', value: 'Global', text: 'Global' },\n          ]}\n        />*/}\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Rank</Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>School</Table.HeaderCell>\n              <Table.HeaderCell>Country</Table.HeaderCell>\n              <Table.HeaderCell>Land</Table.HeaderCell>\n              <Table.HeaderCell>Networth</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {users.map((user, index) => (\n              <Table.Row key={index}>\n                <Table.Cell>{index + 1}</Table.Cell>\n                <Table.Cell>\n                  <Header sub>\n                    <Link to={`/profile/${user._id}`}>{user.name}</Link>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.school}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.country}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.land}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.networth}</Header>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ScoreboardPage;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Icon,\n  Table,\n  Item,\n  TextArea,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ProfilePage = ({ userID, match, history }) => {\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const userInfo = await axios.get(\n          `/api/users/getuser/${match.params.userid}`\n        );\n        console.log(userInfo.data);\n        setUser((draft) => userInfo.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n      setLoading((draft) => false);\n    };\n    getUserInfo();\n  }, []);\n  const [user, setUser] = useImmer({});\n  const [loading, setLoading] = useImmer(true);\n  const [open, setOpen] = React.useState(false);\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [message, setMessage] = useImmer('');\n  const goCreateProfile = (e) => {\n    e.preventDefault();\n    history.push('/ceprofile');\n  };\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  const onMessageChange = (e) => {\n    setMessage((draft) => e.target.value);\n  };\n  const onMessage = async (e) => {\n    try {\n      e.preventDefault();\n      const messageUser = await axios.post(\n        `/api/users/messageUser/${user._id}`,\n        { content: message }\n      );\n      console.log(messageUser.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={3}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 850 }}>\n          {loading ? (\n            <Header>Loading...</Header>\n          ) : (\n            <Fragment>\n              <Grid.Column>\n                <Button name=\"profile\" onClick={onTab}>\n                  Profile\n                </Button>\n                <Button name=\"battle\" onClick={onTab}>\n                  Battle Stats\n                </Button>\n              </Grid.Column>\n              {tabs.profile && (\n                <>\n                  <Grid.Column>\n                    <Header as=\"h4\">Name: {user.name}</Header>\n                    <Header as=\"h4\">Current School: {user.school}</Header>\n                    <Header as=\"h4\">Country: {user.country}</Header>\n                    {userID === user._id ? (\n                      <Button color=\"black\" onClick={goCreateProfile}>\n                        Create/Edit Profile\n                      </Button>\n                    ) : (\n                      <>\n                        <Modal\n                          onClose={() => setOpen(false)}\n                          onOpen={() => setOpen(true)}\n                          open={open}\n                          trigger={<Button color=\"black\">Message</Button>}\n                        >\n                          <Modal.Header>Message</Modal.Header>\n                          <Modal.Content>\n                            <Modal.Description>\n                              <Header subheader>To: {user.name}</Header>\n                              <TextArea\n                                style={{ width: '100%' }}\n                                onChange={onMessageChange}\n                                value={message}\n                              />\n                            </Modal.Description>\n                          </Modal.Content>\n                          <Modal.Actions>\n                            <Button\n                              color=\"black\"\n                              onClick={() => setOpen(false)}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              content=\"Send\"\n                              onClick={(e) => {\n                                setOpen(false);\n                                onMessage(e);\n                              }}\n                              positive\n                            />\n                          </Modal.Actions>\n                        </Modal>\n                      </>\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Header as=\"h2\">Bio</Header>\n                    {user.bio === '' || !user.bio ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Bio</Header>\n                      </div>\n                    ) : (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header as=\"h4\">{user.bio}</Header>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Skill sets</Header>\n                    {user.skillsets.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Skills Sets</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.skillsets.map((skill, index) => (\n                            <Item key={index}>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}.{skill}\n                                </Item.Header>\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Experiences</Header>\n                    {user.experiences.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No experiences</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.experiences.map((experience, index) => (\n                            <Item>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}. {experience.title}\n                                </Item.Header>\n                                <Item.Meta>{experience.company}</Item.Meta>\n                                <Item.Description>\n                                  {experience.description}\n                                </Item.Description>\n                                {experience.current ? (\n                                  <Item.Extra>{experience.from}</Item.Extra>\n                                ) : (\n                                  <Item.Extra>1999/10/19 - now</Item.Extra>\n                                )}\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                  </Grid.Column>\n                </>\n              )}\n              {tabs.battle && (\n                <Grid.Column>\n                  <Header as=\"h4\">Networth: {user.networth}</Header>\n                  <Header as=\"h4\">\n                    Wins / Losses: {user.battleStats.wins}/\n                    {user.battleStats.losses}\n                  </Header>\n                  {match.params.userid !== user.userid && (\n                    <Fragment>\n                      {userID !== user._id && (\n                        <>\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(`/attack/${match.params.userid}`);\n                            }}\n                          >\n                            Attack\n                          </Button>\n                          <br />\n                          <br />\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(\n                                `/intelligence/${match.params.userid}`\n                              );\n                            }}\n                          >\n                            Gather Intelligence\n                          </Button>\n                          <br />\n                          <br />\n                        </>\n                      )}\n                    </Fragment>\n                  )}\n\n                  <Modal\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    trigger={<Button color=\"black\">Recent Battles</Button>}\n                  >\n                    <Modal.Header>Recent Battles</Modal.Header>\n                    <Modal.Content scrolling>\n                      <Modal.Description>\n                        <Table celled padded>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>Type</Table.HeaderCell>\n                              <Table.HeaderCell>Result</Table.HeaderCell>\n                              <Table.HeaderCell>Description</Table.HeaderCell>\n                              <Table.HeaderCell>Date</Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Header>Attack</Header>\n                              </Table.Cell>\n                              <Table.Cell>Lost</Table.Cell>\n                              <Table.Cell>\n                                <Table.Cell>\n                                  Target: username(clickable).\n                                  <br /> 5000 land gained.\n                                  <br /> Destroyed 500 units.\n                                  <br /> Lost 50 units.\n                                </Table.Cell>\n                              </Table.Cell>\n                              <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                      <Button onClick={() => setOpen(false)} color=\"black\">\n                        Close <Icon name=\"close\" />\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </Grid.Column>\n              )}\n            </Fragment>\n          )}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userID: state.user.userid,\n});\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Label,\n  TextArea,\n  Item,\n  Card,\n  Header,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst CreateEditProfile = ({ user, history }) => {\n  const [name, setName] = useImmer(user.username ? user.username : '');\n  const [bio, setBio] = useImmer(\n    user.otherThings.bio ? user.otherThings.bio : ''\n  );\n  //const [skills, setSkills] = useImmer([]);\n  const [skills, setSkills] = useImmer(\n    user.otherThings.skillsets ? user.otherThings.skillsets : []\n  );\n  //const [experiences, setExperiences] = useImmer([]);\n  const [experiences, setExperiences] = useImmer(\n    user.otherThings.experiences ? user.otherThings.experiences : []\n  );\n  /*const [socials, setSocials] = useImmer({\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n  });*/\n  const [socials, setSocials] = useImmer({\n    youtube:\n      user.otherThings.social &&\n      (user.otherThings.social.youtube ? user.otherThings.social.youtube : ''),\n    twitter:\n      user.otherThings.social &&\n      (user.otherThings.social.twitter ? user.otherThings.social.twitter : ''),\n    facebook:\n      user.otherThings.social &&\n      (user.otherThings.social.facebook\n        ? user.otherThings.social.facebook\n        : ''),\n    instagram:\n      user.otherThings.social &&\n      (user.otherThings.social.instagram\n        ? user.otherThings.social.instagram\n        : ''),\n  });\n  const [website, setWebsite] = useImmer('');\n  const [company, setCompany] = useImmer('');\n\n  const onAddSkills = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.push(''));\n  };\n  const onSkillChange = (e) => {\n    console.log(e.target.id);\n    setSkills((draft) => {\n      draft[e.target.id] = e.target.value;\n    });\n  };\n  const onSkillDelete = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.splice(e.target.value, 1));\n  };\n\n  const onAddExp = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.push({\n        title: '',\n        company: '',\n        description: '',\n      });\n    });\n  };\n\n  const onExpChange = (e) => {\n    setExperiences((draft) => {\n      draft[e.target.id][e.target.name] = e.target.value;\n    });\n  };\n\n  const onExpDelete = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.splice(e.target.id, 1);\n    });\n  };\n\n  const onSocialChange = (e) => {\n    setSocials((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onWebsiteChange = (e) => {\n    setWebsite((draft) => e.target.value);\n  };\n\n  const onCompanyChange = (e) => {\n    setCompany((draft) => e.target.value);\n  };\n\n  const onNameChange = (e) => {\n    setName((draft) => e.target.value);\n  };\n  const onBioChange = (e) => {\n    setBio((draft) => e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const formData = {\n        name: name,\n        bio: bio,\n        skills: skills,\n        experiences: experiences,\n        socialmedias: socials,\n        website: website,\n        company: company,\n      };\n      console.log('Form Data: ', formData);\n      const submitForm = await axios.post(\n        '/api/users/pushprofiledata',\n        formData\n      );\n      console.log('Submitted Form: ', submitForm);\n      history.push(`/profile/${user.userid}`);\n    } catch (err) {\n      console.error('Error: ', err.response.data);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"First Name\"\n              name=\"name\"\n              value={name}\n              onChange={onNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Bio</label>\n            <TextArea\n              placeholder=\"Bio\"\n              name=\"bio\"\n              value={bio}\n              onChange={onBioChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Skill Sets</label>\n            <Button color=\"blue\" onClick={onAddSkills}>\n              Add\n            </Button>\n            {skills.map((skill, index) => (\n              <Fragment key={index}>\n                <Input\n                  label\n                  value={skill}\n                  id={index}\n                  key={index}\n                  onChange={onSkillChange}\n                >\n                  <Label>{index + 1}</Label>\n                  <input />\n                  <Button value={index} onClick={onSkillDelete}>\n                    Delete\n                  </Button>\n                </Input>\n                <br />\n                <br />\n              </Fragment>\n            ))}\n          </Form.Field>\n          <Form.Field>\n            <label>Experiences</label>\n            <Button color=\"blue\" onClick={onAddExp}>\n              Add\n            </Button>\n            <Item.Group style={{ textAlign: 'left' }}>\n              {experiences.map((experience, index) => (\n                <Fragment key={index}>\n                  {/* <Item>\n                    <Item.Content>\n                      <Item.Header>{experience.title}</Item.Header>\n                      <Item.Meta>{experience.company}</Item.Meta>\n                      <Item.Description>\n                        {experience.description}\n                      </Item.Description>\n                    </Item.Content>\n                 </Item>*/}\n                  <Header as=\"h3\">{index + 1}.</Header>\n                  <Input\n                    label\n                    value={experience.title}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"title\"\n                  >\n                    <Label>Title</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.company}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"company\"\n                  >\n                    <Label>Company</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.description}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"description\"\n                  >\n                    <Label>Description</Label>\n                    <input />\n                  </Input>\n                  <Button color=\"red\" fluid id={index} onClick={onExpDelete}>\n                    Delete\n                  </Button>\n                </Fragment>\n              ))}\n            </Item.Group>\n          </Form.Field>\n          <Form.Field>\n            <label>Socials</label>\n            <Input\n              label=\"youtube\"\n              placeholder=\"Youtube\"\n              name=\"youtube\"\n              onChange={onSocialChange}\n              value={socials.youtube}\n            />\n            <Input\n              label=\"twitter\"\n              placeholder=\"Twitter\"\n              name=\"twitter\"\n              onChange={onSocialChange}\n              value={socials.twitter}\n            />\n            <Input\n              label=\"facebook\"\n              placeholder=\"Facebook\"\n              name=\"facebook\"\n              onChange={onSocialChange}\n              value={socials.facebook}\n            />\n            <Input\n              label=\"instagram\"\n              placeholder=\"instagram\"\n              name=\"instagram\"\n              onChange={onSocialChange}\n              value={socials.instagram}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Website</label>\n            <input\n              placeholder=\"Website\"\n              value={website}\n              onChange={onWebsiteChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Company</label>\n            <input\n              placeholder=\"Company\"\n              value={company}\n              onChange={onCompanyChange}\n            />\n          </Form.Field>\n\n          <Button type=\"submit\" color=\"black\">\n            Submit\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nCreateEditProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(CreateEditProfile);\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Image,\n  Icon,\n  Table,\n  Item,\n  Input,\n  Label,\n  List,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst IntelligencePage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.recon = result.data.intelligenceDivision.recons;\n          draft.commando = result.data.intelligenceDivision.commandos;\n        });\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getUnits();\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const [tasksopen, setTasksOpen] = React.useState(false);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n  });\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [recon, setRecon] = useImmer(0);\n  const onChangeRecon = (e) => {\n    if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n      setRecon((draft) => e.target.value);\n    }\n  };\n  const [commando, setCommando] = useImmer(0);\n  const onChangeCommando = (e) => {\n    if (/^\\+?(0|[1-9]\\d*)$/.test(e.target.value)) {\n      setCommando((draft) => e.target.value);\n    }\n  };\n\n  const onSendRecon = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendrecons', {\n        recon,\n        target,\n      });\n      alert('ok');\n      setRecon((draft) => 0);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const onSendCommando = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendcommandos', {\n        commando,\n        target,\n      });\n      alert('ok');\n      setCommando((draft) => 0);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const onChangeTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n  const [intelTasks, setIntelTasks] = useImmer([]);\n  const onGetIntelTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getinteltasks');\n      setIntelTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [intel, setIntel] = useImmer([]);\n  const getIntels = async () => {\n    try {\n      const result = await axios.get('/api/actions/getintelreports');\n      console.log(result.data[0].intelligenceDivision.intels);\n      setIntel((draft) => result.data[0].intelligenceDivision.intels);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [saboTasks, setSaboTasks] = useImmer([]);\n  const onGetSaboTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getsabotagetasks');\n      setSaboTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [missions, setMissions] = useImmer([]);\n  const onGetMissions = async () => {\n    try {\n      const result = await axios.get('api/actions/getsabotagemissions');\n      setMissions((draft) => result.data[0].intelligenceDivision.sabotages);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const profileTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} onChange={onChangeTarget} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Recon</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.recon}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={recon}\n                  onChange={onChangeRecon}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSendRecon}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetIntelTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intelTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${task.target._id}`}>\n                          {task.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getIntels();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Intels gathered\n            </Button>\n          }\n        >\n          <Modal.Header>Intels gathered</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intel.map((info, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header as=\"h2\">{info.result}</Header>\n                      </Table.Cell>\n\n                      <Table.Cell>\n                        <List>\n                          <List.Item>\n                            <b>Intelligence Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Recons: {info.intelligenceDivision.recons}\n                              </List.Item>\n                              <List.Item>\n                                Commandos: {info.intelligenceDivision.commandos}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Infantry Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.infantryDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{' '}\n                                {info.infantryDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Air Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.airDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{info.airDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Sea Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.navalDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points: {info.navalDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        <Link to={`/profile/${info.target._id}`}>\n                          {info.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{info.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n  const battleTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commandos</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.commando}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={commando}\n                  onChange={onChangeCommando}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSendCommando}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetSaboTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {saboTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${task.target._id}`}>\n                          {task.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            onGetMissions();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Missions\n            </Button>\n          }\n        >\n          <Modal.Header>Missions</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {missions.map((mission, index) => (\n                    <Table.Row>\n                      <Table.Cell>\n                        <Header as=\"h2\" textAlign=\"center\">\n                          {mission.result}\n                        </Header>\n                      </Table.Cell>\n                      <Table.Cell>{mission.description}</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${mission.target._id}`}>\n                          {mission.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{mission.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 600 }}>\n          <Grid.Column>\n            <Button name=\"profile\" onClick={onTab}>\n              Recon\n            </Button>\n            <Button name=\"battle\" onClick={onTab}>\n              Sabotage\n            </Button>\n          </Grid.Column>\n          {tabs.profile && profileTab}\n          {tabs.battle && battleTab}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IntelligencePage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\n\nconst NewsPage = () => {\n  useEffect(() => {\n    const getLogs = async () => {\n      try {\n        const logs = await axios.get('/api/users/getnews');\n        console.log(logs.data.AnDLogs);\n        setUserLogs((draft) => logs.data.AnDLogs);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    getLogs();\n  }, []);\n  const [userLogs, setUserLogs] = useImmer([]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '750px' }}>\n        <Header as=\"h1\">News</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Type</Table.HeaderCell>\n              <Table.HeaderCell>Result</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {userLogs.map((log) => (\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.type}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.result}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>{log.description}</Table.Cell>\n                <Table.Cell>\n                  <Link to={`/profile/${log.from._id}`}>{log.from.name}</Link>\n                </Table.Cell>\n                <Table.Cell>{log.date}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          ))}\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewsPage;\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Header,\n  Dropdown,\n  Table,\n  Card,\n  Icon,\n  Image,\n  Button,\n} from 'semantic-ui-react';\n\nconst AskQuestions = () => {\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 650 }}>\n        <Header as=\"h1\">Ask Questions</Header>\n        <Fragment>\n          <Button color=\"blue\">Education</Button>\n          <Button color=\"brown\">Business</Button>\n          <Button color=\"red\">Relationship</Button>\n        </Fragment>\n        <Card.Group>\n          <Card href={`/askpage/ben`}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\n              wrapped\n              ui={false}\n            />\n            <Card.Content>\n              <Card.Header>Ben</Card.Header>\n              <Card.Description>Prof. at NUS</Card.Description>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AskQuestions;\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Dropdown,\n  Table,\n  Divider,\n  Image,\n  Segment,\n  Item,\n  Button,\n} from 'semantic-ui-react';\n\nconst JobListing = () => {\n  const countryOptions = [\n    { key: 'asf', value: 'acf', text: 'All' },\n    { key: 'af', value: 'af', text: 'Programming' },\n    { key: 'ax', value: 'ax', text: 'Business' },\n    { key: 'al', value: 'al', text: 'Design' },\n  ];\n  return (\n    <Segment style={{ marginLeft: '150px' }}>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n      >\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header>\n            -Job Listings Full Time/Part Time for students to choose.\n          </Header>\n          <Button color=\"red\">Full Time</Button>\n          <Button color=\"blue\">Part Time</Button>\n          <Item.Group style={{ overFlowY: 'scroll' }}>\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header>-Workshops</Header>\n          <Dropdown fluid selection options={countryOptions} />\n          <Item.Group style={{ overFlowY: 'scroll' }}>\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n      </Grid>\n      <Divider vertical>And</Divider>\n    </Segment>\n  );\n};\n\nexport default JobListing;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Form,\n  TextArea,\n  Button,\n  Comment,\n  Card,\n} from 'semantic-ui-react';\n\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst SpecificPage = ({ match }) => {\n  useEffect(() => {\n    const getQnA = async () => {\n      try {\n        const result = await axios.get(\n          `/api/ask/getQuestions/${match.params.name}`\n        );\n        setQuestions((draft) => result.data);\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getQnA();\n  }, []);\n  const [questions, setQuestions] = useImmer([]);\n  const [question, setQuestion] = useImmer('');\n\n  const onChange = (e) => {\n    setQuestion((draft) => e.target.value);\n  };\n  const onSubmit = async (e) => {\n    try {\n      const structure = {\n        question: question,\n        to: 'ben',\n      };\n      const res = await axios.post('/api/ask/sendQuestion', structure);\n      alert('Question submitted. Will be here when its replied.');\n      setQuestion((draft) => '');\n    } catch (err) {\n      console.log(err.response.data.msg);\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 650, float: 'left' }}>\n        <Header as=\"h1\">Ask {match.params.name} </Header>\n\n        <Form onSubmit={onSubmit}>\n          <TextArea\n            placeholder=\"What do you wanna ask?\"\n            value={question}\n            onChange={onChange}\n          />\n          <Button color=\"facebook\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Header sub>Will post them here when it is replied.</Header>\n        <Comment.Group>\n          <Header as=\"h3\" dividing>\n            QnA\n          </Header>\n          <Card.Group>\n            {questions.map((qns, index) => (\n              <Card fluid key={index}>\n                <Card.Content textAlign=\"left\">\n                  <Card.Header>\n                    {index + 1}. {qns.question}\n                  </Card.Header>\n                  <Card.Description>{qns.reply}</Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Comment.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default SpecificPage;\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Form,\n  TextArea,\n  Button,\n  Comment,\n  Card,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst Feedback = () => {\n  const [feedback, setFeedback] = useImmer('');\n  const onChange = (e) => {\n    setFeedback((draft) => e.target.value);\n  };\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/users/feedback', { feedback });\n\n      alert('Thank you.');\n      setFeedback((draft) => '');\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 650, float: 'left' }}>\n        <Header as=\"h2\">Feedback</Header>\n        <Form onSubmit={onSubmit}>\n          <TextArea\n            placeholder=\"Feedback\"\n            value={feedback}\n            onChange={onChange}\n          />\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Feedback;\n","import { LOGIN, INIT_USER, RESET_USER, SIGNUP } from '../actions/types';\nimport produce from 'immer';\n\nconst initialState = {\n  userid: '',\n  username: '',\n  email: '',\n  experiences: [],\n  otherThings: {},\n  isAuthenticated: false,\n};\n\nconst user = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case SIGNUP:\n      case INIT_USER:\n      case LOGIN:\n        draft.userid = action.payload._id;\n        draft.username = action.payload.name;\n        draft.email = action.payload.email;\n        draft.experiences = action.payload.experiences;\n        draft.otherThings = action.payload;\n        draft.isAuthenticated = true;\n        break;\n\n      case RESET_USER:\n        draft.userid = '';\n        draft.username = '';\n        draft.email = '';\n        draft.experiences = [];\n        draft.otherThings = {};\n        draft.isAuthenticated = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default user;\n","import produce from 'immer';\nimport { GETITEMS } from '../actions/types';\n\nconst initialState = { data: {}, isLoading: true };\n\nconst items = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case GETITEMS:\n        draft.data = action.payload[0];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default items;\n","import produce from 'immer';\nimport { ADDTASKS } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  isLoading: true,\n};\n\nconst tasks = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADDTASKS:\n        draft.tasks = [{ testing: 'tasking' }];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default tasks;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport items from './items';\nimport toDoList from './toDoList';\n\nconst allReducers = combineReducers({ user, items, toDoList });\n\nexport default allReducers;\n","import thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst lacreateStore = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default lacreateStore;\n","import React, { Fragment, useEffect } from 'react';\n\nimport { useImmer } from 'use-immer';\nimport ServerTime from '../ServerTime/ServerTime';\nimport axios from 'axios';\n\nimport { withRouter, Redirect, Link } from 'react-router-dom';\n\nimport {\n  Icon,\n  Menu,\n  Segment,\n  Sidebar,\n  Header,\n  Button,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst SideNav = ({ user, children, history }) => {\n  useEffect(() => {\n    const getMessagesNotRead = async () => {\n      try {\n        const msgs = await axios.get('/api/users/geturmessagescount');\n        setMessageCount((draft) => msgs.data);\n        const news = await axios.get('/api/users/geturnewscount');\n        setNewsCount((draft) => news.data);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n\n    getMessagesNotRead();\n  });\n  const [messageCount, setMessageCount] = useImmer(Number);\n  const [newsCount, setNewsCount] = useImmer(Number);\n  const [show, setShow] = useImmer(true);\n  const closeMenu = () => {\n    setShow((draft) => !draft);\n  };\n  return (\n    <Fragment>\n      {show ? (\n        <div\n          style={{\n            position: 'fixed',\n            zIndex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            width: '250px',\n            background: '#1B1C1D',\n            overflowX: 'hidden',\n            flex: 1,\n          }}\n        >\n          <div\n            style={{\n              flex: 1,\n              overflowY: 'auto',\n            }}\n          >\n            <Menu vertical inverted size=\"massive\">\n              <Menu.Item>\n                <Button onClick={closeMenu}>Close menu</Button>\n              </Menu.Item>\n              <Menu.Item>\n                <ServerTime />\n              </Menu.Item>\n              <Menu.Item>\n                <Menu.Menu>\n                  <Menu.Item\n                    name=\"Home\"\n                    onClick={() => {\n                      history.push('/homepage');\n                    }}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"My Profile\"\n                    onClick={() => {\n                      history.push(`/profile/${user.userid}`);\n                    }}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Explore Land\"\n                    onClick={() => {\n                      history.push('/explore', user);\n                    }}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name={'Messages' + (messageCount !== 0 ? messageCount : '')}\n                    onClick={() => history.push('/messages')}\n                    style={{\n                      fontSize: 'x-large',\n                      color: messageCount !== 0 && 'yellow',\n                    }}\n                  />\n                  <Menu.Item\n                    name={'My News' + (newsCount !== 0 ? newsCount : '')}\n                    onClick={() => history.push('/news')}\n                    style={{\n                      fontSize: 'x-large',\n                      color: newsCount !== 0 && 'yellow',\n                    }}\n                  />\n\n                  <Menu.Item\n                    name=\"Buildings\"\n                    onClick={() => history.push('/buildings')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Military\"\n                    onClick={() => history.push('/military')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Attack\"\n                    onClick={() => history.push('/attack')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Intelligence\"\n                    onClick={() => history.push('/intelligence')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Scoreboard\"\n                    onClick={() => history.push('/scoreboard')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Ask Questions\"\n                    onClick={() => history.push('/askquestions')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                  <Menu.Item\n                    name=\"Feedback\"\n                    onClick={() => history.push('/feedback')}\n                    style={{ fontSize: 'x-large' }}\n                  />\n                </Menu.Menu>\n              </Menu.Item>\n            </Menu>\n          </div>\n        </div>\n      ) : (\n        <Button onClick={closeMenu}>Show Menu</Button>\n      )}\n\n      {children}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(SideNav));\n","import React, { useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Grid, Header } from 'semantic-ui-react';\n\nimport LoginPage from './components/authPage/AuthPage';\nimport SignUp from './components/SignupPage/SignupPage';\nimport HomePage from './components/HomePage/HomePage';\nimport ControlPanel from './components/controlPanel/ControlPanel';\nimport ExploreLandPage from './components/GameUI/ExploreLand/ExploreLand';\nimport MyMessagesPage from './components/GameUI/MyMessages/MyMessages';\nimport BuildingsPage from './components/GameUI/Buildings/Buildings';\nimport MilitaryPage from './components/GameUI/Military/MilitaryPage';\nimport AttackPage from './components/GameUI/Attack/Attack';\nimport ScoreboardPage from './components/GameUI/Scoreboard/Scoreboard';\nimport ProfilePage from './components/GameUI/Profile/Profile';\nimport CreateEditProfilePage from './components/GameUI/Profile/CreateEditProfile';\nimport IntelligencePage from './components/GameUI/Intelligence/Intelligence';\nimport NewsPage from './components/GameUI/News/News';\nimport AskQuestions from './components/askQuestions/AskQuestions';\nimport JobListing from './components/jobListing/JobListing';\nimport AskPage from './components/askQuestions/SpecificPage';\nimport Feedback from './components/Feedback/Feedback';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport SideNav from './components/SideNav/SideNav';\n\nimport { initUser, resetUser } from './redux/actions/user';\n\nconst App = () => {\n  const [loadingStatus, setLoadingStatus] = useImmer({\n    done: false,\n    isAuth: false,\n  });\n\n  useEffect(() => {\n    if (window.innerWidth < 800) {\n      alert('Not mobile friendly. Please use PC !');\n    }\n    async function testingFunc() {\n      try {\n        const user = await axios.get('/api/auth/getuser');\n        console.log('user', user);\n        store.dispatch(initUser(user.data));\n      } catch (err) {\n        store.dispatch(resetUser());\n      }\n      setLoadingStatus((draft) => {\n        draft.done = true;\n        draft.isAuth = store.getState().user.isAuthenticated;\n      });\n    }\n    testingFunc();\n  }, [setLoadingStatus]);\n  return (\n    <Provider store={store}>\n      {loadingStatus.done ? (\n        <Fragment>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={LoginPage} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <SideNav>\n                <Route exact path=\"/homepage\" component={HomePage} />\n                <Route exact path=\"/control\" component={ControlPanel} />\n                <Route exact path=\"/explore\" component={ExploreLandPage} />\n                <Route exact path=\"/messages\" component={MyMessagesPage} />\n                <Route exact path=\"/buildings\" component={BuildingsPage} />\n                <Route exact path=\"/military\" component={MilitaryPage} />\n                <Route exact path=\"/attack\" component={AttackPage} />\n                <Route exact path=\"/attack/:userid\" component={AttackPage} />\n                <Route exact path=\"/scoreboard\" component={ScoreboardPage} />\n                <Route exact path=\"/profile/:userid\" component={ProfilePage} />\n                <Route\n                  exact\n                  path=\"/ceprofile\"\n                  component={CreateEditProfilePage}\n                />\n                <Route exact path=\"/news\" component={NewsPage} />\n                <Route\n                  exact\n                  path=\"/intelligence\"\n                  component={IntelligencePage}\n                />\n                <Route\n                  exact\n                  path=\"/intelligence/:userid\"\n                  component={IntelligencePage}\n                />\n                <Route exact path=\"/askquestions\" component={AskQuestions} />\n                <Route exact path=\"/askpage/:name\" component={AskPage} />\n                <Route exact path=\"/joblistings\" component={JobListing} />\n                <Route exact path=\"/feedback\" component={Feedback} />\n              </SideNav>\n            </Switch>\n          </Router>\n        </Fragment>\n      ) : (\n        <Grid\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          style={{ height: '100vh' }}\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h3\">Loading....</Header>\n          </Grid.Column>\n        </Grid>\n      )}\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}