{"version":3,"sources":["redux/actions/types.js","redux/actions/user.js","components/ServerTime/ServerTime.js","components/authPage/AuthPage.js","components/SignupPage/SignupPage.js","components/SideNav/SideOverview.js","components/HomePage/HomePage.js","components/controlPanel/ControlPanel.js","redux/actions/items.js","components/GameUI/ExploreLand/ExploreLand.js","components/GameUI/MyMessages/MyMessages.js","components/GameUI/Buildings/Buildings.js","components/GameUI/Military/MilitaryPage.js","components/GameUI/Attack/Attack.js","components/GameUI/Scoreboard/Scoreboard.js","components/GameUI/Profile/Profile.js","components/GameUI/Profile/CreateEditProfile.js","components/GameUI/Intelligence/Intelligence.js","components/GameUI/News/News.js","components/askQuestions/AskQuestions.js","components/jobListing/JobListing.js","components/askQuestions/SpecificPage.js","redux/reducers/user.js","redux/reducers/items.js","redux/reducers/toDoList.js","redux/reducers/index.js","redux/store.js","components/SideNav/SideNav.js","App.js","index.js"],"names":["LOGIN","INIT_USER","RESET_USER","SIGNUP","GETITEMS","ADDTASKS","initUser","data","dispatch","type","payload","resetUser","dateSetting","timezone","locale","format","localeString","DateTime","DATETIME_FULL_WITH_SECONDS","ServerTime","useImmer","serverTime","local","setZone","setLocale","toFormat","toLocaleString","setServerTime","serverID","serverTicker","isLoading","setServerTicker","done","serverDoneTicking","setServerDoneTicking","useEffect","interval","setInterval","draft","clearInterval","a","axios","get","serverTick","_id","tick","getServerTicker","plusServerTicker","Header","as","style","color","now","parseInt","tickerTimer","connect","state","user","loginUser","formData","history","post","res","push","alert","withRouter","email","password","setFormData","errors","formErrors","setFormErrors","onChange","e","target","name","value","Helmet","isAuthenticated","to","Grid","textAlign","height","verticalAlign","Column","maxWidth","Form","size","onSubmit","preventDefault","includes","Object","keys","length","checkForm","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","Button","Message","signup","response","msg","password2","validateForm","console","log","SideOverview","userDetails","position","display","flexDirection","top","bottom","right","width","background","overflowX","flex","overflowY","Menu","vertical","inverted","Item","otherThings","country","school","networth","land","money","population","food","nextIncrements","intelligenceDivision","recons","commandos","infantryDivision","attackPts","defencePts","airDivision","seaDivision","match","retrieveUser","getUser","error","retrievePosts","getPosts","setPosts","content","setPost","posts","postStructure","coverage","username","text","unshift","date","result","Row","columns","TextArea","Feed","map","postx","index","Event","Content","Summary","userID","Date","Extra","isAuth","userItems","items","getAllItemsByEmail","theItems","setTheItems","Card","Group","centered","item","itemName","Meta","quantity","Description","additionalNote","ExploreLand","React","useState","open","setOpen","location","setPopulation","sendingAmt","setSendingAmt","totalCost","setTotalCost","tasks","setTasks","getExploringTasks","retrievedTasks","JSON","stringify","onSend","structure","creation","amount","sendExplorer","label","onClick","Modal","onClose","onOpen","trigger","scrolling","Table","celled","padded","HeaderCell","Body","task","Cell","singleLine","doneInWhatTick","Actions","Icon","MyMessages","getMsg","setMessages","messages","setLoading","retrieveMsg","loading","from","Buildings","setBuildingQty","home","buildings","homes","moneyGenerator","intel","intelligenceCamp","armyCamp","infantryCamp","airField","navalBase","getBuildings","Number","buildingQty","intelDiv","setIntelDiv","setMoneyGenerator","setHomes","setArmyCamp","setAirField","setNavalBase","buildingTasks","setBuildingTasks","getBuildingTasks","MilitaryPage","setSpaces","setUnits","recon","commando","infanOne","infantry1","infanTwo","infantry2","infanThree","infantry3","infanFour","infantry4","airOne","air1","airTwo","air2","airThree","air3","airFour","air4","seaOne","sea1","seaTwo","sea2","seaThree","sea3","seaFour","sea4","getUnits","spaces","units","getMilitaryTasks","intelligenceDiv","infantryOne","infantryTwo","infantryThree","infantryFour","infantryDiv","setInfantryDiv","airDiv","setAirDiv","navalDiv","setNavalDiv","onChangeIntelDiv","onChangeInfanDiv","onChangeAirDiv","onChangeNavalDiv","availableSpace","AttackPage","getTasks","output","params","userid","setTarget","onInfantryChange","onAirChange","onNavalChange","totalPower","tPwer","tCost","infantryPower","entries","i","airPower","navalPower","sub","ScoreboardPage","users","setUsers","retrievedUsers","getUsers","userInfo","setUser","getUserInfo","profile","battle","tabs","setTabs","message","setMessage","onTab","onMessage","messageUser","divided","subheader","positive","bio","maxHeight","skillsets","skill","experiences","experience","title","company","description","current","battleStats","wins","losses","setName","setBio","skills","setSkills","setExperiences","youtube","social","twitter","facebook","instagram","socials","setSocials","website","setWebsite","setCompany","onSkillChange","id","onSkillDelete","splice","onExpChange","onExpDelete","onSocialChange","socialmedias","submitForm","Field","Label","IntelligencePage","tasksopen","setTasksOpen","setRecon","setCommando","onSendRecon","onSendCommando","intelTasks","setIntelTasks","onGetIntelTasks","setIntel","getIntels","intels","saboTasks","setSaboTasks","onGetSaboTasks","missions","setMissions","onGetMissions","sabotages","profileTab","forces","info","List","navalDivision","battleTab","mission","NewsPage","logs","AnDLogs","setUserLogs","getLogs","userLogs","AskQuestions","href","Image","src","wrapped","ui","JobListing","marginLeft","overFlowY","Dropdown","selection","options","key","Divider","SpecificPage","setQuestions","getQnA","questions","question","setQuestion","float","Comment","dividing","qns","reply","initialState","action","produce","testing","allReducers","combineReducers","toDoList","middleware","thunk","lacreateStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","children","msgs","setMessageCount","news","setNewsCount","getMessagesNotRead","messageCount","newsCount","zIndex","left","fontSize","App","loadingStatus","setLoadingStatus","store","getState","testingFunc","exact","path","component","LoginPage","SignUp","HomePage","ControlPanel","ExploreLandPage","MyMessagesPage","BuildingsPage","ProfilePage","CreateEditProfilePage","AskPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30ea08d8.chunk.js","sourcesContent":["//USER\nexport const LOGIN = 'LOGIN';\nexport const INIT_USER = 'INIT_USER';\nexport const RESET_USER = 'RESET_USER';\nexport const SIGNUP = 'SIGNUP';\n\n//ITEM\nexport const GETITEMS = 'GETITEMS';\n\n//ToDoList\nexport const ADDTASKS = 'ADDTASKS';\n","import axios from 'axios';\nimport { LOGIN, INIT_USER, RESET_USER, SIGNUP } from './types';\n\n//Login user\nexport const loginUser = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n\n    dispatch({\n      type: LOGIN,\n      payload: res.data,\n    });\n    //history.push('/admin/controlpanel');\n    history.push(`/homepage`);\n  } catch (err) {\n    alert('Invalid Account');\n  }\n};\n\n//Initialize User info when refreshed\nexport const initUser = (data) => (dispatch) => {\n  dispatch({\n    type: INIT_USER,\n    payload: data,\n  });\n};\n\n//Reset / Logout user\nexport const resetUser = () => (dispatch) => {\n  dispatch({\n    type: RESET_USER,\n  });\n};\n\n//Sign up user\nexport const signup = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: SIGNUP,\n      payload: res.data,\n    });\n    history.push(`/homepage`);\n  } catch (err) {\n    alert(err.response.data.msg);\n  }\n};\n","import React, { useEffect, Fragment } from 'react';\nimport { DateTime } from 'luxon';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\nimport { Header } from 'semantic-ui-react';\n\n/*\n    desc: Display server time and next tick duration and current server tick number\n*/\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'tt',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst ServerTime = () => {\n  const [serverTime, setServerTime] = useImmer({\n    serverTime: DateTime.local()\n      .setZone(dateSetting.timezone)\n      .setLocale(dateSetting.locale)\n      .toFormat(dateSetting.format)\n      .toLocaleString(dateSetting.localeString),\n  });\n  const [serverTicker, setServerTicker] = useImmer({\n    serverID: '',\n    serverTicker: '',\n    isLoading: true,\n  });\n  const [serverDoneTicking, setServerDoneTicking] = useImmer({\n    done: false,\n  });\n  useEffect(() => {\n    //isMountedRef.current = true;\n    const interval = setInterval(() => {\n      setServerTime((draft) => {\n        draft.serverTime = DateTime.local()\n          .setZone(dateSetting.timezone)\n          .setLocale(dateSetting.locale)\n          .toFormat(dateSetting.format)\n          .toLocaleString(dateSetting.localeString);\n      });\n    }, 1000);\n\n    return () => {\n      //isMountedRef.current = false;\n      clearInterval(interval);\n    };\n  }, [setServerTime]);\n\n  useEffect(() => {\n    const getServerTicker = async () => {\n      const serverTick = await axios.get('/api/controlpanel/getstick');\n      setServerTicker((draft) => {\n        draft.serverID = serverTick.data._id;\n        draft.serverTicker = serverTick.data.tick;\n        draft.isLoading = false;\n      });\n    };\n    getServerTicker();\n  }, [setServerTicker]);\n\n  const plusServerTicker = async () => {\n    if (!serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = true;\n      });\n      setServerTicker((draft) => {\n        draft.serverTicker = draft.serverTicker + 1;\n      });\n      //await axios.post('/api/controlpanel/plusstick', serverTicker);\n    }\n  };\n\n  const tickerTimer = () => {\n    const now = DateTime.local()\n      .setZone('Asia/Singapore')\n      .setLocale('en-US')\n      .toFormat('m');\n\n    if (now === '30' || now === '0') {\n      plusServerTicker();\n      return 30;\n    }\n    //0 > x < 60\n    if (parseInt(now) > 0 && parseInt(now) < 60 && serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = false;\n      });\n    }\n    if (parseInt(now) >= 0 && parseInt(now) < 30 && !serverDoneTicking.done) {\n      return 30 - parseInt(now);\n    }\n    // 30<x<60\n    if (parseInt(now) >= 30 && parseInt(now) < 60 && !serverDoneTicking.done) {\n      return 60 - parseInt(now);\n    }\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    plusServerTicker();\n  };\n  return (\n    <Fragment>\n      {serverTicker.isLoading ? null : (\n        <Header as=\"h4\" style={{ color: 'white' }}>\n          {serverTime.serverTime}\n          <br />\n          Next Tick In: [{tickerTimer()} mins]\n          {/*<h4>Server Tick: {serverTicker.serverTicker}</h4>*/}\n        </Header>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ServerTime;\n","import React, { Fragment } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/user';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { Helmet } from 'react-helmet';\n\nconst AuthPage = ({ loginUser, history, user }) => {\n  const [formData, setFormData] = useImmer({\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n\n    /*setFormData(\n      produce((draft) => {\n        draft[e.target.name] = e.target.value;\n      })\n    );*/\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const checkForm = () => {\n    const errors = {};\n    if (formData.email === '' || !formData.email.includes('@')) {\n      errors.email = 'Email field is invalid.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Password field is empty.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n    const isValid = checkForm();\n    if (isValid) {\n      loginUser(formData, history);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Login Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Grid\n          textAlign=\"center\"\n          style={{ height: '100vh' }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <ServerTime />\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={onSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={onChange}\n                />\n                {formErrors.errors.email}\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={onChange}\n                />\n                {formErrors.errors.password}\n\n                <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to=\"/signup\">Sign Up</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      ) : (\n        <Redirect to={`/homepage`} />\n      )}\n    </Fragment>\n  );\n};\n\nAuthPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(AuthPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { connect } from 'react-redux';\nimport { signup } from '../../redux/actions/user';\nimport { withRouter } from 'react-router-dom';\n\nconst SignupPage = ({ signup, history }) => {\n  const [formData, setFormData] = useImmer({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = async (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (formData.name === '') {\n      errors.name = 'Missing name.';\n    }\n    if (formData.email === '') {\n      errors.email = 'Missing email.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Missing password.';\n    }\n    if (formData.password.length < 6) {\n      errors.password = 'Password length must be 6 characters or more.';\n    }\n\n    if (formData.password2 === '') {\n      errors.password2 = 'Missing password.';\n    }\n    if (formData.password !== formData.password2) {\n      errors.password2 = 'Password does not match.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n\n    const isValid = validateForm();\n    if (isValid) {\n      console.log('FormData:', formData);\n      signup(formData, history);\n    } else {\n      console.log('Form incomplete');\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Signup\n        </Header>\n        <Form size=\"large\" onSubmit={onSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"wheelchair\"\n              iconPosition=\"left\"\n              placeholder=\"Name\"\n              name=\"name\"\n              onChange={onChange}\n            />\n            {formErrors.errors.name}\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              onChange={onChange}\n            />\n            {formErrors.errors.email}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Re-type password\"\n              type=\"password\"\n              name=\"password2\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password2}\n\n            <Button color=\"blue\" fluid size=\"large\" type=\"submit\">\n              Sign up\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nSignupPage.propTypes = {\n  signup: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { signup })(withRouter(SignupPage));\n","import React from 'react';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst SideOverview = ({ userDetails }) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        display: 'flex',\n        flexDirection: 'column',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        width: '250px',\n        background: '#1B1C1D',\n        overflowX: 'hidden',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n          overflowY: 'auto',\n        }}\n      >\n        <Menu vertical inverted>\n          <Menu.Item>\n            <Menu.Header>Your Territory</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>Country: {userDetails.otherThings.country}</Menu.Item>\n              <Menu.Item>School: {userDetails.otherThings.school}</Menu.Item>\n              <Menu.Item>\n                Networth: {userDetails.otherThings.networth}\n              </Menu.Item>\n              <Menu.Item>Land: {userDetails.otherThings.land}</Menu.Item>\n              <Menu.Item>Money: ${userDetails.otherThings.money}</Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.population}\n              </Menu.Item>\n              <Menu.Item>Food: {userDetails.otherThings.food}</Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Next Tick Increments</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Money: ${userDetails.otherThings.nextIncrements.money}\n              </Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.nextIncrements.population}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Menu.Header>Intelligence Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Reconnaissance:{' '}\n                {userDetails.otherThings.intelligenceDivision.recons}\n              </Menu.Item>\n              <Menu.Item>\n                Commandos:{' '}\n                {userDetails.otherThings.intelligenceDivision.commandos}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Infantry Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points:{' '}\n                {userDetails.otherThings.infantryDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points:{' '}\n                {userDetails.otherThings.infantryDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Menu.Header>Air Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.airDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.airDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sea Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.seaDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.seaDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nSideOverview.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n};\n\nexport default SideOverview;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport Overview from '../SideNav/SideOverview';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { initUser } from '../../redux/actions/user';\nimport {\n  Grid,\n  Feed,\n  Icon,\n  Form,\n  TextArea,\n  Button,\n  Header,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { DateTime } from 'luxon';\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'FF',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst HomePage = ({ user, initUser, match }) => {\n  useEffect(() => {\n    const retrieveUser = async () => {\n      try {\n        const getUser = await axios.get(`/api/auth/getuser`);\n        initUser(getUser.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    const retrievePosts = async () => {\n      try {\n        const getPosts = await axios.get('/api/post/getallposts');\n        setPosts((draft) => {\n          draft.content = getPosts.data;\n        });\n      } catch (err) {\n        console.log(err.response);\n      }\n    };\n    retrieveUser();\n    retrievePosts();\n  }, []);\n  const [post, setPost] = useImmer({ content: '' });\n  const [posts, setPosts] = useImmer({ content: [] });\n  const onChange = (e) => {\n    setPost((draft) => {\n      draft.content = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const postStructure = {\n        school: user.otherThings.school,\n        coverage: 'Singapore',\n        name: user.username,\n        text: post,\n      };\n      setPosts((draft) => {\n        draft.content.unshift({\n          date: DateTime.local()\n            .setZone(dateSetting.timezone)\n            .setLocale(dateSetting.locale)\n            .toFormat(dateSetting.format),\n          coverage: 'Singapore',\n          school: user.otherThings.school,\n          name: user.username,\n          text: post.content,\n        });\n      });\n      const result = await axios.post('/api/post/post', postStructure);\n      console.log(result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <div>\n          <Grid style={{ height: '100vh' }} textAlign=\"center\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <Fragment>\n                  <Header as=\"h1\" textAlign=\"left\">\n                    Welcome\n                  </Header>\n                  <Form onSubmit={onSubmit}>\n                    <TextArea\n                      placeholder=\"Tell us more\"\n                      name=\"post\"\n                      onChange={onChange}\n                    />\n\n                    {/*<Dropdown\n                      placeholder=\"Select Coverage\"\n                      selection\n                      options={[\n                        { key: 'school', value: 'NUS', text: 'School' },\n                        { key: 'country', value: 'Singapore', text: 'Country' },\n                        { key: 'global', value: 'Global', text: 'Global' },\n                      ]}\n                    />*/}\n                    <Button\n                      content=\"POST\"\n                      color=\"black\"\n                      size=\"large\"\n                      fluid\n                      type=\"submit\"\n                    />\n                  </Form>\n                  <Feed>\n                    {posts.content.map((postx, index) => (\n                      <Feed.Event key={index}>\n                        <Feed.Content>\n                          <Feed.Summary>\n                            <Link to={`/profile/${postx.userID}`}>\n                              {postx.name}\n                            </Link>\n                            <Feed.Date>{postx.school}</Feed.Date>\n                            <Feed.Date>{postx.date}</Feed.Date>\n                          </Feed.Summary>\n                          <Feed.Extra text>{postx.text}</Feed.Extra>\n                        </Feed.Content>\n                      </Feed.Event>\n                    ))}\n                  </Feed>\n                </Fragment>\n                <Overview userDetails={user} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nHomePage.propTypes = {\n  user: PropTypes.object.isRequired,\n  initUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { initUser })(HomePage);\n","import React, { Fragment, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { getAllItemsByEmail } from '../../redux/actions/items';\nimport { Card, Grid } from 'semantic-ui-react';\nconst ControlPanel = ({ isAuth, getAllItemsByEmail, userItems }) => {\n  const [theItems, setTheItems] = useImmer({\n    items: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    getAllItemsByEmail();\n  }, [getAllItemsByEmail]);\n\n  useEffect(() => {\n    if (!userItems.isLoading) {\n      setTheItems((draft) => {\n        draft.items = userItems.data.items;\n        draft.isLoading = false;\n      });\n    } else {\n      setTheItems((draft) => {\n        draft.items = [];\n        draft.isLoading = true;\n      });\n    }\n    // eslint-disable-next-line\n  }, [userItems.isLoading]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Helmet>\n          <title>Control Panel</title>\n        </Helmet>\n        {!isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Fragment>\n            <h1>ControlPanel</h1>\n            <ServerTime />\n            {theItems.isLoading ? (\n              <h3>Loading Items...</h3>\n            ) : (\n              <Fragment>\n                {theItems.items.length === 0 ? (\n                  <h3>No items....</h3>\n                ) : (\n                  <Card.Group centered={true}>\n                    {theItems.items.map((item) => (\n                      <Card key={item._id}>\n                        <Card.Content>\n                          <Card.Header>{item.itemName}</Card.Header>\n                          <Card.Meta>x{item.quantity}</Card.Meta>\n                          <Card.Description>\n                            {item.additionalNote}\n                          </Card.Description>\n                        </Card.Content>\n                      </Card>\n                    ))}\n                  </Card.Group>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nControlPanel.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getAllItemsByEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.user.isAuthenticated,\n  userItems: state.items,\n});\n\nexport default connect(mapStateToProps, { getAllItemsByEmail })(ControlPanel);\n","import axios from 'axios';\nimport { GETITEMS } from './types';\n\nexport const getAllItemsByEmail = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/items/getall');\n    dispatch({\n      type: GETITEMS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Error: ', err.response.data);\n  }\n};\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Input,\n  Modal,\n  Button,\n  Icon,\n  Table,\n  Item,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst ExploreLand = ({ history }) => {\n  const [open, setOpen] = React.useState(false);\n  const [population, setPopulation] = useImmer(\n    history.location.state.otherThings.population\n  );\n  const [sendingAmt, setSendingAmt] = useImmer(0);\n  const [totalCost, setTotalCost] = useImmer(0);\n  const [tasks, setTasks] = useImmer([]);\n\n  const EXPLORER_COST = 500;\n\n  const getExploringTasks = async () => {\n    try {\n      const retrievedTasks = await axios.get('/api/actions/getexploringtasks');\n      setTasks((draft) => retrievedTasks.data);\n    } catch (err) {\n      alert(JSON.stringify(err.response.data));\n    }\n  };\n  const onChange = (e) => {\n    setSendingAmt((draft) => e.target.value);\n    setTotalCost((draft) => e.target.value * EXPLORER_COST);\n  };\n\n  const onSend = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        creation: {\n          amount: sendingAmt,\n        },\n        totalCost: totalCost,\n      };\n      console.log('Data', sendingAmt);\n      const sendExplorer = await axios.post(\n        '/api/actions/sendexplorer',\n        structure\n      );\n      console.log(sendExplorer.data);\n      setSendingAmt((draft) => 0);\n      setPopulation((draft) => (draft -= sendingAmt));\n      alert('ok');\n    } catch (err) {\n      alert(JSON.stringify(err.response.data.msg));\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\">Explore Land</Header>\n          <>\n            <Header>Available Units: {population}</Header>\n            <Header>1 unit = $500</Header>\n          </>\n          <>\n            <Input\n              label=\"Amount:\"\n              value={sendingAmt}\n              onChange={onChange}\n              type=\"number\"\n            />\n            <Button color=\"black\" onClick={onSend}>\n              Send\n            </Button>\n          </>\n          <br />\n          <br />\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getExploringTasks();\n            }}\n            trigger={<Button color=\"black\">View On-going tasks</Button>}\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task) => (\n                      <Table.Row>\n                        <Table.Cell>\n                          <Header>\n                            {task.creation.amount} units (\n                            {task.creation.amount * 5} land)\n                          </Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Ticks\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default ExploreLand;\n","import React, { useEffect, Fragment } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nconst MyMessages = () => {\n  useEffect(() => {\n    const retrieveMsg = async () => {\n      try {\n        const getMsg = await axios.get('/api/users/messages');\n        setMessages((draft) => getMsg.data.messages);\n        setLoading((draft) => false);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    retrieveMsg();\n  }, []);\n  const [messages, setMessages] = useImmer([]);\n  const [loading, setLoading] = useImmer(true);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '650px' }}>\n        <Header as=\"h1\">Messages</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Content</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {!loading && (\n              <Fragment>\n                {messages.map((msg, index) => (\n                  <Table.Row key={index}>\n                    <Table.Cell>{msg.content}</Table.Cell>\n                    <Table.Cell>\n                      <Link to={`/profile/${msg.from._id}`}>\n                        {msg.from.name}\n                      </Link>\n                    </Table.Cell>\n\n                    <Table.Cell>{msg.date}</Table.Cell>\n                    <Table.Cell>\n                      <Button color=\"black\">Reply</Button>\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Fragment>\n            )}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MyMessages;\n","import React, { useEffect, Fragment } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst Buildings = () => {\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setBuildingQty((draft) => {\n          draft.home = result.data.buildings.homes.quantity;\n          draft.moneyGenerator = result.data.buildings.moneyGenerator.quantity;\n          draft.intel = result.data.buildings.intelligenceCamp.quantity;\n          draft.armyCamp = result.data.buildings.infantryCamp.quantity;\n          draft.airField = result.data.buildings.airField.quantity;\n          draft.navalBase = result.data.buildings.navalBase.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getBuildings();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [buildingQty, setBuildingQty] = useImmer({\n    home: Number,\n    moneyGenerator: Number,\n    intel: Number,\n    armyCamp: Number,\n    airField: Number,\n    navalBase: Number,\n  });\n  const [intelDiv, setIntelDiv] = useImmer(0);\n  const [moneyGenerator, setMoneyGenerator] = useImmer(0);\n  const [homes, setHomes] = useImmer(0);\n  const [armyCamp, setArmyCamp] = useImmer(0);\n  const [airField, setAirField] = useImmer(0);\n  const [navalBase, setNavalBase] = useImmer(0);\n  //const [foodBank, setFoodBank] = useImmer(0);\n  const [buildingTasks, setBuildingTasks] = useImmer([]);\n\n  const getBuildingTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getbuildingtasks');\n      console.log(result.data);\n      setBuildingTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'home') {\n      setHomes((draft) => e.target.value);\n    }\n    if (e.target.name === 'money') {\n      setMoneyGenerator((draft) => e.target.value);\n    }\n    if (e.target.name === 'armyCamp') {\n      setArmyCamp((draft) => e.target.value);\n    }\n    if (e.target.name === 'airField') {\n      setAirField((draft) => e.target.value);\n    }\n    if (e.target.name === 'navalBase') {\n      setNavalBase((draft) => e.target.value);\n    }\n    if (e.target.name === 'intelDiv') {\n      setIntelDiv((draft) => e.target.value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        homes,\n        moneyGenerator,\n        intelDiv,\n        armyCamp,\n        airField,\n        navalBase,\n      };\n      const res = await axios.post('/api/actions/buildbuildings', structure);\n      console.log(res.data);\n      setHomes((draft) => 0);\n      setMoneyGenerator((draft) => 0);\n      setIntelDiv((draft) => 0);\n      setArmyCamp((draft) => 0);\n      setAirField((draft) => 0);\n      setNavalBase((draft) => 0);\n      alert('ok');\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Fragment>\n          <Header>Non-Military</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Building</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n                <Table.HeaderCell>Networth per unit</Table.HeaderCell>\n                <Table.HeaderCell>Amount Generated per unit</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Home</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>50 population</Table.Cell>\n                <Table.Cell>{buildingQty.home}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"home\"\n                    value={homes}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Money Generator</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>$1000</Table.Cell>\n                <Table.Cell>{buildingQty.moneyGenerator}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"money\"\n                    value={moneyGenerator}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Fragment>\n        <Fragment>\n          <Header>Military</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Building</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Extra Space per unit</Table.HeaderCell>\n                <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n                <Table.HeaderCell>Networth per unit</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Intelligence Dept</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.intel}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"intelDiv\"\n                    value={intelDiv}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Army Camp</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.armyCamp}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"armyCamp\"\n                    value={armyCamp}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air Field</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.airField}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airField\"\n                    value={airField}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Naval Base</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$500</Table.Cell>\n                <Table.Cell singleLine>5</Table.Cell>\n                <Table.Cell singleLine>10</Table.Cell>\n                <Table.Cell singleLine>100</Table.Cell>\n                <Table.Cell>{buildingQty.navalBase}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"navalBase\"\n                    value={navalBase}\n                    onChange={onChange}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              {/* <Table.Row>\n              <Table.Cell>\n                <Header>Food Bank</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"foodBank\"\n                  value={foodBank}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n           </Table.Row>*/}\n            </Table.Body>\n          </Table>\n        </Fragment>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getBuildingTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {buildingTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Buildings;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst MilitaryPage = () => {\n  useEffect(() => {\n    const getUnits = async () => {\n      const result = await axios.get('/api/users/getmyself');\n      setSpaces((draft) => result.data.buildings);\n      setUnits((draft) => {\n        draft.recon = result.data.intelligenceDivision.recons;\n        draft.commando = result.data.intelligenceDivision.commandos;\n        draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n        draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n        draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n        draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n        draft.airOne = result.data.airDivision.air1.quantity;\n        draft.airTwo = result.data.airDivision.air2.quantity;\n        draft.airThree = result.data.airDivision.air3.quantity;\n        draft.airFour = result.data.airDivision.air4.quantity;\n        draft.seaOne = result.data.seaDivision.sea1.quantity;\n        draft.seaTwo = result.data.seaDivision.sea2.quantity;\n        draft.seaThree = result.data.seaDivision.sea3.quantity;\n        draft.seaFour = result.data.seaDivision.sea4.quantity;\n      });\n      setLoading((draft) => false);\n    };\n    getUnits();\n  }, []);\n  const [loading, setLoading] = useImmer(true);\n  const [spaces, setSpaces] = useImmer({});\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const getMilitaryTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getmilitarytasks');\n      console.log(result.data);\n      setTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  const [tasks, setTasks] = useImmer([]);\n\n  const [intelligenceDiv, setIntelDiv] = useImmer({\n    recon: 0,\n    commando: 0,\n  });\n\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onChangeIntelDiv = (e) => {\n    setIntelDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeInfanDiv = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeAirDiv = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeNavalDiv = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const res = await axios.post('/api/actions/createmilitary', {\n        intelligenceDiv,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      });\n\n      console.log(res.data);\n      alert('ok');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      style={{ height: '100vh' }}\n      columns={3}\n    >\n      {loading ? (\n        <Header>Loading...</Header>\n      ) : (\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header as=\"h3\">MilitaryPage</Header>\n          <Header>Intelligence Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Reconn</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>\n                  {spaces.intelligenceCamp.availableSpace}\n                </Table.Cell>\n                <Table.Cell>{units.recon}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"recon\"\n                    value={intelligenceDiv.recon}\n                    onChange={onChangeIntelDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Commando</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>\n                  {spaces.intelligenceCamp.availableSpace}\n                </Table.Cell>\n                <Table.Cell>{units.commando}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"commando\"\n                    value={intelligenceDiv.commando}\n                    onChange={onChangeIntelDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Infantry Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryOne\"\n                    value={infantryDiv.infantryOne}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryTwo\"\n                    value={infantryDiv.infantryTwo}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryThree\"\n                    value={infantryDiv.infantryThree}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Infantry 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.infantryCamp.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.infanFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"infantryFour\"\n                    value={infantryDiv.infantryFour}\n                    onChange={onChangeInfanDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Air Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airOne\"\n                    value={airDiv.airOne}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airTwo\"\n                    value={airDiv.airTwo}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airThree\"\n                    value={airDiv.airThree}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Air 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.airField.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.airFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"airFour\"\n                    value={airDiv.airFour}\n                    onChange={onChangeAirDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Header>Naval Division</Header>\n          <Table celled padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Description</Table.HeaderCell>\n\n                <Table.HeaderCell>Cost</Table.HeaderCell>\n                <Table.HeaderCell>Space Cost</Table.HeaderCell>\n                <Table.HeaderCell>Available Space</Table.HeaderCell>\n                <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n                <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n                <Table.HeaderCell>You have</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 1</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$100</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>10</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaOne}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaOne\"\n                    value={navalDiv.seaOne}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 2</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$200</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>20</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaTwo}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaTwo\"\n                    value={navalDiv.seaTwo}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 3</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$300</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>30</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaThree}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaThree\"\n                    value={navalDiv.seaThree}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <Header>Sea 4</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>$400</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>{spaces.navalBase.availableSpace}</Table.Cell>\n                <Table.Cell>40</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n\n                <Table.Cell>{units.seaFour}</Table.Cell>\n                <Table.Cell>\n                  <Input\n                    placeholder=\"Amount...\"\n                    name=\"seaFour\"\n                    value={navalDiv.seaFour}\n                    onChange={onChangeNavalDiv}\n                    type=\"number\"\n                  />\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n          <Button color=\"black\" fluid onClick={onSubmit}>\n            Build\n          </Button>\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getMilitaryTasks();\n            }}\n            trigger={\n              <Button color=\"red\" fluid>\n                View On-going tasks\n              </Button>\n            }\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Building</Table.HeaderCell>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task, index) => (\n                      <Table.Row key={index}>\n                        <Table.Cell>\n                          <Header>{task.creation.name}</Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.creation.amount}{' '}\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Tick\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      )}\n    </Grid>\n  );\n};\n\nexport default MilitaryPage;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst AttackPage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n          draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n          draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n          draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n          draft.airOne = result.data.airDivision.air1.quantity;\n          draft.airTwo = result.data.airDivision.air2.quantity;\n          draft.airThree = result.data.airDivision.air3.quantity;\n          draft.airFour = result.data.airDivision.air4.quantity;\n          draft.seaOne = result.data.seaDivision.sea1.quantity;\n          draft.seaTwo = result.data.seaDivision.sea2.quantity;\n          draft.seaThree = result.data.seaDivision.sea3.quantity;\n          draft.seaFour = result.data.seaDivision.sea4.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getUnits();\n  }, []);\n\n  const getTasks = async () => {\n    try {\n      const output = await axios.get('/api/actions/getattacktasks');\n      setTasks((draft) => output.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [open, setOpen] = React.useState(false);\n  const [tasks, setTasks] = useImmer([]);\n\n  const [units, setUnits] = useImmer({\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n\n  const onInfantryChange = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onAirChange = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onNavalChange = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        target,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      };\n      const result = await axios.post('/api/actions/attack', structure);\n      alert(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const totalPower = () => {\n    let tPwer = 0;\n    let tCost = 0;\n    const infantryPower = Object.entries(infantryDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += infantryPower[i][1] * 10;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += infantryPower[i][1] * 20;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += infantryPower[i][1] * 30;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += infantryPower[i][1] * 40;\n        tCost += infantryPower[i][1] * 500;\n      }\n    }\n    const airPower = Object.entries(airDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += airPower[i][1] * 10;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += airPower[i][1] * 20;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += airPower[i][1] * 30;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += airPower[i][1] * 40;\n        tCost += airPower[i][1] * 500;\n      }\n    }\n    const navalPower = Object.entries(navalDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += navalPower[i][1] * 10;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += navalPower[i][1] * 20;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += navalPower[i][1] * 30;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += navalPower[i][1] * 40;\n        tCost += navalPower[i][1] * 500;\n      }\n    }\n    return { tPwer, tCost };\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Attack Page</Header>\n        <Input\n          label=\"Target\"\n          value={target}\n          name=\"target\"\n          onChange={onTarget}\n        />\n        <Header sub>\n          If attack is successful => You will take 5% of target's land but lose\n          1% of dispatched units. Target loses 5% of land and military.\n        </Header>\n        <Header sub>\n          If attack is unsuccessful => You will lose 5% of dispatched units.\n          Target loses 1% military.\n        </Header>\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryOne}\n                  name=\"infantryOne\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryTwo}\n                  name=\"infantryTwo\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryThree}\n                  name=\"infantryThree\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryFour}\n                  name=\"infantryFour\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        {/*<Header>Armoured Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        \n        */}\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airOne}\n                  name=\"airOne\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airTwo}\n                  name=\"airTwo\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airThree}\n                  name=\"airThree\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airFour}\n                  name=\"airFour\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaOne}\n                  name=\"seaOne\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaTwo}\n                  name=\"seaTwo\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaThree}\n                  name=\"seaThree\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaFour}\n                  name=\"seaFour\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Attack Points: {totalPower().tPwer}</Header>\n        <Header>Total Cost:${totalPower().tCost}</Header>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Attack\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Total Attack Power</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.totalPower}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{task.target.name}</Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AttackPage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Dropdown, Table } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ScoreboardPage = () => {\n  const [users, setUsers] = useImmer([]);\n  useEffect(() => {\n    const getUsers = async () => {\n      const retrievedUsers = await axios.get('/api/users/getusers');\n      setUsers((draft) => retrievedUsers.data);\n    };\n    getUsers();\n  }, []);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">ScoreboardPage</Header>\n        {/* <Dropdown\n          placeholder=\"Select Coverage\"\n          selection\n          options={[\n            { key: 'school', value: 'NUS', text: 'School' },\n            { key: 'country', value: 'Singapore', text: 'Country' },\n            { key: 'global', value: 'Global', text: 'Global' },\n          ]}\n        />*/}\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Rank</Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>School</Table.HeaderCell>\n              <Table.HeaderCell>Country</Table.HeaderCell>\n              <Table.HeaderCell>Networth</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {users.map((user, index) => (\n              <Table.Row key={index}>\n                <Table.Cell>{index + 1}</Table.Cell>\n                <Table.Cell>\n                  <Header sub>\n                    <Link to={`/profile/${user._id}`}>{user.name}</Link>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.school}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.country}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.networth}</Header>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ScoreboardPage;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Icon,\n  Table,\n  Item,\n  TextArea,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ProfilePage = ({ userID, match, history }) => {\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const userInfo = await axios.get(\n          `/api/users/getuser/${match.params.userid}`\n        );\n        console.log(userInfo.data);\n        setUser((draft) => userInfo.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n      setLoading((draft) => false);\n    };\n    getUserInfo();\n  }, []);\n  const [user, setUser] = useImmer({});\n  const [loading, setLoading] = useImmer(true);\n  const [open, setOpen] = React.useState(false);\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [message, setMessage] = useImmer('');\n  const goCreateProfile = (e) => {\n    e.preventDefault();\n    history.push('/ceprofile');\n  };\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  const onMessageChange = (e) => {\n    setMessage((draft) => e.target.value);\n  };\n  const onMessage = async (e) => {\n    try {\n      e.preventDefault();\n      const messageUser = await axios.post(\n        `/api/users/messageUser/${user._id}`,\n        { content: message }\n      );\n      console.log(messageUser.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={3}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 850 }}>\n          {loading ? (\n            <Header>Loading...</Header>\n          ) : (\n            <Fragment>\n              <Grid.Column>\n                <Button name=\"profile\" onClick={onTab}>\n                  Profile\n                </Button>\n                <Button name=\"battle\" onClick={onTab}>\n                  Battle Stats\n                </Button>\n              </Grid.Column>\n              {tabs.profile && (\n                <>\n                  <Grid.Column>\n                    <Header as=\"h4\">Name: {user.name}</Header>\n                    <Header as=\"h4\">Current School: {user.school}</Header>\n                    <Header as=\"h4\">Country: {user.country}</Header>\n                    {userID === user._id ? (\n                      <Button color=\"black\" onClick={goCreateProfile}>\n                        Create/Edit Profile\n                      </Button>\n                    ) : (\n                      <>\n                        <Modal\n                          onClose={() => setOpen(false)}\n                          onOpen={() => setOpen(true)}\n                          open={open}\n                          trigger={<Button color=\"black\">Message</Button>}\n                        >\n                          <Modal.Header>Message</Modal.Header>\n                          <Modal.Content>\n                            <Modal.Description>\n                              <Header subheader>To: {user.name}</Header>\n                              <TextArea\n                                style={{ width: '100%' }}\n                                onChange={onMessageChange}\n                                value={message}\n                              />\n                            </Modal.Description>\n                          </Modal.Content>\n                          <Modal.Actions>\n                            <Button\n                              color=\"black\"\n                              onClick={() => setOpen(false)}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              content=\"Send\"\n                              onClick={(e) => {\n                                setOpen(false);\n                                onMessage(e);\n                              }}\n                              positive\n                            />\n                          </Modal.Actions>\n                        </Modal>\n                      </>\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Header as=\"h2\">Bio</Header>\n                    {user.bio === '' || !user.bio ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Bio</Header>\n                      </div>\n                    ) : (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header as=\"h4\">{user.bio}</Header>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Skill sets</Header>\n                    {user.skillsets.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Skills Sets</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.skillsets.map((skill, index) => (\n                            <Item key={index}>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}.{skill}\n                                </Item.Header>\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Experiences</Header>\n                    {user.experiences.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No experiences</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.experiences.map((experience, index) => (\n                            <Item>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}. {experience.title}\n                                </Item.Header>\n                                <Item.Meta>{experience.company}</Item.Meta>\n                                <Item.Description>\n                                  {experience.description}\n                                </Item.Description>\n                                {experience.current ? (\n                                  <Item.Extra>{experience.from}</Item.Extra>\n                                ) : (\n                                  <Item.Extra>1999/10/19 - now</Item.Extra>\n                                )}\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                  </Grid.Column>\n                </>\n              )}\n              {tabs.battle && (\n                <Grid.Column>\n                  <Header as=\"h4\">Networth: {user.networth}</Header>\n                  <Header as=\"h4\">\n                    Wins / Losses: {user.battleStats.wins}/\n                    {user.battleStats.losses}\n                  </Header>\n                  {match.params.userid !== user.userid && (\n                    <Fragment>\n                      {userID !== user._id && (\n                        <>\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(`/attack/${match.params.userid}`);\n                            }}\n                          >\n                            Attack\n                          </Button>\n                          <br />\n                          <br />\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(\n                                `/intelligence/${match.params.userid}`\n                              );\n                            }}\n                          >\n                            Gather Intelligence\n                          </Button>\n                          <br />\n                          <br />\n                        </>\n                      )}\n                    </Fragment>\n                  )}\n\n                  <Modal\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    trigger={<Button color=\"black\">Recent Battles</Button>}\n                  >\n                    <Modal.Header>Recent Battles</Modal.Header>\n                    <Modal.Content scrolling>\n                      <Modal.Description>\n                        <Table celled padded>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>Type</Table.HeaderCell>\n                              <Table.HeaderCell>Result</Table.HeaderCell>\n                              <Table.HeaderCell>Description</Table.HeaderCell>\n                              <Table.HeaderCell>Date</Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Header>Attack</Header>\n                              </Table.Cell>\n                              <Table.Cell>Lost</Table.Cell>\n                              <Table.Cell>\n                                <Table.Cell>\n                                  Target: username(clickable).\n                                  <br /> 5000 land gained.\n                                  <br /> Destroyed 500 units.\n                                  <br /> Lost 50 units.\n                                </Table.Cell>\n                              </Table.Cell>\n                              <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                      <Button onClick={() => setOpen(false)} color=\"black\">\n                        Close <Icon name=\"close\" />\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </Grid.Column>\n              )}\n            </Fragment>\n          )}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userID: state.user.userid,\n});\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Label,\n  TextArea,\n  Item,\n  Card,\n  Header,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst CreateEditProfile = ({ user, history }) => {\n  const [name, setName] = useImmer(user.username ? user.username : '');\n  const [bio, setBio] = useImmer(\n    user.otherThings.bio ? user.otherThings.bio : ''\n  );\n  //const [skills, setSkills] = useImmer([]);\n  const [skills, setSkills] = useImmer(\n    user.otherThings.skillsets ? user.otherThings.skillsets : []\n  );\n  //const [experiences, setExperiences] = useImmer([]);\n  const [experiences, setExperiences] = useImmer(\n    user.otherThings.experiences ? user.otherThings.experiences : []\n  );\n  /*const [socials, setSocials] = useImmer({\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n  });*/\n  const [socials, setSocials] = useImmer({\n    youtube:\n      user.otherThings.social &&\n      (user.otherThings.social.youtube ? user.otherThings.social.youtube : ''),\n    twitter:\n      user.otherThings.social &&\n      (user.otherThings.social.twitter ? user.otherThings.social.twitter : ''),\n    facebook:\n      user.otherThings.social &&\n      (user.otherThings.social.facebook\n        ? user.otherThings.social.facebook\n        : ''),\n    instagram:\n      user.otherThings.social &&\n      (user.otherThings.social.instagram\n        ? user.otherThings.social.instagram\n        : ''),\n  });\n  const [website, setWebsite] = useImmer('');\n  const [company, setCompany] = useImmer('');\n\n  const onAddSkills = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.push(''));\n  };\n  const onSkillChange = (e) => {\n    console.log(e.target.id);\n    setSkills((draft) => {\n      draft[e.target.id] = e.target.value;\n    });\n  };\n  const onSkillDelete = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.splice(e.target.value, 1));\n  };\n\n  const onAddExp = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.push({\n        title: '',\n        company: '',\n        description: '',\n      });\n    });\n  };\n\n  const onExpChange = (e) => {\n    setExperiences((draft) => {\n      draft[e.target.id][e.target.name] = e.target.value;\n    });\n  };\n\n  const onExpDelete = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.splice(e.target.id, 1);\n    });\n  };\n\n  const onSocialChange = (e) => {\n    setSocials((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onWebsiteChange = (e) => {\n    setWebsite((draft) => e.target.value);\n  };\n\n  const onCompanyChange = (e) => {\n    setCompany((draft) => e.target.value);\n  };\n\n  const onNameChange = (e) => {\n    setName((draft) => e.target.value);\n  };\n  const onBioChange = (e) => {\n    setBio((draft) => e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const formData = {\n        name: name,\n        bio: bio,\n        skills: skills,\n        experiences: experiences,\n        socialmedias: socials,\n        website: website,\n        company: company,\n      };\n      console.log('Form Data: ', formData);\n      const submitForm = await axios.post(\n        '/api/users/pushprofiledata',\n        formData\n      );\n      console.log('Submitted Form: ', submitForm);\n      history.push(`/profile/${user.userid}`);\n    } catch (err) {\n      console.error('Error: ', err.response.data);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"First Name\"\n              name=\"name\"\n              value={name}\n              onChange={onNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Bio</label>\n            <TextArea\n              placeholder=\"Bio\"\n              name=\"bio\"\n              value={bio}\n              onChange={onBioChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Skill Sets</label>\n            <Button color=\"blue\" onClick={onAddSkills}>\n              Add\n            </Button>\n            {skills.map((skill, index) => (\n              <Fragment key={index}>\n                <Input\n                  label\n                  value={skill}\n                  id={index}\n                  key={index}\n                  onChange={onSkillChange}\n                >\n                  <Label>{index + 1}</Label>\n                  <input />\n                  <Button value={index} onClick={onSkillDelete}>\n                    Delete\n                  </Button>\n                </Input>\n                <br />\n                <br />\n              </Fragment>\n            ))}\n          </Form.Field>\n          <Form.Field>\n            <label>Experiences</label>\n            <Button color=\"blue\" onClick={onAddExp}>\n              Add\n            </Button>\n            <Item.Group style={{ textAlign: 'left' }}>\n              {experiences.map((experience, index) => (\n                <Fragment key={index}>\n                  {/* <Item>\n                    <Item.Content>\n                      <Item.Header>{experience.title}</Item.Header>\n                      <Item.Meta>{experience.company}</Item.Meta>\n                      <Item.Description>\n                        {experience.description}\n                      </Item.Description>\n                    </Item.Content>\n                 </Item>*/}\n                  <Header as=\"h3\">{index + 1}.</Header>\n                  <Input\n                    label\n                    value={experience.title}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"title\"\n                  >\n                    <Label>Title</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.company}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"company\"\n                  >\n                    <Label>Company</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.description}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"description\"\n                  >\n                    <Label>Description</Label>\n                    <input />\n                  </Input>\n                  <Button color=\"red\" fluid id={index} onClick={onExpDelete}>\n                    Delete\n                  </Button>\n                </Fragment>\n              ))}\n            </Item.Group>\n          </Form.Field>\n          <Form.Field>\n            <label>Socials</label>\n            <Input\n              label=\"youtube\"\n              placeholder=\"Youtube\"\n              name=\"youtube\"\n              onChange={onSocialChange}\n              value={socials.youtube}\n            />\n            <Input\n              label=\"twitter\"\n              placeholder=\"Twitter\"\n              name=\"twitter\"\n              onChange={onSocialChange}\n              value={socials.twitter}\n            />\n            <Input\n              label=\"facebook\"\n              placeholder=\"Facebook\"\n              name=\"facebook\"\n              onChange={onSocialChange}\n              value={socials.facebook}\n            />\n            <Input\n              label=\"instagram\"\n              placeholder=\"instagram\"\n              name=\"instagram\"\n              onChange={onSocialChange}\n              value={socials.instagram}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Website</label>\n            <input\n              placeholder=\"Website\"\n              value={website}\n              onChange={onWebsiteChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Company</label>\n            <input\n              placeholder=\"Company\"\n              value={company}\n              onChange={onCompanyChange}\n            />\n          </Form.Field>\n\n          <Button type=\"submit\" color=\"black\">\n            Submit\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nCreateEditProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(CreateEditProfile);\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Image,\n  Icon,\n  Table,\n  Item,\n  Input,\n  Label,\n  List,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst IntelligencePage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.recon = result.data.intelligenceDivision.recons;\n          draft.commando = result.data.intelligenceDivision.commandos;\n        });\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getUnits();\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const [tasksopen, setTasksOpen] = React.useState(false);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n  });\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [recon, setRecon] = useImmer(0);\n  const onChangeRecon = (e) => {\n    setRecon((draft) => e.target.value);\n  };\n  const [commando, setCommando] = useImmer(0);\n  const onChangeCommando = (e) => {\n    setCommando((draft) => e.target.value);\n  };\n\n  const onSendRecon = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendrecons', {\n        recon,\n        target,\n      });\n      console.log(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n  const onSendCommando = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendcommandos', {\n        commando,\n        target,\n      });\n      alert(result.data);\n      console.log('commando ', commando);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const onChangeTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n  const [intelTasks, setIntelTasks] = useImmer([]);\n  const onGetIntelTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getinteltasks');\n      setIntelTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [intel, setIntel] = useImmer([]);\n  const getIntels = async () => {\n    try {\n      const result = await axios.get('/api/actions/getintelreports');\n      console.log(result.data[0].intelligenceDivision.intels);\n      setIntel((draft) => result.data[0].intelligenceDivision.intels);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [saboTasks, setSaboTasks] = useImmer([]);\n  const onGetSaboTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getsabotagetasks');\n      setSaboTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [missions, setMissions] = useImmer([]);\n  const onGetMissions = async () => {\n    try {\n      const result = await axios.get('api/actions/getsabotagemissions');\n      setMissions((draft) => result.data[0].intelligenceDivision.sabotages);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const profileTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} onChange={onChangeTarget} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Recon</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.recon}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={recon}\n                  onChange={onChangeRecon}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSendRecon}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetIntelTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intelTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${task.target._id}`}>\n                          {task.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getIntels();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Intels gathered\n            </Button>\n          }\n        >\n          <Modal.Header>Intels gathered</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intel.map((info, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header as=\"h2\">{info.result}</Header>\n                      </Table.Cell>\n\n                      <Table.Cell>\n                        <List>\n                          <List.Item>\n                            <b>Intelligence Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Recons: {info.intelligenceDivision.recons}\n                              </List.Item>\n                              <List.Item>\n                                Commandos: {info.intelligenceDivision.commandos}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Infantry Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.infantryDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{' '}\n                                {info.infantryDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Air Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.airDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{info.airDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Sea Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.navalDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points: {info.navalDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        <Link to={`/profile/${info.target._id}`}>\n                          {info.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{info.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n  const battleTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commandos</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.commando}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={commando}\n                  onChange={onChangeCommando}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSendCommando}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetSaboTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {saboTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${task.target._id}`}>\n                          {task.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            onGetMissions();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Missions\n            </Button>\n          }\n        >\n          <Modal.Header>Missions</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {missions.map((mission, index) => (\n                    <Table.Row>\n                      <Table.Cell>\n                        <Header as=\"h2\" textAlign=\"center\">\n                          {mission.result}\n                        </Header>\n                      </Table.Cell>\n                      <Table.Cell>{mission.description}</Table.Cell>\n                      <Table.Cell>\n                        <Link to={`/profile/${mission.target._id}`}>\n                          {mission.target.name}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{mission.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 600 }}>\n          <Grid.Column>\n            <Button name=\"profile\" onClick={onTab}>\n              Recon\n            </Button>\n            <Button name=\"battle\" onClick={onTab}>\n              Sabotage\n            </Button>\n          </Grid.Column>\n          {tabs.profile && profileTab}\n          {tabs.battle && battleTab}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IntelligencePage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\n\nconst NewsPage = () => {\n  useEffect(() => {\n    const getLogs = async () => {\n      try {\n        const logs = await axios.get('/api/users/getnews');\n        console.log(logs.data.AnDLogs);\n        setUserLogs((draft) => logs.data.AnDLogs);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    getLogs();\n  }, []);\n  const [userLogs, setUserLogs] = useImmer([]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '750px' }}>\n        <Header as=\"h1\">News</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Type</Table.HeaderCell>\n              <Table.HeaderCell>Result</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {userLogs.map((log) => (\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.type}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.result}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>{log.description}</Table.Cell>\n                <Table.Cell>\n                  <Link to={`/profile/${log.from._id}`}>{log.from.name}</Link>\n                </Table.Cell>\n                <Table.Cell>{log.date}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          ))}\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewsPage;\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Header,\n  Dropdown,\n  Table,\n  Card,\n  Icon,\n  Image,\n  Button,\n} from 'semantic-ui-react';\n\nconst AskQuestions = () => {\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 650 }}>\n        <Header as=\"h1\">Ask Questions</Header>\n        <Fragment>\n          <Button color=\"blue\">Education</Button>\n          <Button color=\"brown\">Business</Button>\n          <Button color=\"red\">Relationship</Button>\n        </Fragment>\n        <Card.Group>\n          <Card href={`/askpage/ben`}>\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\n              wrapped\n              ui={false}\n            />\n            <Card.Content>\n              <Card.Header>Ben</Card.Header>\n              <Card.Description>Prof. at NUS</Card.Description>\n            </Card.Content>\n          </Card>\n          <Card href=\"/profile/600af9fe472c0400041c7ee3\">\n            <Image\n              src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\n              wrapped\n              ui={false}\n            />\n            <Card.Content>\n              <Card.Header>Chamath Palihapitiya</Card.Header>\n              <Card.Description>VC</Card.Description>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AskQuestions;\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Dropdown,\n  Table,\n  Divider,\n  Image,\n  Segment,\n  Item,\n  Button,\n} from 'semantic-ui-react';\n\nconst JobListing = () => {\n  const countryOptions = [\n    { key: 'asf', value: 'acf', text: 'All' },\n    { key: 'af', value: 'af', text: 'Programming' },\n    { key: 'ax', value: 'ax', text: 'Business' },\n    { key: 'al', value: 'al', text: 'Design' },\n  ];\n  return (\n    <Segment style={{ marginLeft: '150px' }}>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n      >\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header>\n            -Job Listings Full Time/Part Time for students to choose.\n          </Header>\n          <Button color=\"red\">Full Time</Button>\n          <Button color=\"blue\">Part Time</Button>\n          <Item.Group style={{ overFlowY: 'scroll' }}>\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column style={{ maxWidth: 550 }}>\n          <Header>-Workshops</Header>\n          <Dropdown fluid selection options={countryOptions} />\n          <Item.Group style={{ overFlowY: 'scroll' }}>\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n\n            <Item>\n              <Item.Image\n                size=\"tiny\"\n                src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n              />\n\n              <Item.Content>\n                <Item.Header as=\"a\">Header</Item.Header>\n                <Item.Meta>Description</Item.Meta>\n                <Item.Description>\n                  <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n                </Item.Description>\n                <Item.Extra>Additional Details</Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n      </Grid>\n      <Divider vertical>And</Divider>\n    </Segment>\n  );\n};\n\nexport default JobListing;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Form,\n  TextArea,\n  Button,\n  Comment,\n  Card,\n} from 'semantic-ui-react';\n\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst SpecificPage = ({ match }) => {\n  useEffect(() => {\n    const getQnA = async () => {\n      try {\n        const result = await axios.get(\n          `/api/ask/getQuestions/${match.params.name}`\n        );\n        setQuestions((draft) => result.data);\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getQnA();\n  }, []);\n  const [questions, setQuestions] = useImmer([]);\n  const [question, setQuestion] = useImmer('');\n\n  const onChange = (e) => {\n    setQuestion((draft) => e.target.value);\n  };\n  const onSubmit = async (e) => {\n    try {\n      const structure = {\n        question: question,\n        to: 'ben',\n      };\n      const res = await axios.post('/api/ask/sendQuestion', structure);\n      alert('Question submitted. We will get back to you once its posted.');\n      setQuestion((draft) => '');\n    } catch (err) {\n      console.log(err.response.data.msg);\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 650, float: 'left' }}>\n        <Header as=\"h1\">Ask {match.params.name} </Header>\n        <Form onSubmit={onSubmit}>\n          <TextArea\n            placeholder=\"What do you wanna ask?\"\n            value={question}\n            onChange={onChange}\n          />\n          <Button color=\"facebook\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n\n        <Comment.Group>\n          <Header as=\"h3\" dividing>\n            QnA\n          </Header>\n          <Card.Group>\n            {questions.map((qns, index) => (\n              <Card fluid key={index}>\n                <Card.Content textAlign=\"left\">\n                  <Card.Header>\n                    {index + 1}. {qns.question}\n                  </Card.Header>\n                  <Card.Description>{qns.reply}</Card.Description>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Comment.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default SpecificPage;\n","import { LOGIN, INIT_USER, RESET_USER, SIGNUP } from '../actions/types';\nimport produce from 'immer';\n\nconst initialState = {\n  userid: '',\n  username: '',\n  email: '',\n  experiences: [],\n  otherThings: {},\n  isAuthenticated: false,\n};\n\nconst user = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case SIGNUP:\n      case INIT_USER:\n      case LOGIN:\n        draft.userid = action.payload._id;\n        draft.username = action.payload.name;\n        draft.email = action.payload.email;\n        draft.experiences = action.payload.experiences;\n        draft.otherThings = action.payload;\n        draft.isAuthenticated = true;\n        break;\n\n      case RESET_USER:\n        draft.userid = '';\n        draft.username = '';\n        draft.email = '';\n        draft.experiences = [];\n        draft.otherThings = {};\n        draft.isAuthenticated = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default user;\n","import produce from 'immer';\nimport { GETITEMS } from '../actions/types';\n\nconst initialState = { data: {}, isLoading: true };\n\nconst items = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case GETITEMS:\n        draft.data = action.payload[0];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default items;\n","import produce from 'immer';\nimport { ADDTASKS } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  isLoading: true,\n};\n\nconst tasks = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADDTASKS:\n        draft.tasks = [{ testing: 'tasking' }];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default tasks;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport items from './items';\nimport toDoList from './toDoList';\n\nconst allReducers = combineReducers({ user, items, toDoList });\n\nexport default allReducers;\n","import thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst lacreateStore = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default lacreateStore;\n","import React, { Fragment, useEffect } from 'react';\n\nimport { useImmer } from 'use-immer';\nimport ServerTime from '../ServerTime/ServerTime';\nimport axios from 'axios';\n\nimport { withRouter, Redirect, Link } from 'react-router-dom';\n\nimport { Icon, Menu, Segment, Sidebar, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst SideNav = ({ user, children, history }) => {\n  useEffect(() => {\n    const getMessagesNotRead = async () => {\n      try {\n        const msgs = await axios.get('/api/users/geturmessagescount');\n        setMessageCount((draft) => msgs.data);\n        const news = await axios.get('/api/users/geturnewscount');\n        setNewsCount((draft) => news.data);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n\n    getMessagesNotRead();\n  });\n  const [messageCount, setMessageCount] = useImmer(Number);\n  const [newsCount, setNewsCount] = useImmer(Number);\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'fixed',\n          zIndex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          width: '250px',\n          background: '#1B1C1D',\n          overflowX: 'hidden',\n          flex: 1,\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            overflowY: 'auto',\n          }}\n        >\n          <Menu vertical inverted size=\"massive\">\n            <Menu.Item>\n              <ServerTime />\n            </Menu.Item>\n            <Menu.Item>\n              <Menu.Menu>\n                <Menu.Item\n                  name=\"Home\"\n                  onClick={() => {\n                    history.push('/homepage');\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"My Profile\"\n                  onClick={() => {\n                    history.push(`/profile/${user.userid}`);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Explore Land\"\n                  onClick={() => {\n                    history.push('/explore', user);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name={'Messages' + (messageCount !== 0 ? messageCount : '')}\n                  onClick={() => history.push('/messages')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: messageCount !== 0 && 'yellow',\n                  }}\n                />\n                <Menu.Item\n                  name={'My News' + (newsCount !== 0 ? newsCount : '')}\n                  onClick={() => history.push('/news')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: newsCount !== 0 && 'yellow',\n                  }}\n                />\n\n                <Menu.Item\n                  name=\"Buildings\"\n                  onClick={() => history.push('/buildings')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Military\"\n                  onClick={() => history.push('/military')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Attack\"\n                  onClick={() => history.push('/attack')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Intelligence\"\n                  onClick={() => history.push('/intelligence')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Scoreboard\"\n                  onClick={() => history.push('/scoreboard')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Ask Questions\"\n                  onClick={() => history.push('/askquestions')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Job Listings\"\n                  onClick={() => history.push('/joblistings')}\n                  style={{ fontSize: 'x-large' }}\n                />\n              </Menu.Menu>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </div>\n      {children}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(SideNav));\n","import React, { useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Grid, Header } from 'semantic-ui-react';\n\nimport LoginPage from './components/authPage/AuthPage';\nimport SignUp from './components/SignupPage/SignupPage';\nimport HomePage from './components/HomePage/HomePage';\nimport ControlPanel from './components/controlPanel/ControlPanel';\nimport ExploreLandPage from './components/GameUI/ExploreLand/ExploreLand';\nimport MyMessagesPage from './components/GameUI/MyMessages/MyMessages';\nimport BuildingsPage from './components/GameUI/Buildings/Buildings';\nimport MilitaryPage from './components/GameUI/Military/MilitaryPage';\nimport AttackPage from './components/GameUI/Attack/Attack';\nimport ScoreboardPage from './components/GameUI/Scoreboard/Scoreboard';\nimport ProfilePage from './components/GameUI/Profile/Profile';\nimport CreateEditProfilePage from './components/GameUI/Profile/CreateEditProfile';\nimport IntelligencePage from './components/GameUI/Intelligence/Intelligence';\nimport NewsPage from './components/GameUI/News/News';\nimport AskQuestions from './components/askQuestions/AskQuestions';\nimport JobListing from './components/jobListing/JobListing';\nimport AskPage from './components/askQuestions/SpecificPage';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport SideNav from './components/SideNav/SideNav';\n\nimport { initUser, resetUser } from './redux/actions/user';\n\nconst App = () => {\n  const [loadingStatus, setLoadingStatus] = useImmer({\n    done: false,\n    isAuth: false,\n  });\n\n  useEffect(() => {\n    async function testingFunc() {\n      try {\n        const user = await axios.get('/api/auth/getuser');\n        console.log('user', user);\n        store.dispatch(initUser(user.data));\n      } catch (err) {\n        store.dispatch(resetUser());\n      }\n      setLoadingStatus((draft) => {\n        draft.done = true;\n        draft.isAuth = store.getState().user.isAuthenticated;\n      });\n    }\n    testingFunc();\n  }, [setLoadingStatus]);\n  return (\n    <Provider store={store}>\n      {loadingStatus.done ? (\n        <Fragment>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={LoginPage} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <SideNav>\n                <Route exact path=\"/homepage\" component={HomePage} />\n                <Route exact path=\"/control\" component={ControlPanel} />\n                <Route exact path=\"/explore\" component={ExploreLandPage} />\n                <Route exact path=\"/messages\" component={MyMessagesPage} />\n                <Route exact path=\"/buildings\" component={BuildingsPage} />\n                <Route exact path=\"/military\" component={MilitaryPage} />\n                <Route exact path=\"/attack\" component={AttackPage} />\n                <Route exact path=\"/attack/:userid\" component={AttackPage} />\n                <Route exact path=\"/scoreboard\" component={ScoreboardPage} />\n                <Route exact path=\"/profile/:userid\" component={ProfilePage} />\n                <Route\n                  exact\n                  path=\"/ceprofile\"\n                  component={CreateEditProfilePage}\n                />\n                <Route exact path=\"/news\" component={NewsPage} />\n                <Route\n                  exact\n                  path=\"/intelligence\"\n                  component={IntelligencePage}\n                />\n                <Route\n                  exact\n                  path=\"/intelligence/:userid\"\n                  component={IntelligencePage}\n                />\n                <Route exact path=\"/askquestions\" component={AskQuestions} />\n                <Route exact path=\"/askpage/:name\" component={AskPage} />\n                <Route exact path=\"/joblistings\" component={JobListing} />\n              </SideNav>\n            </Switch>\n          </Router>\n        </Fragment>\n      ) : (\n        <Grid\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          style={{ height: '100vh' }}\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h3\">Loading....</Header>\n          </Grid.Column>\n        </Grid>\n      )}\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}