{"version":3,"sources":["redux/actions/types.js","redux/actions/user.js","components/ServerTime/ServerTime.js","components/authPage/AuthPage.js","components/SignupPage/SignupPage.js","components/SideNav/SideOverview.js","components/HomePage/HomePage.js","components/controlPanel/ControlPanel.js","redux/actions/items.js","components/GameUI/ExploreLand/ExploreLand.js","components/GameUI/MyMessages/MyMessages.js","components/GameUI/Buildings/Buildings.js","components/GameUI/Military/MilitaryPage.js","components/GameUI/Attack/Attack.js","components/GameUI/Scoreboard/Scoreboard.js","components/GameUI/Profile/Profile.js","components/GameUI/Profile/CreateEditProfile.js","components/GameUI/Intelligence/Intelligence.js","components/GameUI/News/News.js","redux/reducers/user.js","redux/reducers/items.js","redux/reducers/toDoList.js","redux/reducers/index.js","redux/store.js","components/SideNav/SideNav.js","App.js","index.js"],"names":["LOGIN","INIT_USER","RESET_USER","SIGNUP","GETITEMS","ADDTASKS","initUser","data","dispatch","type","payload","resetUser","dateSetting","timezone","locale","format","localeString","DateTime","DATETIME_FULL_WITH_SECONDS","ServerTime","useImmer","serverTime","local","setZone","setLocale","toFormat","toLocaleString","setServerTime","serverID","serverTicker","isLoading","setServerTicker","done","serverDoneTicking","setServerDoneTicking","useEffect","interval","setInterval","draft","clearInterval","a","axios","get","serverTick","_id","tick","getServerTicker","plusServerTicker","Header","as","style","color","now","parseInt","tickerTimer","connect","state","user","loginUser","formData","history","post","res","push","alert","withRouter","email","password","setFormData","errors","formErrors","setFormErrors","onChange","e","target","name","value","Helmet","isAuthenticated","to","Grid","textAlign","height","verticalAlign","Column","maxWidth","Form","size","onSubmit","preventDefault","includes","Object","keys","length","checkForm","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","Button","Message","signup","response","password2","validateForm","console","log","SideOverview","userDetails","position","display","flexDirection","top","bottom","right","width","background","overflowX","flex","overflowY","Menu","vertical","inverted","Item","otherThings","country","school","networth","land","money","population","food","nextIncrements","battleStats","wins","losses","intelligenceDivision","recons","commandos","infantryDivision","attackPts","defencePts","armouredDivision","airDivision","seaDivision","match","retrieveUser","getUser","error","retrievePosts","getPosts","setPosts","content","setPost","posts","postStructure","coverage","username","text","unshift","date","result","msg","Row","columns","TextArea","Feed","map","postx","index","Event","Content","Summary","userID","Date","Extra","isAuth","userItems","items","getAllItemsByEmail","theItems","setTheItems","Card","Group","centered","item","itemName","Meta","quantity","Description","additionalNote","ExploreLand","React","useState","open","setOpen","location","setPopulation","sendingAmt","setSendingAmt","totalCost","setTotalCost","tasks","setTasks","getExploringTasks","retrievedTasks","JSON","stringify","onSend","structure","creation","amount","sendExplorer","label","onClick","Modal","onClose","onOpen","trigger","scrolling","Table","celled","padded","HeaderCell","Body","task","Cell","singleLine","doneInWhatTick","Actions","Icon","MyMessages","getMsg","setMessages","messages","setLoading","retrieveMsg","loading","from","Buildings","setBuildingQty","intel","buildings","intelligenceCamp","armyCamp","infantryCamp","airField","navalBase","getBuildings","Number","buildingQty","intelDiv","setIntelDiv","setArmyCamp","setAirField","setNavalBase","buildingTasks","setBuildingTasks","getBuildingTasks","MilitaryPage","setUnits","recon","commando","infanOne","infantry1","infanTwo","infantry2","infanThree","infantry3","infanFour","infantry4","airOne","air1","airTwo","air2","airThree","air3","airFour","air4","seaOne","sea1","seaTwo","sea2","seaThree","sea3","seaFour","sea4","getUnits","units","getMilitaryTasks","intelligenceDiv","infantryOne","infantryTwo","infantryThree","infantryFour","infantryDiv","setInfantryDiv","airDiv","setAirDiv","navalDiv","setNavalDiv","onChangeIntelDiv","onChangeInfanDiv","onChangeAirDiv","onChangeNavalDiv","AttackPage","getTasks","output","params","userid","setTarget","onInfantryChange","onAirChange","onNavalChange","totalPower","tPwer","tCost","infantryPower","entries","i","airPower","navalPower","ScoreboardPage","users","setUsers","retrievedUsers","getUsers","sub","userInfo","setUser","getUserInfo","profile","battle","tabs","setTabs","message","setMessage","onTab","onMessage","messageUser","divided","subheader","positive","bio","maxHeight","skillsets","skill","experiences","experience","title","company","description","current","setName","setBio","skills","setSkills","setExperiences","youtube","social","twitter","facebook","instagram","socials","setSocials","website","setWebsite","setCompany","onSkillChange","id","onSkillDelete","splice","onExpChange","onExpDelete","onSocialChange","socialmedias","submitForm","Field","Label","IntelligencePage","tasksopen","setTasksOpen","setRecon","setCommando","onSendRecon","onSendCommando","err","intelTasks","setIntelTasks","onGetIntelTasks","setIntel","getIntels","intels","profileTab","forces","info","List","navalDivision","battleTab","href","NewsPage","logs","AnDLogs","setUserLogs","getLogs","userLogs","initialState","action","produce","testing","allReducers","combineReducers","toDoList","middleware","thunk","lacreateStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","children","msgs","setMessageCount","news","setNewsCount","getMessagesNotRead","messageCount","newsCount","zIndex","left","fontSize","App","loadingStatus","setLoadingStatus","store","getState","testingFunc","exact","path","component","LoginPage","SignUp","HomePage","ControlPanel","ExploreLandPage","MyMessagesPage","BuildingsPage","ProfilePage","CreateEditProfilePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bcdb217.chunk.js","sourcesContent":["//USER\nexport const LOGIN = 'LOGIN';\nexport const INIT_USER = 'INIT_USER';\nexport const RESET_USER = 'RESET_USER';\nexport const SIGNUP = 'SIGNUP';\n\n//ITEM\nexport const GETITEMS = 'GETITEMS';\n\n//ToDoList\nexport const ADDTASKS = 'ADDTASKS';\n","import axios from 'axios';\nimport { LOGIN, INIT_USER, RESET_USER, SIGNUP } from './types';\n\n//Login user\nexport const loginUser = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n\n    dispatch({\n      type: LOGIN,\n      payload: res.data,\n    });\n    //history.push('/admin/controlpanel');\n    history.push(`/homepage`);\n  } catch (err) {\n    alert('Invalid Account');\n  }\n};\n\n//Initialize User info when refreshed\nexport const initUser = (data) => (dispatch) => {\n  dispatch({\n    type: INIT_USER,\n    payload: data,\n  });\n};\n\n//Reset / Logout user\nexport const resetUser = () => (dispatch) => {\n  dispatch({\n    type: RESET_USER,\n  });\n};\n\n//Sign up user\nexport const signup = (formData, history) => async (dispatch) => {\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: SIGNUP,\n      payload: res.data,\n    });\n    history.push(`/home/${res.data.name}`);\n  } catch (err) {\n    alert(err.response.data.email);\n  }\n};\n","import React, { useEffect, Fragment } from 'react';\nimport { DateTime } from 'luxon';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\nimport { Header } from 'semantic-ui-react';\n\n/*\n    desc: Display server time and next tick duration and current server tick number\n*/\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'tt',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst ServerTime = () => {\n  const [serverTime, setServerTime] = useImmer({\n    serverTime: DateTime.local()\n      .setZone(dateSetting.timezone)\n      .setLocale(dateSetting.locale)\n      .toFormat(dateSetting.format)\n      .toLocaleString(dateSetting.localeString),\n  });\n  const [serverTicker, setServerTicker] = useImmer({\n    serverID: '',\n    serverTicker: '',\n    isLoading: true,\n  });\n  const [serverDoneTicking, setServerDoneTicking] = useImmer({\n    done: false,\n  });\n  useEffect(() => {\n    //isMountedRef.current = true;\n    const interval = setInterval(() => {\n      setServerTime((draft) => {\n        draft.serverTime = DateTime.local()\n          .setZone(dateSetting.timezone)\n          .setLocale(dateSetting.locale)\n          .toFormat(dateSetting.format)\n          .toLocaleString(dateSetting.localeString);\n      });\n    }, 1000);\n\n    return () => {\n      //isMountedRef.current = false;\n      clearInterval(interval);\n    };\n  }, [setServerTime]);\n\n  useEffect(() => {\n    const getServerTicker = async () => {\n      const serverTick = await axios.get('/api/controlpanel/getstick');\n      setServerTicker((draft) => {\n        draft.serverID = serverTick.data._id;\n        draft.serverTicker = serverTick.data.tick;\n        draft.isLoading = false;\n      });\n    };\n    getServerTicker();\n  }, [setServerTicker]);\n\n  const plusServerTicker = async () => {\n    if (!serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = true;\n      });\n      setServerTicker((draft) => {\n        draft.serverTicker = draft.serverTicker + 1;\n      });\n      //await axios.post('/api/controlpanel/plusstick', serverTicker);\n    }\n  };\n\n  const tickerTimer = () => {\n    const now = DateTime.local()\n      .setZone('Asia/Singapore')\n      .setLocale('en-US')\n      .toFormat('m');\n\n    if (now === '30' || now === '0') {\n      plusServerTicker();\n      return 30;\n    }\n    //0 > x < 60\n    if (parseInt(now) > 0 && parseInt(now) < 60 && serverDoneTicking.done) {\n      setServerDoneTicking((draft) => {\n        draft.done = false;\n      });\n    }\n    if (parseInt(now) >= 0 && parseInt(now) < 30 && !serverDoneTicking.done) {\n      return 30 - parseInt(now);\n    }\n    // 30<x<60\n    if (parseInt(now) >= 30 && parseInt(now) < 60 && !serverDoneTicking.done) {\n      return 60 - parseInt(now);\n    }\n  };\n\n  const onClick = (e) => {\n    e.preventDefault();\n    plusServerTicker();\n  };\n  return (\n    <Fragment>\n      {serverTicker.isLoading ? null : (\n        <Header as=\"h4\" style={{ color: 'white' }}>\n          {serverTime.serverTime}\n          <br />\n          Next Tick In: [{tickerTimer()} mins]\n          {/*<h4>Server Tick: {serverTicker.serverTicker}</h4>*/}\n        </Header>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ServerTime;\n","import React, { Fragment } from 'react';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/user';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { Helmet } from 'react-helmet';\n\nconst AuthPage = ({ loginUser, history, user }) => {\n  const [formData, setFormData] = useImmer({\n    email: '',\n    password: '',\n  });\n\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n\n    /*setFormData(\n      produce((draft) => {\n        draft[e.target.name] = e.target.value;\n      })\n    );*/\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const checkForm = () => {\n    const errors = {};\n    if (formData.email === '' || !formData.email.includes('@')) {\n      errors.email = 'Email field is invalid.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Password field is empty.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n    const isValid = checkForm();\n    if (isValid) {\n      loginUser(formData, history);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Login Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Grid\n          textAlign=\"center\"\n          style={{ height: '100vh' }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <ServerTime />\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={onSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={onChange}\n                />\n                {formErrors.errors.email}\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={onChange}\n                />\n                {formErrors.errors.password}\n\n                <Button color=\"teal\" fluid size=\"large\" type=\"submit\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to=\"/signup\">Sign Up</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      ) : (\n        <Redirect to={`/homepage`} />\n      )}\n    </Fragment>\n  );\n};\n\nAuthPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(AuthPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { connect } from 'react-redux';\nimport { signup } from '../../redux/actions/user';\nimport { withRouter } from 'react-router-dom';\n\nconst SignupPage = ({ signup, history }) => {\n  const [formData, setFormData] = useImmer({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const [formErrors, setFormErrors] = useImmer({\n    errors: {},\n  });\n\n  const onChange = async (e) => {\n    setFormData((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    if (formData.name === '') {\n      errors.name = 'Missing name.';\n    }\n    if (formData.email === '') {\n      errors.email = 'Missing email.';\n    }\n    if (formData.password === '') {\n      errors.password = 'Missing password.';\n    }\n    if (formData.password2 === '') {\n      errors.password2 = 'Missing password.';\n    }\n    if (formData.password !== formData.password2) {\n      errors.password2 = 'Password does not match.';\n    }\n    if (Object.keys(errors).length !== 0) {\n      setFormErrors((draft) => {\n        draft.errors = errors;\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors((draft) => {\n      draft.errors = {};\n    });\n\n    const isValid = validateForm();\n    if (isValid) {\n      console.log('FormData:', formData);\n      signup(formData, history);\n    } else {\n      console.log('Form incomplete');\n    }\n  };\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Signup\n        </Header>\n        <Form size=\"large\" onSubmit={onSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"wheelchair\"\n              iconPosition=\"left\"\n              placeholder=\"Name\"\n              name=\"name\"\n              onChange={onChange}\n            />\n            {formErrors.errors.name}\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"E-mail address\"\n              name=\"email\"\n              onChange={onChange}\n            />\n            {formErrors.errors.email}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password}\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Re-type password\"\n              type=\"password\"\n              name=\"password2\"\n              onChange={onChange}\n            />\n            {formErrors.errors.password2}\n\n            <Button color=\"blue\" fluid size=\"large\" type=\"submit\">\n              Sign up\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nSignupPage.propTypes = {\n  signup: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { signup })(withRouter(SignupPage));\n","import React from 'react';\nimport { Icon, Menu, Segment, Sidebar } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst SideOverview = ({ userDetails }) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        display: 'flex',\n        flexDirection: 'column',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        width: '250px',\n        background: '#1B1C1D',\n        overflowX: 'hidden',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n          overflowY: 'auto',\n        }}\n      >\n        <Menu vertical inverted>\n          <Menu.Item>\n            <Menu.Header>Your Territory</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>Country: {userDetails.otherThings.country}</Menu.Item>\n              <Menu.Item>School: {userDetails.otherThings.school}</Menu.Item>\n              <Menu.Item>\n                Networth: {userDetails.otherThings.networth}\n              </Menu.Item>\n              <Menu.Item>Land: {userDetails.otherThings.land}</Menu.Item>\n              <Menu.Item>Money: ${userDetails.otherThings.money}</Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.population}\n              </Menu.Item>\n              <Menu.Item>Food: {userDetails.otherThings.food}</Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Next Increments</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Money: ${userDetails.otherThings.nextIncrements.money}\n              </Menu.Item>\n              <Menu.Item>\n                Population: {userDetails.otherThings.nextIncrements.population}\n              </Menu.Item>\n              <Menu.Item>\n                Food: {userDetails.otherThings.nextIncrements.food}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Battle Stats</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Wins: {userDetails.otherThings.battleStats.wins}\n              </Menu.Item>\n              <Menu.Item>\n                Losses: {userDetails.otherThings.battleStats.losses}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Intelligence Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Reconnaissance:{' '}\n                {userDetails.otherThings.intelligenceDivision.recons}\n              </Menu.Item>\n              <Menu.Item>\n                Commandos:{' '}\n                {userDetails.otherThings.intelligenceDivision.commandos}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Infantry Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points:{' '}\n                {userDetails.otherThings.infantryDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points:{' '}\n                {userDetails.otherThings.infantryDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Armoured Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points:{' '}\n                {userDetails.otherThings.armouredDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points:{' '}\n                {userDetails.otherThings.armouredDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Air Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.airDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.airDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sea Division</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item>\n                Attack Points: {userDetails.otherThings.seaDivision.attackPts}\n              </Menu.Item>\n              <Menu.Item>\n                Defence Points: {userDetails.otherThings.seaDivision.defencePts}\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nSideOverview.propTypes = {\n  userDetails: PropTypes.object.isRequired,\n};\n\nexport default SideOverview;\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport Overview from '../SideNav/SideOverview';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { initUser } from '../../redux/actions/user';\nimport {\n  Grid,\n  Feed,\n  Icon,\n  Form,\n  TextArea,\n  Button,\n  Header,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { DateTime } from 'luxon';\n\nconst dateSetting = {\n  timezone: 'Asia/Singapore',\n  locale: 'en-US',\n  format: 'FF',\n  localeString: DateTime.DATETIME_FULL_WITH_SECONDS,\n};\n\nconst HomePage = ({ user, initUser, match }) => {\n  useEffect(() => {\n    const retrieveUser = async () => {\n      try {\n        const getUser = await axios.get(`/api/auth/getuser`);\n        initUser(getUser.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    const retrievePosts = async () => {\n      try {\n        const getPosts = await axios.get('/api/post/getallposts');\n        setPosts((draft) => {\n          draft.content = getPosts.data;\n        });\n      } catch (err) {\n        console.log(err.response);\n      }\n    };\n    retrieveUser();\n    retrievePosts();\n  }, []);\n  const [post, setPost] = useImmer({ content: '' });\n  const [posts, setPosts] = useImmer({ content: [] });\n  const onChange = (e) => {\n    setPost((draft) => {\n      draft.content = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const postStructure = {\n        school: user.otherThings.school,\n        coverage: 'Singapore',\n        name: user.username,\n        text: post,\n      };\n      setPosts((draft) => {\n        draft.content.unshift({\n          date: DateTime.local()\n            .setZone(dateSetting.timezone)\n            .setLocale(dateSetting.locale)\n            .toFormat(dateSetting.format),\n          coverage: 'Singapore',\n          school: user.otherThings.school,\n          name: user.username,\n          text: post.content,\n        });\n      });\n      const result = await axios.post('/api/post/post', postStructure);\n      console.log(result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n      {!user.isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <div>\n          <Grid style={{ height: '100vh' }} textAlign=\"center\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <Fragment>\n                  <Header as=\"h1\" textAlign=\"left\">\n                    Welcome\n                  </Header>\n                  <Form onSubmit={onSubmit}>\n                    <TextArea\n                      placeholder=\"Tell us more\"\n                      name=\"post\"\n                      onChange={onChange}\n                    />\n\n                    {/*<Dropdown\n                      placeholder=\"Select Coverage\"\n                      selection\n                      options={[\n                        { key: 'school', value: 'NUS', text: 'School' },\n                        { key: 'country', value: 'Singapore', text: 'Country' },\n                        { key: 'global', value: 'Global', text: 'Global' },\n                      ]}\n                    />*/}\n                    <Button\n                      content=\"POST\"\n                      color=\"black\"\n                      size=\"large\"\n                      fluid\n                      type=\"submit\"\n                    />\n                  </Form>\n                  <Feed>\n                    {posts.content.map((postx, index) => (\n                      <Feed.Event key={index}>\n                        <Feed.Content>\n                          <Feed.Summary>\n                            <Link to={`/profile/${postx.userID}`}>\n                              {postx.name}\n                            </Link>\n                            <Feed.Date>{postx.school}</Feed.Date>\n                            <Feed.Date>{postx.date}</Feed.Date>\n                          </Feed.Summary>\n                          <Feed.Extra text>{postx.text}</Feed.Extra>\n                        </Feed.Content>\n                      </Feed.Event>\n                    ))}\n                  </Feed>\n                </Fragment>\n                <Overview userDetails={user} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nHomePage.propTypes = {\n  user: PropTypes.object.isRequired,\n  initUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, { initUser })(HomePage);\n","import React, { Fragment, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Redirect } from 'react-router-dom';\nimport ServerTime from '../ServerTime/ServerTime';\nimport { getAllItemsByEmail } from '../../redux/actions/items';\nimport { Card, Grid } from 'semantic-ui-react';\nconst ControlPanel = ({ isAuth, getAllItemsByEmail, userItems }) => {\n  const [theItems, setTheItems] = useImmer({\n    items: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    getAllItemsByEmail();\n  }, [getAllItemsByEmail]);\n\n  useEffect(() => {\n    if (!userItems.isLoading) {\n      setTheItems((draft) => {\n        draft.items = userItems.data.items;\n        draft.isLoading = false;\n      });\n    } else {\n      setTheItems((draft) => {\n        draft.items = [];\n        draft.isLoading = true;\n      });\n    }\n    // eslint-disable-next-line\n  }, [userItems.isLoading]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Helmet>\n          <title>Control Panel</title>\n        </Helmet>\n        {!isAuth ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Fragment>\n            <h1>ControlPanel</h1>\n            <ServerTime />\n            {theItems.isLoading ? (\n              <h3>Loading Items...</h3>\n            ) : (\n              <Fragment>\n                {theItems.items.length === 0 ? (\n                  <h3>No items....</h3>\n                ) : (\n                  <Card.Group centered={true}>\n                    {theItems.items.map((item) => (\n                      <Card key={item._id}>\n                        <Card.Content>\n                          <Card.Header>{item.itemName}</Card.Header>\n                          <Card.Meta>x{item.quantity}</Card.Meta>\n                          <Card.Description>\n                            {item.additionalNote}\n                          </Card.Description>\n                        </Card.Content>\n                      </Card>\n                    ))}\n                  </Card.Group>\n                )}\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nControlPanel.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getAllItemsByEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.user.isAuthenticated,\n  userItems: state.items,\n});\n\nexport default connect(mapStateToProps, { getAllItemsByEmail })(ControlPanel);\n","import axios from 'axios';\nimport { GETITEMS } from './types';\n\nexport const getAllItemsByEmail = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/items/getall');\n    dispatch({\n      type: GETITEMS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Error: ', err.response.data);\n  }\n};\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Input,\n  Modal,\n  Button,\n  Icon,\n  Table,\n  Item,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst ExploreLand = ({ history }) => {\n  const [open, setOpen] = React.useState(false);\n  const [population, setPopulation] = useImmer(\n    history.location.state.otherThings.population\n  );\n  const [sendingAmt, setSendingAmt] = useImmer(0);\n  const [totalCost, setTotalCost] = useImmer(0);\n  const [tasks, setTasks] = useImmer([]);\n\n  const EXPLORER_COST = 500;\n\n  const getExploringTasks = async () => {\n    try {\n      const retrievedTasks = await axios.get('/api/actions/getexploringtasks');\n      setTasks((draft) => retrievedTasks.data);\n    } catch (err) {\n      alert(JSON.stringify(err.response.data));\n    }\n  };\n  const onChange = (e) => {\n    setSendingAmt((draft) => e.target.value);\n    setTotalCost((draft) => e.target.value * EXPLORER_COST);\n  };\n\n  const onSend = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        creation: {\n          amount: sendingAmt,\n        },\n        totalCost: totalCost,\n      };\n      console.log('Data', sendingAmt);\n      const sendExplorer = await axios.post(\n        '/api/actions/sendexplorer',\n        structure\n      );\n      console.log(sendExplorer.data);\n      setSendingAmt((draft) => 0);\n      setPopulation((draft) => (draft -= sendingAmt));\n      alert('ok');\n    } catch (err) {\n      alert(JSON.stringify(err.response.data.msg));\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Row>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\">Explore Land</Header>\n          <>\n            <Header>Available Units: {population}</Header>\n            <Header>1 unit = $500</Header>\n          </>\n          <>\n            <Input\n              label=\"Amount:\"\n              value={sendingAmt}\n              onChange={onChange}\n              type=\"number\"\n            />\n            <Button color=\"black\" onClick={onSend}>\n              Send\n            </Button>\n          </>\n          <br />\n          <br />\n          <Modal\n            open={open}\n            onClose={() => setOpen(false)}\n            onOpen={() => {\n              setOpen(true);\n              getExploringTasks();\n            }}\n            trigger={<Button color=\"black\">View On-going tasks</Button>}\n          >\n            <Modal.Header>Recent Battles</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Table celled padded>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Amount</Table.HeaderCell>\n                      <Table.HeaderCell>Returning In</Table.HeaderCell>\n                      <Table.HeaderCell>Date</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {tasks.map((task) => (\n                      <Table.Row>\n                        <Table.Cell>\n                          <Header>\n                            {task.creation.amount} units (\n                            {task.creation.amount * 5} land)\n                          </Header>\n                        </Table.Cell>\n                        <Table.Cell singleLine>\n                          {task.doneInWhatTick} Ticks\n                        </Table.Cell>\n                        <Table.Cell>{task.date}</Table.Cell>\n                      </Table.Row>\n                    ))}\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button onClick={() => setOpen(false)} color=\"black\">\n                Close <Icon name=\"close\" />\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default ExploreLand;\n","import React, { useEffect, Fragment } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nconst MyMessages = () => {\n  useEffect(() => {\n    const retrieveMsg = async () => {\n      try {\n        const getMsg = await axios.get('/api/users/messages');\n        setMessages((draft) => getMsg.data.messages);\n        setLoading((draft) => false);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    retrieveMsg();\n  }, []);\n  const [messages, setMessages] = useImmer([]);\n  const [loading, setLoading] = useImmer(true);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '650px' }}>\n        <Header as=\"h1\">Messages</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Content</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {!loading && (\n              <Fragment>\n                {messages.map((msg, index) => (\n                  <Table.Row key={index}>\n                    <Table.Cell>{msg.content}</Table.Cell>\n                    <Table.Cell>\n                      <Link to={`/profile/${msg.from._id}`}>\n                        {msg.from.name}\n                      </Link>\n                    </Table.Cell>\n\n                    <Table.Cell>{msg.date}</Table.Cell>\n                    <Table.Cell>\n                      <Button color=\"black\">Reply</Button>\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Fragment>\n            )}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MyMessages;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst Buildings = () => {\n  useEffect(() => {\n    const getBuildings = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setBuildingQty((draft) => {\n          draft.intel = result.data.buildings.intelligenceCamp.quantity;\n          draft.armyCamp = result.data.buildings.infantryCamp.quantity;\n          draft.airField = result.data.buildings.airField.quantity;\n          draft.navalBase = result.data.buildings.navalBase.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getBuildings();\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [buildingQty, setBuildingQty] = useImmer({\n    intel: Number,\n    armyCamp: Number,\n    airField: Number,\n    navalBase: Number,\n  });\n  const [intelDiv, setIntelDiv] = useImmer(0);\n  const [armyCamp, setArmyCamp] = useImmer(0);\n  const [airField, setAirField] = useImmer(0);\n  const [navalBase, setNavalBase] = useImmer(0);\n  //const [foodBank, setFoodBank] = useImmer(0);\n  const [buildingTasks, setBuildingTasks] = useImmer([]);\n\n  const getBuildingTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getbuildingtasks');\n      console.log(result.data);\n      setBuildingTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'armyCamp') {\n      setArmyCamp((draft) => e.target.value);\n    }\n    if (e.target.name === 'airField') {\n      setAirField((draft) => e.target.value);\n    }\n    if (e.target.name === 'navalBase') {\n      setNavalBase((draft) => e.target.value);\n    }\n    if (e.target.name === 'intelDiv') {\n      setIntelDiv((draft) => e.target.value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        intelDiv,\n        armyCamp,\n        airField,\n        navalBase,\n      };\n      const res = await axios.post('/api/actions/buildbuildings', structure);\n      console.log(res.data);\n      setIntelDiv((draft) => 0);\n      setArmyCamp((draft) => 0);\n      setAirField((draft) => 0);\n      setNavalBase((draft) => 0);\n      alert('ok');\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Buildings</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Building</Table.HeaderCell>\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Extra Space per unit</Table.HeaderCell>\n              <Table.HeaderCell>Land Req per unit</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Intelligence Dept</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.intel}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"intelDiv\"\n                  value={intelDiv}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Army Camp</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.armyCamp}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"armyCamp\"\n                  value={armyCamp}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air Field</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.airField}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airField\"\n                  value={airField}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Naval Base</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$500</Table.Cell>\n              <Table.Cell singleLine>5</Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>{buildingQty.navalBase}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"navalBase\"\n                  value={navalBase}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            {/* <Table.Row>\n              <Table.Cell>\n                <Header>Food Bank</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"foodBank\"\n                  value={foodBank}\n                  onChange={onChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n           </Table.Row>*/}\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getBuildingTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {buildingTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Buildings;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst MilitaryPage = () => {\n  useEffect(() => {\n    const getUnits = async () => {\n      const result = await axios.get('/api/users/getmyself');\n      setUnits((draft) => {\n        draft.recon = result.data.intelligenceDivision.recons;\n        draft.commando = result.data.intelligenceDivision.commandos;\n        draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n        draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n        draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n        draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n        draft.airOne = result.data.airDivision.air1.quantity;\n        draft.airTwo = result.data.airDivision.air2.quantity;\n        draft.airThree = result.data.airDivision.air3.quantity;\n        draft.airFour = result.data.airDivision.air4.quantity;\n        draft.seaOne = result.data.seaDivision.sea1.quantity;\n        draft.seaTwo = result.data.seaDivision.sea2.quantity;\n        draft.seaThree = result.data.seaDivision.sea3.quantity;\n        draft.seaFour = result.data.seaDivision.sea4.quantity;\n      });\n    };\n    getUnits();\n  }, []);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const getMilitaryTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getmilitarytasks');\n      console.log(result.data);\n      setTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  const [tasks, setTasks] = useImmer([]);\n\n  const [intelligenceDiv, setIntelDiv] = useImmer({\n    recon: 0,\n    commando: 0,\n  });\n\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onChangeIntelDiv = (e) => {\n    setIntelDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeInfanDiv = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeAirDiv = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n  const onChangeNavalDiv = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const res = await axios.post('/api/actions/createmilitary', {\n        intelligenceDiv,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      });\n\n      console.log(res.data);\n      alert('ok');\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      style={{ height: '100vh' }}\n      columns={3}\n    >\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">MilitaryPage</Header>\n        <Header>Intelligence Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Reconn</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>{units.recon}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"recon\"\n                  value={intelligenceDiv.recon}\n                  onChange={onChangeIntelDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commando</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n\n              <Table.Cell>{units.commando}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"commando\"\n                  value={intelligenceDiv.commando}\n                  onChange={onChangeIntelDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryOne\"\n                  value={infantryDiv.infantryOne}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryTwo\"\n                  value={infantryDiv.infantryTwo}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryThree\"\n                  value={infantryDiv.infantryThree}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"infantryFour\"\n                  value={infantryDiv.infantryFour}\n                  onChange={onChangeInfanDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airOne\"\n                  value={airDiv.airOne}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airTwo\"\n                  value={airDiv.airTwo}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airThree\"\n                  value={airDiv.airThree}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"airFour\"\n                  value={airDiv.airFour}\n                  onChange={onChangeAirDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n\n              <Table.HeaderCell>Cost</Table.HeaderCell>\n              <Table.HeaderCell>Space Cost</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>Defence Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaOne\"\n                  value={navalDiv.seaOne}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaTwo\"\n                  value={navalDiv.seaTwo}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaThree\"\n                  value={navalDiv.seaThree}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>$100</Table.Cell>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>5</Table.Cell>\n\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  name=\"seaFour\"\n                  value={navalDiv.seaFour}\n                  onChange={onChangeNavalDiv}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Build\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getMilitaryTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Building</Table.HeaderCell>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.creation.name}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.creation.amount}{' '}\n                      </Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default MilitaryPage;\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Table,\n  Input,\n  Button,\n  Modal,\n  Icon,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst AttackPage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.infanOne = result.data.infantryDivision.infantry1.quantity;\n          draft.infanTwo = result.data.infantryDivision.infantry2.quantity;\n          draft.infanThree = result.data.infantryDivision.infantry3.quantity;\n          draft.infanFour = result.data.infantryDivision.infantry4.quantity;\n          draft.airOne = result.data.airDivision.air1.quantity;\n          draft.airTwo = result.data.airDivision.air2.quantity;\n          draft.airThree = result.data.airDivision.air3.quantity;\n          draft.airFour = result.data.airDivision.air4.quantity;\n          draft.seaOne = result.data.seaDivision.sea1.quantity;\n          draft.seaTwo = result.data.seaDivision.sea2.quantity;\n          draft.seaThree = result.data.seaDivision.sea3.quantity;\n          draft.seaFour = result.data.seaDivision.sea4.quantity;\n        });\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    };\n    getUnits();\n  }, []);\n\n  const getTasks = async () => {\n    try {\n      const output = await axios.get('/api/actions/getattacktasks');\n      setTasks((draft) => output.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const [open, setOpen] = React.useState(false);\n  const [tasks, setTasks] = useImmer([]);\n\n  const [units, setUnits] = useImmer({\n    infanOne: Number,\n    infanTwo: Number,\n    infanThree: Number,\n    infanFour: Number,\n    airOne: Number,\n    airTwo: Number,\n    airThree: Number,\n    airFour: Number,\n    seaOne: Number,\n    seaTwo: Number,\n    seaThree: Number,\n    seaFour: Number,\n  });\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const [infantryDiv, setInfantryDiv] = useImmer({\n    infantryOne: 0,\n    infantryTwo: 0,\n    infantryThree: 0,\n    infantryFour: 0,\n  });\n  const [airDiv, setAirDiv] = useImmer({\n    airOne: 0,\n    airTwo: 0,\n    airThree: 0,\n    airFour: 0,\n  });\n  const [navalDiv, setNavalDiv] = useImmer({\n    seaOne: 0,\n    seaTwo: 0,\n    seaThree: 0,\n    seaFour: 0,\n  });\n\n  const onTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n\n  const onInfantryChange = (e) => {\n    setInfantryDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onAirChange = (e) => {\n    setAirDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n  const onNavalChange = (e) => {\n    setNavalDiv((draft) => {\n      draft[e.target.name] = Number(e.target.value);\n    });\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const structure = {\n        target,\n        infantryDiv,\n        airDiv,\n        navalDiv,\n      };\n      const result = await axios.post('/api/actions/attack', structure);\n      alert(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const totalPower = () => {\n    let tPwer = 0;\n    let tCost = 0;\n    const infantryPower = Object.entries(infantryDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += infantryPower[i][1] * 10;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += infantryPower[i][1] * 20;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += infantryPower[i][1] * 30;\n        tCost += infantryPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += infantryPower[i][1] * 40;\n        tCost += infantryPower[i][1] * 500;\n      }\n    }\n    const airPower = Object.entries(airDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += airPower[i][1] * 10;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += airPower[i][1] * 20;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += airPower[i][1] * 30;\n        tCost += airPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += airPower[i][1] * 40;\n        tCost += airPower[i][1] * 500;\n      }\n    }\n    const navalPower = Object.entries(navalDiv);\n    for (let i = 0; i < infantryPower.length; i++) {\n      if (i === 0) {\n        tPwer += navalPower[i][1] * 10;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 1) {\n        tPwer += navalPower[i][1] * 20;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 2) {\n        tPwer += navalPower[i][1] * 30;\n        tCost += navalPower[i][1] * 500;\n      }\n      if (i === 3) {\n        tPwer += navalPower[i][1] * 40;\n        tCost += navalPower[i][1] * 500;\n      }\n    }\n    return { tPwer, tCost };\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">Attack Page</Header>\n        <Input\n          label=\"Target\"\n          value={target}\n          name=\"target\"\n          onChange={onTarget}\n        />\n        <Header>Infantry Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.infanOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryOne}\n                  name=\"infantryOne\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.infanTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryTwo}\n                  name=\"infantryTwo\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.infanThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryThree}\n                  name=\"infantryThree\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Infantry 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.infanFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={infantryDiv.infantryFour}\n                  name=\"infantryFour\"\n                  onChange={onInfantryChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        {/*<Header>Armoured Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 1</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 2</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 3</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Tank 4</Header>\n              </Table.Cell>\n              <Table.Cell singleLine>10</Table.Cell>\n              <Table.Cell>\n                <Input placeholder=\"Amount...\" />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        \n        */}\n        <Header>Air Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.airOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airOne}\n                  name=\"airOne\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.airTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airTwo}\n                  name=\"airTwo\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.airThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airThree}\n                  name=\"airThree\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Air 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.airFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={airDiv.airFour}\n                  name=\"airFour\"\n                  onChange={onAirChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Naval Division</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>Cost per unit</Table.HeaderCell>\n              <Table.HeaderCell>Attack Pts</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 1</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>10</Table.Cell>\n              <Table.Cell>{units.seaOne}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaOne}\n                  name=\"seaOne\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 2</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>20</Table.Cell>\n              <Table.Cell>{units.seaTwo}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaTwo}\n                  name=\"seaTwo\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 3</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>30</Table.Cell>\n              <Table.Cell>{units.seaThree}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaThree}\n                  name=\"seaThree\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Sea 4</Header>\n              </Table.Cell>\n              <Table.Cell>$500</Table.Cell>\n              <Table.Cell>40</Table.Cell>\n              <Table.Cell>{units.seaFour}</Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  value={navalDiv.seaFour}\n                  name=\"seaFour\"\n                  onChange={onNavalChange}\n                  type=\"number\"\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Header>Attack Points: {totalPower().tPwer}</Header>\n        <Header>Total Cost: {totalPower().tCost}</Header>\n        <Button color=\"black\" fluid onClick={onSubmit}>\n          Attack\n        </Button>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              View On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>Recent Battles</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Total Attack Power</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Returning In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {tasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header>{task.totalPower}</Header>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{task.target.name}</Table.Cell>\n                      <Table.Cell singleLine>\n                        {task.doneInWhatTick} Tick\n                      </Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default AttackPage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Dropdown, Table } from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ScoreboardPage = () => {\n  const [users, setUsers] = useImmer([]);\n  useEffect(() => {\n    const getUsers = async () => {\n      const retrievedUsers = await axios.get('/api/users/getusers');\n      setUsers((draft) => retrievedUsers.data);\n    };\n    getUsers();\n  }, []);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Header as=\"h3\">ScoreboardPage</Header>\n        {/* <Dropdown\n          placeholder=\"Select Coverage\"\n          selection\n          options={[\n            { key: 'school', value: 'NUS', text: 'School' },\n            { key: 'country', value: 'Singapore', text: 'Country' },\n            { key: 'global', value: 'Global', text: 'Global' },\n          ]}\n        />*/}\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>School</Table.HeaderCell>\n              <Table.HeaderCell>Country</Table.HeaderCell>\n              <Table.HeaderCell>Networth</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {users.map((user, index) => (\n              <Table.Row key={index}>\n                <Table.Cell>\n                  <Header sub>\n                    <Link to={`/profile/${user._id}`}>{user.name}</Link>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.school}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.country}</Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header sub>{user.networth}</Header>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ScoreboardPage;\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Icon,\n  Table,\n  Item,\n  TextArea,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ProfilePage = ({ userID, match, history }) => {\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        const userInfo = await axios.get(\n          `/api/users/getuser/${match.params.userid}`\n        );\n        console.log(userInfo.data);\n        setUser((draft) => userInfo.data);\n      } catch (err) {\n        console.log(err.response.data);\n      }\n      setLoading((draft) => false);\n    };\n    getUserInfo();\n  }, []);\n  const [user, setUser] = useImmer({});\n  const [loading, setLoading] = useImmer(true);\n  const [open, setOpen] = React.useState(false);\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [message, setMessage] = useImmer('');\n  const goCreateProfile = (e) => {\n    e.preventDefault();\n    history.push('/ceprofile');\n  };\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  const onMessageChange = (e) => {\n    setMessage((draft) => e.target.value);\n  };\n  const onMessage = async (e) => {\n    try {\n      e.preventDefault();\n      const messageUser = await axios.post(\n        `/api/users/messageUser/${user._id}`,\n        { content: message }\n      );\n      console.log(messageUser.data);\n    } catch (err) {\n      console.error(err.response);\n    }\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={3}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 850 }}>\n          {loading ? (\n            <Header>Loading...</Header>\n          ) : (\n            <Fragment>\n              <Grid.Column>\n                <Button name=\"profile\" onClick={onTab}>\n                  Profile\n                </Button>\n                <Button name=\"battle\" onClick={onTab}>\n                  Battle Stats\n                </Button>\n              </Grid.Column>\n              {tabs.profile && (\n                <>\n                  <Grid.Column>\n                    <Header as=\"h4\">Name: {user.name}</Header>\n                    <Header as=\"h4\">Current School: {user.school}</Header>\n                    <Header as=\"h4\">Country: {user.country}</Header>\n                    {userID === user._id ? (\n                      <Button color=\"black\" onClick={goCreateProfile}>\n                        Create/Edit Profile\n                      </Button>\n                    ) : (\n                      <>\n                        <Modal\n                          onClose={() => setOpen(false)}\n                          onOpen={() => setOpen(true)}\n                          open={open}\n                          trigger={<Button color=\"black\">Message</Button>}\n                        >\n                          <Modal.Header>Message</Modal.Header>\n                          <Modal.Content>\n                            <Modal.Description>\n                              <Header subheader>To: {user.name}</Header>\n                              <TextArea\n                                style={{ width: '100%' }}\n                                onChange={onMessageChange}\n                                value={message}\n                              />\n                            </Modal.Description>\n                          </Modal.Content>\n                          <Modal.Actions>\n                            <Button\n                              color=\"black\"\n                              onClick={() => setOpen(false)}\n                            >\n                              Close\n                            </Button>\n                            <Button\n                              content=\"Send\"\n                              onClick={(e) => {\n                                setOpen(false);\n                                onMessage(e);\n                              }}\n                              positive\n                            />\n                          </Modal.Actions>\n                        </Modal>\n                      </>\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Header as=\"h2\">Bio</Header>\n                    {user.bio === '' || !user.bio ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Bio</Header>\n                      </div>\n                    ) : (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header as=\"h4\">{user.bio}</Header>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Skill sets</Header>\n                    {user.skillsets.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No Skills Sets</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.skillsets.map((skill, index) => (\n                            <Item key={index}>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}.{skill}\n                                </Item.Header>\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                    <Header as=\"h2\">Experiences</Header>\n                    {user.experiences.length === 0 ? (\n                      <div style={{ overflowY: 'auto', maxHeight: '25vh' }}>\n                        <Header sub>No experiences</Header>\n                      </div>\n                    ) : (\n                      <div\n                        style={{\n                          overflowY: 'auto',\n                          maxHeight: '25vh',\n                          textAlign: 'left',\n                        }}\n                      >\n                        <Item.Group>\n                          {user.experiences.map((experience, index) => (\n                            <Item>\n                              <Item.Content>\n                                <Item.Header>\n                                  {index + 1}. {experience.title}\n                                </Item.Header>\n                                <Item.Meta>{experience.company}</Item.Meta>\n                                <Item.Description>\n                                  {experience.description}\n                                </Item.Description>\n                                {experience.current ? (\n                                  <Item.Extra>{experience.from}</Item.Extra>\n                                ) : (\n                                  <Item.Extra>1999/10/19 - now</Item.Extra>\n                                )}\n                              </Item.Content>\n                            </Item>\n                          ))}\n                        </Item.Group>\n                      </div>\n                    )}\n                  </Grid.Column>\n                </>\n              )}\n              {tabs.battle && (\n                <Grid.Column>\n                  <Header as=\"h4\">Networth: {user.networth}</Header>\n                  <Header as=\"h4\">\n                    Wins / Losses: {user.battleStats.wins}/\n                    {user.battleStats.losses}\n                  </Header>\n                  {match.params.userid !== user.userid && (\n                    <Fragment>\n                      {userID !== user._id && (\n                        <>\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(`/attack/${match.params.userid}`);\n                            }}\n                          >\n                            Attack\n                          </Button>\n                          <br />\n                          <br />\n                          <Button\n                            color=\"black\"\n                            onClick={() => {\n                              history.push(\n                                `/intelligence/${match.params.userid}`\n                              );\n                            }}\n                          >\n                            Gather Intelligence\n                          </Button>\n                          <br />\n                          <br />\n                        </>\n                      )}\n                    </Fragment>\n                  )}\n\n                  <Modal\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    trigger={<Button color=\"black\">Recent Battles</Button>}\n                  >\n                    <Modal.Header>Recent Battles</Modal.Header>\n                    <Modal.Content scrolling>\n                      <Modal.Description>\n                        <Table celled padded>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>Type</Table.HeaderCell>\n                              <Table.HeaderCell>Result</Table.HeaderCell>\n                              <Table.HeaderCell>Description</Table.HeaderCell>\n                              <Table.HeaderCell>Date</Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Header>Attack</Header>\n                              </Table.Cell>\n                              <Table.Cell>Lost</Table.Cell>\n                              <Table.Cell>\n                                <Table.Cell>\n                                  Target: username(clickable).\n                                  <br /> 5000 land gained.\n                                  <br /> Destroyed 500 units.\n                                  <br /> Lost 50 units.\n                                </Table.Cell>\n                              </Table.Cell>\n                              <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                        </Table>\n                      </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                      <Button onClick={() => setOpen(false)} color=\"black\">\n                        Close <Icon name=\"close\" />\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </Grid.Column>\n              )}\n            </Fragment>\n          )}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userID: state.user.userid,\n});\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React, { Fragment } from 'react';\nimport {\n  Grid,\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Label,\n  TextArea,\n  Item,\n  Card,\n  Header,\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useImmer } from 'use-immer';\nimport axios from 'axios';\n\nconst CreateEditProfile = ({ user, history }) => {\n  const [name, setName] = useImmer(user.username ? user.username : '');\n  const [bio, setBio] = useImmer(\n    user.otherThings.bio ? user.otherThings.bio : ''\n  );\n  //const [skills, setSkills] = useImmer([]);\n  const [skills, setSkills] = useImmer(\n    user.otherThings.skillsets ? user.otherThings.skillsets : []\n  );\n  //const [experiences, setExperiences] = useImmer([]);\n  const [experiences, setExperiences] = useImmer(\n    user.otherThings.experiences ? user.otherThings.experiences : []\n  );\n  /*const [socials, setSocials] = useImmer({\n    youtube: '',\n    twitter: '',\n    facebook: '',\n    instagram: '',\n  });*/\n  const [socials, setSocials] = useImmer({\n    youtube:\n      user.otherThings.social &&\n      (user.otherThings.social.youtube ? user.otherThings.social.youtube : ''),\n    twitter:\n      user.otherThings.social &&\n      (user.otherThings.social.twitter ? user.otherThings.social.twitter : ''),\n    facebook:\n      user.otherThings.social &&\n      (user.otherThings.social.facebook\n        ? user.otherThings.social.facebook\n        : ''),\n    instagram:\n      user.otherThings.social &&\n      (user.otherThings.social.instagram\n        ? user.otherThings.social.instagram\n        : ''),\n  });\n  const [website, setWebsite] = useImmer('');\n  const [company, setCompany] = useImmer('');\n\n  const onAddSkills = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.push(''));\n  };\n  const onSkillChange = (e) => {\n    console.log(e.target.id);\n    setSkills((draft) => {\n      draft[e.target.id] = e.target.value;\n    });\n  };\n  const onSkillDelete = (e) => {\n    e.preventDefault();\n    setSkills((draft) => void draft.splice(e.target.value, 1));\n  };\n\n  const onAddExp = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.push({\n        title: '',\n        company: '',\n        description: '',\n      });\n    });\n  };\n\n  const onExpChange = (e) => {\n    setExperiences((draft) => {\n      draft[e.target.id][e.target.name] = e.target.value;\n    });\n  };\n\n  const onExpDelete = (e) => {\n    e.preventDefault();\n    setExperiences((draft) => {\n      draft.splice(e.target.id, 1);\n    });\n  };\n\n  const onSocialChange = (e) => {\n    setSocials((draft) => {\n      draft[e.target.name] = e.target.value;\n    });\n  };\n\n  const onWebsiteChange = (e) => {\n    setWebsite((draft) => e.target.value);\n  };\n\n  const onCompanyChange = (e) => {\n    setCompany((draft) => e.target.value);\n  };\n\n  const onNameChange = (e) => {\n    setName((draft) => e.target.value);\n  };\n  const onBioChange = (e) => {\n    setBio((draft) => e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const formData = {\n        name: name,\n        bio: bio,\n        skills: skills,\n        experiences: experiences,\n        socialmedias: socials,\n        website: website,\n        company: company,\n      };\n      console.log('Form Data: ', formData);\n      const submitForm = await axios.post(\n        '/api/users/pushprofiledata',\n        formData\n      );\n      console.log('Submitted Form: ', submitForm);\n      history.push(`/profile/${user.userid}`);\n    } catch (err) {\n      console.error('Error: ', err.response.data);\n    }\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: 550 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"First Name\"\n              name=\"name\"\n              value={name}\n              onChange={onNameChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Bio</label>\n            <TextArea\n              placeholder=\"Bio\"\n              name=\"bio\"\n              value={bio}\n              onChange={onBioChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Skill Sets</label>\n            <Button color=\"blue\" onClick={onAddSkills}>\n              Add\n            </Button>\n            {skills.map((skill, index) => (\n              <Fragment key={index}>\n                <Input\n                  label\n                  value={skill}\n                  id={index}\n                  key={index}\n                  onChange={onSkillChange}\n                >\n                  <Label>{index + 1}</Label>\n                  <input />\n                  <Button value={index} onClick={onSkillDelete}>\n                    Delete\n                  </Button>\n                </Input>\n                <br />\n                <br />\n              </Fragment>\n            ))}\n          </Form.Field>\n          <Form.Field>\n            <label>Experiences</label>\n            <Button color=\"blue\" onClick={onAddExp}>\n              Add\n            </Button>\n            <Item.Group style={{ textAlign: 'left' }}>\n              {experiences.map((experience, index) => (\n                <Fragment key={index}>\n                  {/* <Item>\n                    <Item.Content>\n                      <Item.Header>{experience.title}</Item.Header>\n                      <Item.Meta>{experience.company}</Item.Meta>\n                      <Item.Description>\n                        {experience.description}\n                      </Item.Description>\n                    </Item.Content>\n                 </Item>*/}\n                  <Header as=\"h3\">{index + 1}.</Header>\n                  <Input\n                    label\n                    value={experience.title}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"title\"\n                  >\n                    <Label>Title</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.company}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"company\"\n                  >\n                    <Label>Company</Label>\n                    <input />\n                  </Input>\n                  <Input\n                    label\n                    value={experience.description}\n                    onChange={onExpChange}\n                    id={index}\n                    name=\"description\"\n                  >\n                    <Label>Description</Label>\n                    <input />\n                  </Input>\n                  <Button color=\"red\" fluid id={index} onClick={onExpDelete}>\n                    Delete\n                  </Button>\n                </Fragment>\n              ))}\n            </Item.Group>\n          </Form.Field>\n          <Form.Field>\n            <label>Socials</label>\n            <Input\n              label=\"youtube\"\n              placeholder=\"Youtube\"\n              name=\"youtube\"\n              onChange={onSocialChange}\n              value={socials.youtube}\n            />\n            <Input\n              label=\"twitter\"\n              placeholder=\"Twitter\"\n              name=\"twitter\"\n              onChange={onSocialChange}\n              value={socials.twitter}\n            />\n            <Input\n              label=\"facebook\"\n              placeholder=\"Facebook\"\n              name=\"facebook\"\n              onChange={onSocialChange}\n              value={socials.facebook}\n            />\n            <Input\n              label=\"instagram\"\n              placeholder=\"instagram\"\n              name=\"instagram\"\n              onChange={onSocialChange}\n              value={socials.instagram}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Website</label>\n            <input\n              placeholder=\"Website\"\n              value={website}\n              onChange={onWebsiteChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Company</label>\n            <input\n              placeholder=\"Company\"\n              value={company}\n              onChange={onCompanyChange}\n            />\n          </Form.Field>\n\n          <Button type=\"submit\" color=\"black\">\n            Submit\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nCreateEditProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(CreateEditProfile);\n","import React, { Fragment, useEffect } from 'react';\nimport {\n  Grid,\n  Header,\n  Button,\n  Modal,\n  Image,\n  Icon,\n  Table,\n  Item,\n  Input,\n  Label,\n  List,\n} from 'semantic-ui-react';\nimport { useImmer } from 'use-immer';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nconst IntelligencePage = ({ match }) => {\n  useEffect(() => {\n    const getUnits = async () => {\n      try {\n        const result = await axios.get('/api/users/getmyself');\n        setUnits((draft) => {\n          draft.recon = result.data.intelligenceDivision.recons;\n          draft.commando = result.data.intelligenceDivision.commandos;\n        });\n      } catch (err) {\n        console.error(err.response.data.msg);\n      }\n    };\n    getUnits();\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const [tasksopen, setTasksOpen] = React.useState(false);\n  const [units, setUnits] = useImmer({\n    recon: Number,\n    commando: Number,\n  });\n  const [tabs, setTabs] = useImmer({\n    profile: true,\n    battle: false,\n  });\n  const [recon, setRecon] = useImmer(0);\n  const onChangeRecon = (e) => {\n    setRecon((draft) => e.target.value);\n  };\n  const [commando, setCommando] = useImmer(0);\n  const onChangeCommando = (e) => {\n    setCommando((draft) => e.target.value);\n  };\n\n  const onSendRecon = async (e) => {\n    try {\n      e.preventDefault();\n      const result = await axios.post('/api/actions/sendrecons', {\n        recon,\n        target,\n      });\n      console.log(result.data);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n  const onSendCommando = async (e) => {\n    try {\n      e.preventDefault();\n      console.log('commando ', commando);\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n\n  const [target, setTarget] = useImmer(\n    match.params.userid ? match.params.userid : ''\n  );\n  const onChangeTarget = (e) => {\n    setTarget((draft) => e.target.value);\n  };\n  const [intelTasks, setIntelTasks] = useImmer([]);\n  const onGetIntelTasks = async () => {\n    try {\n      const result = await axios.get('/api/actions/getinteltasks');\n      setIntelTasks((draft) => result.data);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n\n  const [intel, setIntel] = useImmer([]);\n  const getIntels = async () => {\n    try {\n      const result = await axios.get('/api/actions/getintelreports');\n      console.log(result.data[0].intelligenceDivision.intels);\n      setIntel((draft) => result.data[0].intelligenceDivision.intels);\n    } catch (err) {\n      console.error(err.response.data.msg);\n    }\n  };\n  const profileTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" value={target} onChange={onChangeTarget} />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Recon</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.recon}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={recon}\n                  onChange={onChangeRecon}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n\n        <Button color=\"black\" fluid onClick={onSendRecon}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={tasksopen}\n          onClose={() => setTasksOpen(false)}\n          onOpen={() => {\n            setTasksOpen(true);\n            onGetIntelTasks();\n          }}\n          trigger={\n            <Button color=\"red\" fluid>\n              On-going tasks\n            </Button>\n          }\n        >\n          <Modal.Header>On-going tasks</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Amount</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Return In</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intelTasks.map((task, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>{task.forces[0].amount} units</Table.Cell>\n                      <Table.Cell>{task.target.name}</Table.Cell>\n                      <Table.Cell>{task.doneInWhatTick}</Table.Cell>\n                      <Table.Cell>{task.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setTasksOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => {\n            setOpen(true);\n            getIntels();\n          }}\n          trigger={\n            <Button color=\"black\" fluid>\n              Intels gathered\n            </Button>\n          }\n        >\n          <Modal.Header>Intels gathered</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {intel.map((info, index) => (\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Header as=\"h2\">{info.result}</Header>\n                      </Table.Cell>\n\n                      <Table.Cell>\n                        <List>\n                          <List.Item>\n                            <b>Intelligence Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Recons: {info.intelligenceDivision.recons}\n                              </List.Item>\n                              <List.Item>\n                                Commandos: {info.intelligenceDivision.commandos}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Infantry Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.infantryDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{' '}\n                                {info.infantryDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Air Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.airDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points:{info.airDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                        <List>\n                          <List.Item>\n                            <b>Sea Division</b>\n                          </List.Item>\n                          <List.Item>\n                            <List.List>\n                              <List.Item>\n                                Attack Points: {info.navalDivision.attackPts}\n                              </List.Item>\n                              <List.Item>\n                                Defence Points: {info.navalDivision.defencePts}\n                              </List.Item>\n                            </List.List>\n                          </List.Item>\n                        </List>\n                      </Table.Cell>\n                      <Table.Cell singleLine>{info.target.name}</Table.Cell>\n                      <Table.Cell>{info.date}</Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n  const battleTab = (\n    <>\n      <Grid.Column>\n        <Input label=\"Target:\" />\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>You have</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header>Commandos</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header>{units.commando}</Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Input\n                  placeholder=\"Amount...\"\n                  type=\"number\"\n                  value={commando}\n                  onChange={onChangeCommando}\n                />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Button color=\"black\" fluid onClick={onSendCommando}>\n          Send\n        </Button>\n        <br />\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          trigger={\n            <Button color=\"black\" fluid>\n              Missions\n            </Button>\n          }\n        >\n          <Modal.Header>Missions</Modal.Header>\n          <Modal.Content scrolling>\n            <Modal.Description>\n              <Table celled padded>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Result</Table.HeaderCell>\n                    <Table.HeaderCell>Description</Table.HeaderCell>\n                    <Table.HeaderCell>Target</Table.HeaderCell>\n                    <Table.HeaderCell>Date</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as=\"h2\" textAlign=\"center\">\n                        Lost\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell singleLine>Sent 100. Lost 50.</Table.Cell>\n                    <Table.Cell>\n                      <a href=\"#!\">Enermy Name</a>\n                    </Table.Cell>\n                    <Table.Cell>2020/10/10 | 5:44PM</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => setOpen(false)} color=\"black\">\n              Close <Icon name=\"close\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </>\n  );\n\n  const onTab = (e) => {\n    e.preventDefault();\n    setTabs((draft) => {\n      draft[e.target.name] = true;\n      if (e.target.name === 'profile') {\n        draft.battle = false;\n      } else {\n        draft.profile = false;\n      }\n    });\n  };\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Profile</title>\n      </Helmet>\n      <Grid\n        textAlign=\"center\"\n        verticalAlign=\"middle\"\n        style={{ height: '100vh' }}\n        columns={2}\n        divided\n      >\n        <Grid.Row style={{ maxWidth: 600 }}>\n          <Grid.Column>\n            <Button name=\"profile\" onClick={onTab}>\n              Recon\n            </Button>\n            <Button name=\"battle\" onClick={onTab}>\n              Sabotage\n            </Button>\n          </Grid.Column>\n          {tabs.profile && profileTab}\n          {tabs.battle && battleTab}\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IntelligencePage;\n","import React, { useEffect } from 'react';\nimport { Grid, Header, Icon, Table, Item, Button } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\n\nconst NewsPage = () => {\n  useEffect(() => {\n    const getLogs = async () => {\n      try {\n        const logs = await axios.get('/api/users/getnews');\n        console.log(logs.data.AnDLogs);\n        setUserLogs((draft) => logs.data.AnDLogs);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n    getLogs();\n  }, []);\n  const [userLogs, setUserLogs] = useImmer([]);\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" style={{ height: '100vh' }}>\n      <Grid.Column style={{ maxWidth: '750px' }}>\n        <Header as=\"h1\">News</Header>\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Type</Table.HeaderCell>\n              <Table.HeaderCell>Result</Table.HeaderCell>\n              <Table.HeaderCell>Description</Table.HeaderCell>\n              <Table.HeaderCell>From</Table.HeaderCell>\n              <Table.HeaderCell>Date</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {userLogs.map((log) => (\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.type}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as=\"h2\" textAlign=\"center\">\n                    {log.result}\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>{log.description}</Table.Cell>\n                <Table.Cell>\n                  <a href=\"#!\">{log.from.name}</a>\n                </Table.Cell>\n                <Table.Cell>{log.date}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          ))}\n        </Table>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default NewsPage;\n","import { LOGIN, INIT_USER, RESET_USER, SIGNUP } from '../actions/types';\nimport produce from 'immer';\n\nconst initialState = {\n  userid: '',\n  username: '',\n  email: '',\n  experiences: [],\n  otherThings: {},\n  isAuthenticated: false,\n};\n\nconst user = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case SIGNUP:\n      case INIT_USER:\n      case LOGIN:\n        draft.userid = action.payload._id;\n        draft.username = action.payload.name;\n        draft.email = action.payload.email;\n        draft.experiences = action.payload.experiences;\n        draft.otherThings = action.payload;\n        draft.isAuthenticated = true;\n        break;\n\n      case RESET_USER:\n        draft.userid = '';\n        draft.username = '';\n        draft.email = '';\n        draft.experiences = [];\n        draft.otherThings = {};\n        draft.isAuthenticated = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default user;\n","import produce from 'immer';\nimport { GETITEMS } from '../actions/types';\n\nconst initialState = { data: {}, isLoading: true };\n\nconst items = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case GETITEMS:\n        draft.data = action.payload[0];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default items;\n","import produce from 'immer';\nimport { ADDTASKS } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  isLoading: true,\n};\n\nconst tasks = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADDTASKS:\n        draft.tasks = [{ testing: 'tasking' }];\n        draft.isLoading = false;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default tasks;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport items from './items';\nimport toDoList from './toDoList';\n\nconst allReducers = combineReducers({ user, items, toDoList });\n\nexport default allReducers;\n","import thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst lacreateStore = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default lacreateStore;\n","import React, { Fragment, useEffect } from 'react';\n\nimport { useImmer } from 'use-immer';\nimport ServerTime from '../ServerTime/ServerTime';\nimport axios from 'axios';\n\nimport { withRouter, Redirect, Link } from 'react-router-dom';\n\nimport { Icon, Menu, Segment, Sidebar, Header } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst SideNav = ({ user, children, history }) => {\n  useEffect(() => {\n    const getMessagesNotRead = async () => {\n      try {\n        const msgs = await axios.get('/api/users/geturmessagescount');\n        setMessageCount((draft) => msgs.data);\n        const news = await axios.get('/api/users/geturnewscount');\n        setNewsCount((draft) => news.data);\n      } catch (err) {\n        console.error(err.response);\n      }\n    };\n\n    getMessagesNotRead();\n  });\n  const [messageCount, setMessageCount] = useImmer(Number);\n  const [newsCount, setNewsCount] = useImmer(Number);\n  return (\n    <Fragment>\n      <div\n        style={{\n          position: 'fixed',\n          zIndex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          width: '250px',\n          background: '#1B1C1D',\n          overflowX: 'hidden',\n          flex: 1,\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            overflowY: 'auto',\n          }}\n        >\n          <Menu vertical inverted size=\"massive\">\n            <Menu.Item>\n              <ServerTime />\n            </Menu.Item>\n            <Menu.Item>\n              <Menu.Menu>\n                <Menu.Item\n                  name=\"Home\"\n                  onClick={() => {\n                    history.push('/homepage');\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"My Profile\"\n                  onClick={() => {\n                    history.push(`/profile/${user.userid}`);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Explore Land\"\n                  onClick={() => {\n                    history.push('/explore', user);\n                  }}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name={'Messages' + (messageCount !== 0 ? messageCount : '')}\n                  onClick={() => history.push('/messages')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: messageCount !== 0 && 'yellow',\n                  }}\n                />\n                <Menu.Item\n                  name={'My News' + (newsCount !== 0 ? newsCount : '')}\n                  onClick={() => history.push('/news')}\n                  style={{\n                    fontSize: 'x-large',\n                    color: newsCount !== 0 && 'yellow',\n                  }}\n                />\n\n                <Menu.Item\n                  name=\"Buildings\"\n                  onClick={() => history.push('/buildings')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Military\"\n                  onClick={() => history.push('/military')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Attack\"\n                  onClick={() => history.push('/attack')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Intelligence\"\n                  onClick={() => history.push('/intelligence')}\n                  style={{ fontSize: 'x-large' }}\n                />\n                <Menu.Item\n                  name=\"Scoreboard\"\n                  onClick={() => history.push('/scoreboard')}\n                  style={{ fontSize: 'x-large' }}\n                />\n              </Menu.Menu>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </div>\n      {children}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(SideNav));\n","import React, { useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport { useImmer } from 'use-immer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Grid, Header } from 'semantic-ui-react';\n\nimport LoginPage from './components/authPage/AuthPage';\nimport SignUp from './components/SignupPage/SignupPage';\nimport HomePage from './components/HomePage/HomePage';\nimport ControlPanel from './components/controlPanel/ControlPanel';\nimport ExploreLandPage from './components/GameUI/ExploreLand/ExploreLand';\nimport MyMessagesPage from './components/GameUI/MyMessages/MyMessages';\nimport BuildingsPage from './components/GameUI/Buildings/Buildings';\nimport MilitaryPage from './components/GameUI/Military/MilitaryPage';\nimport AttackPage from './components/GameUI/Attack/Attack';\nimport ScoreboardPage from './components/GameUI/Scoreboard/Scoreboard';\nimport ProfilePage from './components/GameUI/Profile/Profile';\nimport CreateEditProfilePage from './components/GameUI/Profile/CreateEditProfile';\nimport IntelligencePage from './components/GameUI/Intelligence/Intelligence';\nimport NewsPage from './components/GameUI/News/News';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport SideNav from './components/SideNav/SideNav';\n\nimport { initUser, resetUser } from './redux/actions/user';\n\nconst App = () => {\n  const [loadingStatus, setLoadingStatus] = useImmer({\n    done: false,\n    isAuth: false,\n  });\n\n  useEffect(() => {\n    async function testingFunc() {\n      try {\n        const user = await axios.get('/api/auth/getuser');\n        console.log('user', user);\n        store.dispatch(initUser(user.data));\n      } catch (err) {\n        store.dispatch(resetUser());\n      }\n      setLoadingStatus((draft) => {\n        draft.done = true;\n        draft.isAuth = store.getState().user.isAuthenticated;\n      });\n    }\n    testingFunc();\n  }, [setLoadingStatus]);\n  return (\n    <Provider store={store}>\n      {loadingStatus.done ? (\n        <Fragment>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={LoginPage} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <SideNav>\n                <Route exact path=\"/homepage\" component={HomePage} />\n                <Route exact path=\"/control\" component={ControlPanel} />\n                <Route exact path=\"/explore\" component={ExploreLandPage} />\n                <Route exact path=\"/messages\" component={MyMessagesPage} />\n                <Route exact path=\"/buildings\" component={BuildingsPage} />\n                <Route exact path=\"/military\" component={MilitaryPage} />\n                <Route exact path=\"/attack\" component={AttackPage} />\n                <Route exact path=\"/attack/:userid\" component={AttackPage} />\n                <Route exact path=\"/scoreboard\" component={ScoreboardPage} />\n                <Route exact path=\"/profile/:userid\" component={ProfilePage} />\n                <Route\n                  exact\n                  path=\"/ceprofile\"\n                  component={CreateEditProfilePage}\n                />\n                <Route exact path=\"/news\" component={NewsPage} />\n                <Route\n                  exact\n                  path=\"/intelligence\"\n                  component={IntelligencePage}\n                />\n                <Route\n                  exact\n                  path=\"/intelligence/:userid\"\n                  component={IntelligencePage}\n                />\n              </SideNav>\n            </Switch>\n          </Router>\n        </Fragment>\n      ) : (\n        <Grid\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n          style={{ height: '100vh' }}\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h3\">Loading....</Header>\n          </Grid.Column>\n        </Grid>\n      )}\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}